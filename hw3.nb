(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    416240,       7732]
NotebookOptionsPosition[    413376,       7633]
NotebookOutlinePosition[    413833,       7650]
CellTagsIndexPosition[    413790,       7647]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
CSE 477/598 G. Farin
Homework 3: Moving isoparametric curve on a Bezier surface and its Frenet frame
Due: 4/15 by midnight 
\
\>", "Title",
 CellChangeTimes->{{3.5359856622878494`*^9, 3.5359857281667647`*^9}, {
   3.535985765701232*^9, 3.5359857888048725`*^9}, {3.5363710720880747`*^9, 
   3.536371077015356*^9}, 3.5378963864501743`*^9, {3.537896472718326*^9, 
   3.5378964735139275`*^9}, {3.5378965379264407`*^9, 3.537896547707658*^9}, {
   3.5378973956351476`*^9, 3.537897401547558*^9}, 3.5685528632328386`*^9, {
   3.5685529006579585`*^9, 3.568552925743241*^9}, {3.6002931746506443`*^9, 
   3.6002931830278587`*^9}, {3.600513049027987*^9, 3.600513086208397*^9}, {
   3.6005133532350903`*^9, 3.6005134009779224`*^9}, {3.6018132454408627`*^9, 
   3.601813276750907*^9}, {3.6051227614159517`*^9, 3.605122769574766*^9}, {
   3.605122912954618*^9, 3.605122927681044*^9}, {3.605125438193454*^9, 
   3.6051254586294894`*^9}, {3.6051927144102464`*^9, 3.605192717857853*^9}, {
   3.6053947599178543`*^9, 3.605394766637864*^9}, {3.6055719367088823`*^9, 
   3.6055719368024826`*^9}, {3.606522119743991*^9, 3.606522119899991*^9}, {
   3.632877825035349*^9, 3.6328778260961514`*^9}},
 FontFamily->"Arial",
 FontSize->18,
 FontWeight->"Bold"],

Cell["\<\
The purpose of this assignment is to work with Bezier surfaces and Frenet \
frames for curves.
 Key concepts:
-- 2-stage evaluation of Bezier surfaces
-- Isoparametric curves on surfaces
-- Evaluation of a Bezier curve with the de Casteljau algorithm
-- Evaluation of the first and second derivatives of Bezier curves with the \
de Casteljau algorithm
-- Calculation of the Frenet frame at a point on a Bezier curve\
\>", "Subsubtitle",
 CellChangeTimes->{{3.605122969177117*^9, 3.605123031842427*^9}, {
  3.605123066599288*^9, 3.605123132337804*^9}, {3.605123174223877*^9, 
  3.6051234167419033`*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["Homework details:",
  FontWeight->"Bold"],
 "\n\nYou will produce three \[OpenCurlyDoubleQuote]plots\
\[CloseCurlyDoubleQuote], the specifics of which are outlined in Parts 1,2,3 \
below and in comments in the code section below. I have provided hints in the \
code section as well. Please fill-in your code under each section header. I \
have provided two data sets. Leave these data sets in the code, as Tao will \
test your program with them.\n\nPart 1: Display the given surface, contol \
points, and control polygon. Save the graphics entities for these three items \
and use them in Part 2 and 3. \n\nPart 2: Display an iso-curve on the surface \
and its associated control polygon. \[LineSeparator]Use  Manipulate with two \
controls. One control will allow the user to select between a u=constant or \
v=constant iso=curve. A second control (a slider) will allow the user to \
select which iso-curve is displayed.\n\nPart3: Display an iso-curve, its \
control points, and the Frenet frame at a point on the iso-curve. Use \
Manipulate with a slider control that allows the user to move the frame along \
the chosen iso-curve.\n\n598 Students must do Extra Credit 3.\n\nSeveral \
students did poorly on earlier homeworks and have asked for an opportunity to \
do extra credit. Here are some ideas. If you have something else in mind, \
please email me. Tao will decide the number of points extra credit work is \
worth.\n\nExtra Credit 1: Create an interesting Bezier surface of your own \
design. (This has to be quite interesting and you must discuss what it \
demonstrates in order to get credit.)\n\nExtra Credit 2:  In Part 3, add \
Manipulate controls for the u- or v- direction and the iso-curve parameter.\n\
\nExtra Credit 3: Create an interesting Bezier curve in the domain and plot \
this CoNS.\n\nExtra Credit 4: Add the moving Frenet frame to the CoNS in \
Extra Credit 3. (You can use forward differences to approximated the \
derivatives.)\n\n",
 StyleBox["Tips:",
  FontWeight->"Bold"],
 "\n-- Test your de Casteljau code with simple examples before trying out \
with the given data.\n-- Make sure your plots work first without Manipulate.\n\
-- Use Print to check intermediate results! "
}], "Subsubtitle",
 CellChangeTimes->{{3.605123583147395*^9, 3.6051237655585155`*^9}, {
   3.6051240129749503`*^9, 3.605124014004552*^9}, {3.6051240518346186`*^9, 
   3.6051240614910355`*^9}, {3.605124349295941*^9, 3.605124472972958*^9}, {
   3.6051245120822268`*^9, 3.6051245842011538`*^9}, {3.605124790979517*^9, 
   3.605124819745967*^9}, {3.6051248637692447`*^9, 3.6051248768264675`*^9}, {
   3.605125178296997*^9, 3.6051252257990804`*^9}, {3.605125266452752*^9, 
   3.60512541368581*^9}, {3.605125485960737*^9, 3.6051254938387513`*^9}, {
   3.6051255848805113`*^9, 3.605125622273777*^9}, {3.6051916195691233`*^9, 
   3.605191720750901*^9}, {3.6051921820281115`*^9, 3.605192675628578*^9}, {
   3.6051927815371647`*^9, 3.6051928455284767`*^9}, {3.6051928777581334`*^9, 
   3.60519290981619*^9}, {3.605192942186247*^9, 3.60519299535114*^9}, {
   3.605193134175784*^9, 3.605193207589513*^9}, {3.605197449829764*^9, 
   3.605197486926629*^9}, {3.6051975415891247`*^9, 3.6051975465499334`*^9}, {
   3.6051977175262337`*^9, 3.6051977451538825`*^9}, {3.6052837720354004`*^9, 
   3.605283773111802*^9}, {3.6052838825927944`*^9, 3.605283931732881*^9}, {
   3.6052839648205395`*^9, 3.6052839654757404`*^9}, {3.6052842212381897`*^9, 
   3.605284261891861*^9}, 3.6053948129479876`*^9}],

Cell[TextData[{
 "\n",
 StyleBox["Instructions on turning in your homework :",
  FontWeight->"Bold"],
 " \n--Name your notebook accordingly\n{cse477, cse598} _hw3 _lastname \
_firstname.nb\n--Include this filename inside the.nb file at the top\n\
--Submit it via the course Blackboard site. Multiple submissions are allowed, \
but only the last one will be graded.\n--Be sure to include comments/text \
describing your work.This will make it possible to receive partial credit."
}], "Subsubtitle",
 CellChangeTimes->{{3.605123456693573*^9, 3.605123473167202*^9}, {
  3.6051235090628653`*^9, 3.605123543180125*^9}, {3.6051235770945845`*^9, 
  3.6051235799337893`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Section", "Title",
 CellChangeTimes->{{3.6052842858847027`*^9, 3.6052842922651143`*^9}, 
   3.605571998672191*^9}],

Cell["\<\
Create control points of the surface
Choose \[OpenCurlyDoubleQuote]isurf\[CloseCurlyDoubleQuote] to load one of \
the options into \[OpenCurlyDoubleQuote]pts\[CloseCurlyDoubleQuote]

Note: don\[CloseCurlyQuote]t create a surface that is linear in one direction \
because the Frenet frame will fail without some special coding to to deal \
with a zero second derivative. (You don\[CloseCurlyQuote]t need to deal with \
this.)\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6051205224292183`*^9, 3.605120532366436*^9}, {
  3.6051205756565123`*^9, 3.6051205867013316`*^9}, {3.605120899497481*^9, 
  3.6051209090134974`*^9}, {3.6051209395739512`*^9, 3.6051209926920443`*^9}, {
  3.6051225233511333`*^9, 3.605122523897134*^9}, {3.6051255338216214`*^9, 
  3.605125559811267*^9}, {3.605284294371118*^9, 3.6052842948547187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "chooses", " ", "isurf", " ", 
    RowBox[{"value", ".", " ", 
     RowBox[{"Here", ":", " ", 
      RowBox[{
      "values", " ", "0", " ", "and", " ", "1", " ", "are", " ", 
       "valid"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Control", " ", "points", " ", "are", " ", "loaded", " ", "into", " ", 
    "pts", " ", "Table"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"isurf", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"isurf", " ", "==", " ", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"pts", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "3", ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3", ",", "0"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "0"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"isurf", " ", "==", " ", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"pts", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", 
           RowBox[{
            RowBox[{"Sin", "[", "i", "]"}], "*", 
            RowBox[{"Sin", "[", "j", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"If", " ", 
       RowBox[{"pts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "is", " ", "a", " ", "row", " ", 
       "of", " ", "points", " ", "in", " ", "the", " ", "u"}], "-", 
      "direction"}], ",", " ", 
     RowBox[{
      RowBox[{
      "then", " ", "this", " ", "table", " ", "is", " ", "handy", " ", "for", 
       " ", "grabbing", " ", "the", " ", "contol", " ", "points", " ", "in", 
       " ", "the", " ", "v"}], "-", "direction"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ptsT", " ", "=", " ", 
     RowBox[{"Transpose", "[", "pts", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Store", " ", "the", " ", "surface", " ", "degree", " ", "in", " ", "u", 
     " ", "and", " ", "v"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dims", " ", "=", " ", 
     RowBox[{"Dimensions", "[", "pts", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degu", " ", "=", " ", 
     RowBox[{
      RowBox[{"dims", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degv", " ", "=", " ", 
     RowBox[{
      RowBox[{"dims", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "1"}]}], ";"}], 
   "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Patch degree \>\"", ",", "degu", ",", "\"\< by \>\"", ",", "degv"}],
      "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<control points \>\"", ",", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "pts", "]"}], "//", "N"}]}], "]"}], ";"}], 
   " ", "\[IndentingNewLine]", " "}]}]], "Input",
 CellChangeTimes->{{3.605124151300393*^9, 3.6051243145858803`*^9}, {
  3.6051246370384464`*^9, 3.6051246927929444`*^9}, {3.6051247437114334`*^9, 
  3.6051247765806913`*^9}, {3.60512577215884*^9, 3.6051257744676437`*^9}, {
  3.6051932444367776`*^9, 3.6051932652004137`*^9}, {3.6051934620571594`*^9, 
  3.60519346240036*^9}, {3.6052843118587484`*^9, 3.605284374602059*^9}, {
  3.6052844781550407`*^9, 3.605284519323513*^9}, {3.605808895603244*^9, 
  3.60580889570325*^9}, {3.6058089802800875`*^9, 3.605808980519101*^9}, {
  3.605809741981654*^9, 3.60580974226667*^9}, {3.606601094787814*^9, 
  3.6066010948788195`*^9}, {3.6066011628987103`*^9, 3.6066011630947213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Patch degree \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" by \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Patch degree ", 3, " by ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.605125809130905*^9, 3.6051260126000624`*^9, 3.605126073190569*^9, 
   3.6051932485083847`*^9, 3.6051933965058446`*^9, 3.6051934660039663`*^9, 
   3.6053966893332233`*^9, 3.6053968130864534`*^9, 3.6053970836069736`*^9, 
   3.6053971377230816`*^9, 3.6053971705071373`*^9, 3.6053972045132217`*^9, 
   3.6054834220157824`*^9, 3.605483480562685*^9, 3.605484356510228*^9, 
   3.605484389941087*^9, 3.605484506660801*^9, 3.605484792146798*^9, 
   3.6054857656353083`*^9, 3.605485823105809*^9, 3.605485974115074*^9, 
   3.6054860234735613`*^9, 3.605528462343439*^9, {3.605572233359003*^9, 
   3.6055722555890427`*^9}, 3.6055729321008306`*^9, 3.6055731484576106`*^9, 
   3.6055731852424755`*^9, {3.605573436585769*^9, 3.6055734467098446`*^9}, 
   3.605573483844041*^9, 3.605573825134859*^9, {3.605573923085257*^9, 
   3.6055739406613655`*^9}, 3.6055741718298707`*^9, 3.6055743708243346`*^9, 
   3.6055747352636013`*^9, 3.6056281729541426`*^9, 3.6056282174142203`*^9, 
   3.605628558212419*^9, 3.605628706428279*^9, 3.605629612513489*^9, 
   3.605629951408346*^9, 3.6056302572031517`*^9, 3.6056307331153092`*^9, 
   3.6056322072990007`*^9, 3.6056328930411897`*^9, 3.6056333337233953`*^9, 
   3.6056333815671315`*^9, 3.605633423511531*^9, 3.605633477887641*^9, 
   3.605633529167574*^9, {3.6056335751362033`*^9, 3.605633585937821*^9}, 
   3.605807512654144*^9, 3.6058077413642254`*^9, 3.6058078655813303`*^9, 
   3.6058084720450177`*^9, 3.6058085211828284`*^9, 3.6058088984564075`*^9, {
   3.6058089893406057`*^9, 3.6058090081416807`*^9}, 3.6058096895696564`*^9, 
   3.6058097735464597`*^9, 3.6058103106966324`*^9, 3.605810690889449*^9, 
   3.605811115085518*^9, 3.605811187324236*^9, 3.6058112449348097`*^9, 
   3.6058113476891565`*^9, 3.6058113811176853`*^9, 3.606000114388757*^9, 
   3.6060003959729643`*^9, 3.6060005250993595`*^9, 3.6060010908597636`*^9, {
   3.606001167964099*^9, 3.606001213068513*^9}, 3.606001323053037*^9, {
   3.606001383477332*^9, 3.6060014381597533`*^9}, 3.6060016175522723`*^9, 
   3.606002232045781*^9, {3.606002298168274*^9, 3.6060023139084682`*^9}, 
   3.606002376118763*^9, 3.60600269423251*^9, 3.6060028801737857`*^9, 
   3.6060029374860587`*^9, 3.606003120002637*^9, 3.6060031508828287`*^9, {
   3.6060032155751157`*^9, 3.60600324104532*^9}, 3.6060033905510473`*^9, 
   3.606245118999587*^9, 3.60624612990689*^9, 3.6062461960510063`*^9, 
   3.6062470724643726`*^9, 3.6062472542670918`*^9, 3.606440559298435*^9, 
   3.606522453813718*^9, 3.606600828662593*^9, 3.606601098038*^9, 
   3.606601174101351*^9, 3.606601302480694*^9, 3.6066013509634666`*^9, 
   3.6066014739335003`*^9, 3.60660164386922*^9, 3.606601751289364*^9, 
   3.6066019204440393`*^9, 3.606601961602393*^9, 3.6066020041178255`*^9, 
   3.606602055348755*^9, 3.6066022222233*^9, 3.60660226907898*^9, 
   3.6066023655724993`*^9, 3.606602529396869*^9, 3.6066026109595346`*^9, 
   3.606602689494026*^9, 3.606603016112708*^9, 3.6066030597462034`*^9, {
   3.606603090936988*^9, 3.6066031080679674`*^9}, 3.6066034504965534`*^9, 
   3.606603550061248*^9, 3.6066036162070312`*^9, 3.6066039017583637`*^9, 
   3.6066040014430656`*^9, 3.6066040973125486`*^9, 3.606604138454902*^9, 
   3.60660428912352*^9, {3.6066043945195484`*^9, 3.6066044368549695`*^9}, 
   3.606604609134824*^9, 3.622332240558289*^9, 3.6328778608908157`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"control points \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"0.`"},
            {"0.`"},
            {
             RowBox[{"-", "1.`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"0.`"},
            {"1.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"0.`"},
            {"2.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"0.`"},
            {"3.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"0.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"1.`"},
            {"1.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"2.`"},
            {"1.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"3.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"0.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"1.`"},
            {"1.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"2.`"},
            {"3.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"3.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"0.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"1.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"2.`"},
            {"0.`"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"3.`"},
            {
             RowBox[{"-", "1.`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["control points ", 
   MatrixForm[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGzv4sB+Nb49DoQN2YQ40cVz6YeK4aJj56OLo5uNy
By79cPUOaOah8xlw2Icmju4/dPPQxeH69gMAe7UWow==
    "]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.605125809130905*^9, 3.6051260126000624`*^9, 3.605126073190569*^9, 
   3.6051932485083847`*^9, 3.6051933965058446`*^9, 3.6051934660039663`*^9, 
   3.6053966893332233`*^9, 3.6053968130864534`*^9, 3.6053970836069736`*^9, 
   3.6053971377230816`*^9, 3.6053971705071373`*^9, 3.6053972045132217`*^9, 
   3.6054834220157824`*^9, 3.605483480562685*^9, 3.605484356510228*^9, 
   3.605484389941087*^9, 3.605484506660801*^9, 3.605484792146798*^9, 
   3.6054857656353083`*^9, 3.605485823105809*^9, 3.605485974115074*^9, 
   3.6054860234735613`*^9, 3.605528462343439*^9, {3.605572233359003*^9, 
   3.6055722555890427`*^9}, 3.6055729321008306`*^9, 3.6055731484576106`*^9, 
   3.6055731852424755`*^9, {3.605573436585769*^9, 3.6055734467098446`*^9}, 
   3.605573483844041*^9, 3.605573825134859*^9, {3.605573923085257*^9, 
   3.6055739406613655`*^9}, 3.6055741718298707`*^9, 3.6055743708243346`*^9, 
   3.6055747352636013`*^9, 3.6056281729541426`*^9, 3.6056282174142203`*^9, 
   3.605628558212419*^9, 3.605628706428279*^9, 3.605629612513489*^9, 
   3.605629951408346*^9, 3.6056302572031517`*^9, 3.6056307331153092`*^9, 
   3.6056322072990007`*^9, 3.6056328930411897`*^9, 3.6056333337233953`*^9, 
   3.6056333815671315`*^9, 3.605633423511531*^9, 3.605633477887641*^9, 
   3.605633529167574*^9, {3.6056335751362033`*^9, 3.605633585937821*^9}, 
   3.605807512654144*^9, 3.6058077413642254`*^9, 3.6058078655813303`*^9, 
   3.6058084720450177`*^9, 3.6058085211828284`*^9, 3.6058088984564075`*^9, {
   3.6058089893406057`*^9, 3.6058090081416807`*^9}, 3.6058096895696564`*^9, 
   3.6058097735464597`*^9, 3.6058103106966324`*^9, 3.605810690889449*^9, 
   3.605811115085518*^9, 3.605811187324236*^9, 3.6058112449348097`*^9, 
   3.6058113476891565`*^9, 3.6058113811176853`*^9, 3.606000114388757*^9, 
   3.6060003959729643`*^9, 3.6060005250993595`*^9, 3.6060010908597636`*^9, {
   3.606001167964099*^9, 3.606001213068513*^9}, 3.606001323053037*^9, {
   3.606001383477332*^9, 3.6060014381597533`*^9}, 3.6060016175522723`*^9, 
   3.606002232045781*^9, {3.606002298168274*^9, 3.6060023139084682`*^9}, 
   3.606002376118763*^9, 3.60600269423251*^9, 3.6060028801737857`*^9, 
   3.6060029374860587`*^9, 3.606003120002637*^9, 3.6060031508828287`*^9, {
   3.6060032155751157`*^9, 3.60600324104532*^9}, 3.6060033905510473`*^9, 
   3.606245118999587*^9, 3.60624612990689*^9, 3.6062461960510063`*^9, 
   3.6062470724643726`*^9, 3.6062472542670918`*^9, 3.606440559298435*^9, 
   3.606522453813718*^9, 3.606600828662593*^9, 3.606601098038*^9, 
   3.606601174101351*^9, 3.606601302480694*^9, 3.6066013509634666`*^9, 
   3.6066014739335003`*^9, 3.60660164386922*^9, 3.606601751289364*^9, 
   3.6066019204440393`*^9, 3.606601961602393*^9, 3.6066020041178255`*^9, 
   3.606602055348755*^9, 3.6066022222233*^9, 3.60660226907898*^9, 
   3.6066023655724993`*^9, 3.606602529396869*^9, 3.6066026109595346`*^9, 
   3.606602689494026*^9, 3.606603016112708*^9, 3.6066030597462034`*^9, {
   3.606603090936988*^9, 3.6066031080679674`*^9}, 3.6066034504965534`*^9, 
   3.606603550061248*^9, 3.6066036162070312`*^9, 3.6066039017583637`*^9, 
   3.6066040014430656`*^9, 3.6066040973125486`*^9, 3.606604138454902*^9, 
   3.60660428912352*^9, {3.6066043945195484`*^9, 3.6066044368549695`*^9}, 
   3.606604609134824*^9, 3.622332240558289*^9, 3.632877860922016*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot the input surface, control points, and polygon
Save the graphics entities for use in the next two plots.
-- You can use BezierFunction to display the surface
-- Use Opacity 0.8 for the surface display\
\>", "Subsubtitle",
 CellChangeTimes->{{3.605120646808237*^9, 3.6051206682894745`*^9}, {
  3.605193316025303*^9, 3.6051933662417917`*^9}, {3.6051935026016307`*^9, 
  3.6051935369840913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"set", " ", "up", " ", "graphics", " ", "variables"}], ",", " ", 
    RowBox[{"surf", " ", "function", " ", "from", " ", 
     RowBox[{"bilin", ".", "nb"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"surf", "[", 
      RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pts", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"degu", ",", 
            RowBox[{"i", "-", "1"}], ",", "u"}], "]"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"degv", ",", 
            RowBox[{"j", "-", "1"}], ",", "v"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"polygon", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Point", "[", "pts", "]"}], ",", " ", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", " ", "Green", ",", " ", 
        RowBox[{"Line", "[", "pts", "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"surfplot", " ", "=", " ", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"surf", "[", 
        RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.8", "]"}]}], ",", " ", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"Mesh", "\[Rule]", "False"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"netplot", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Red", ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Point", ",", " ", "pts"}], "]"}], ",", " ", "Gray", ",", 
        " ", 
        RowBox[{"Line", "[", "pts", "]"}], ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Transpose", "[", "pts", "]"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"CP", "'"}], "s", " ", "with", " ", "netting"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"show", " ", "the", " ", "graphics"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polygon", ",", " ", "surfplot", ",", " ", "netplot"}], "}"}], 
     ",", " ", 
     RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.605196345956225*^9, 3.6051963508858337`*^9}, {
   3.605396279702366*^9, 3.6053962963623953`*^9}, {3.605396606337055*^9, 
   3.6053967542823544`*^9}, {3.605396793224425*^9, 3.6053968055264435`*^9}, {
   3.6053968760165687`*^9, 3.6053968832825923`*^9}, {3.605396938732682*^9, 
   3.605397101951025*^9}, {3.6053971319530735`*^9, 3.6053971346630774`*^9}, {
   3.605397167357133*^9, 3.6053971674871335`*^9}, 3.6053971983511815`*^9, {
   3.6054834090521593`*^9, 3.6054834323585997`*^9}, {3.605483473386672*^9, 
   3.605483477489479*^9}, {3.6054841074713907`*^9, 3.6054842670752707`*^9}, {
   3.6054843040317354`*^9, 3.605484305326538*^9}, {3.605484340645*^9, 
   3.605484344560607*^9}, {3.6054843847306776`*^9, 3.6054844278491535`*^9}, {
   3.605484478915214*^9, 3.6054844896988306`*^9}, {3.605484540908357*^9, 
   3.6054845689572067`*^9}, {3.605484641310134*^9, 3.6054847051142454`*^9}, {
   3.6054847853919864`*^9, 3.605484818214444*^9}, {3.605484873797342*^9, 
   3.6054848877905664`*^9}, {3.605485029782016*^9, 3.6054850367708282`*^9}, {
   3.605485078968902*^9, 3.605485098266136*^9}, {3.605485204720723*^9, 
   3.605485276465249*^9}, {3.6054854393139353`*^9, 3.605485454555162*^9}, {
   3.605485492307228*^9, 3.605485549278528*^9}, {3.60548574945808*^9, 
   3.605485857082669*^9}, {3.6054859209033813`*^9, 3.6054860113523397`*^9}, {
   3.6055283160307817`*^9, 3.605528408460944*^9}, {3.605528453357823*^9, 
   3.6055284560410275`*^9}, {3.6055285048535137`*^9, 3.605528580482446*^9}, {
   3.6055720169554234`*^9, 3.6055720177822247`*^9}, {3.6058084166208477`*^9, 
   3.605808424888321*^9}, {3.6060011808982773`*^9, 3.606001185874288*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], 
     Point3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {
      1, 1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 
      3, 0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}]}, 
    {RGBColor[0, 1, 0], Thickness[0.005], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}]}}, 
   GraphicsComplex3DBox[CompressedData["
1:eJxdmHtUjfkaxytUB8MwGHSZjH0ybo3JGbHI21jHJWaGkyXDMS6lk6GQS4dj
uczBmplTwia5NLl07DJFKOWSXrfcRRehkPZ2aZNpchkj1NmdeT6/lvmj9a73
07Of9/d+9/f3PM9vdwqaFRDiYGdn98b218j296zxt+9dOhE98Llc/7XR2qGu
rkrfNvhWyMHwCxr/77J14rLfEqx6o1unl2aFl2pPhL+evvpSnuddPT5q5D/8
jXe1p8JHjV52sVezMj0z+UjzrPBHiu9vNX3itYBreoV53TijoVrxyLCpHXPs
8vXI6nM9/I3PFH+2uGpdZ/MZvX7Ndna/KR5s3Ffyuk7X17boU5gZ/krxDHO3
5IueGbqbW5gpvLRWcWPG9bDCgCT9atv8AUaDvR/v1W/z13tczXG6y//jHfx4
r7VJM2Ye91yhBxmc3vU3NvYjz/sTakNel4fqyd13LDT4Oyo+68wXdyLKffTH
3r6Wujonlf/WpfTM72909eUeXdGTe64JFxwCC/tbdAfRGb5Ys/qWLinVt4jO
W4U/dc7pWt2vQOm8XbhDVHpurHuu0pk83Vz953SP3afPF53hbTonz3ab8U8N
neHtXy1wzN20R1sjOsMDY56fujn6oOYuOsOdw2/ntXuSrRWLzip/wdZCx5ij
GjrDK+ebm3SOOayhM+/VvNXIjeVfZWjoDD+b5booYpdJqxKdydO7WXXmWJv+
fB/49JX4U+kiHD3t5d5Ornk+i5ZMnHpF3yw6E38lfdJS64Uj+gHRGb5xyp5J
J1tGaw9EZ3hqhWN22YpsbZ7oDD81L9j7WMYZzV50ho+PatNzqFeetlp0hjfy
cp6aZr6idRSd4ZMHJy/pNSxfKxKd4Tlfh1oKA4h3UNzTuMJ9lctFbYrozPtm
759RO905V0sSnYkP+PerY32aZGmVojP8QeKDgF9s/mef4Ef2O98H9eCJ+JPP
oyt6cs91QFZiYpqLScPP5M/5pDDsr6dzNfxMfLcq/3MXQ/KVzvCmv4x9t+/g
YuVneGar4pmei24oP8Nnn3ccNt6+VPxZq/icNT3qYvNLNOoG63lx44cXW+5d
VzoT399tynovn6vaZNEZXrvNGuGx7LLyM/zXwhZrHZ8dUzrDu9iv/8sRW/2h
bqBHutRP/AxvJPsdnTOErxF/sm78i57ck6cs9WBTv0mFys/keZLWt3dk/xKN
ugG3S/QZETyxTOkMX3DS/kXA2HLlZ54T6DX/7zP/ZFZ+hke3/tGj8GC50hke
M9tj/ZWv7miuojP5E9Z+7hR2qFTpDI/2SVm4c1aR8jN8VdKYT6/Pz9V+Fp15
39NR35jet9V//Iy/6Ef4GU79VPtB+G7Z73x/xHcXf/I+cPTknqtvtzuBWw7f
UX6GT9lsneA816LqBs8NKvokbHmve8rPxPs19s5ddfOe0hleMyY4OXnyPaUz
PPr5wMAxJovyM/xZi4Et28bdUTrDp8Wndynoe13pzHrcF/c0Dl96VvmZ+AOu
n1ku2/ovOuMj+js6wz2kH1Gf0YP6ic5w9jvfN3NE3Y7f/cn6iJ8senLPNXR5
O5PPl/eVzvDRRzu/LPao0GJEZ/jdBa3z3pyvUDrDi+9b4k/2qFD1GV7ps+mW
5nlf6Qy3xPd2/k+cWdVneE30tK5zj5coneGlsRGVcd+dUzrDfVI2TD1vm3+o
G+xL5iV0htPf8TOcfqT6oHDqJzrD2e+qDwrHn6oPCg8QPbl/+/pQ6Qw3uFeZ
9+58qHTm+5m7qUPjeKtV+Zl409Ok3LmJD5TOxM/Zc+KHhz9ZlJ/thHvGGUJC
0kpVfSa+xvvN9zVNGvxM/nFBMz+qsemJn9l/zJ/oDB8j8xJ+5v0aS39HZ+ol
/Yi6Aad+sq/gn8l+Z/+QH3+ybuLRk3uulSu3zd7k+0jqba3inQbVWXYFP1R+
hqfdtewqqmjQGb6wzvPj5gkNOrOeomGDjq9MbvAz8amxKampESc15mf4F3ui
W31oqw/ozFzPPI/OrJf5E53hU2Reog/C6e/4GR4l/Qid8R31Ez/D2e/4iTkC
f+ID8nuInnye+N4HVg8KCW3wM/FvTuf+ecjx+2p+hp8fEb/ulG9D3YA/+NjV
sC/gmtKZ5wyvTeubvzxT+Zn49FE7vjxq63fUDeZ3zkfozLqY56kbcOZP/Axn
XsLPcPo7OsPpR+iM76if7E/4Ttnv+IY8+JP3hL8WPbnnujLwdFHKi4Y+CF+c
kP3fgt23lc7woSXN550ana/qBuvZ+6vBO7LTtzrzBvERVd1ji23zG37m++S8
ic7wx3I+Qmc48zw6wwfI/InOcOYl6jOc/o7OcLP0o7f97OBH/URnOPv9bT87
+OFP3h++RPREZ/i4qL+9sy2sYX7m/6aUW179Eo/9wc8OfpfbVDTv8N4J/ZHo
DN/wY1nb+vMI50G+t/ZyfkdnOOdN6gbPPyLno02iM/yNzPPUDfJEyfyJzsQz
L6Ez8fR3dIZ/JP2Iukke6if1gvgK2e/4Dz5E/Iku5EkSPbnn+uHAVT1NPnt1
k+g8SbjVqWWLakORTt0gPtXsurL+fI2f2Qez5fcQdIZzfkdnvk/Om/iZeM5H
6Axnnkdn8jB/ojP8psxL9EH4S+nv6Ex++hF+Jp76iZ+Jz5H9js7EXxF/ohe6
oidxXAu0mtZ5LcuVzuSPnFY6pv73IuozdeW2/L7E7yNwfg+hbpCP8zt9kH7L
eZNzEZzzETqTJ1PmeeYN4vvI/El9hjMv0Qfh9HfqM3y/9CN0hs+R+onOrCdO
9ju/I8FTxJ/oC0dP8nLVYn///XNE2iwvo8HJ70a7pt6Hw49oh4LbnWvW+ztt
uHCrPv6Gv7FImzCnjcfO7O2Kt1jcYZ3RUK61fezyzs2fUrXr8nnyHZQ8FfJ5
PkcePg9v84c8rOeD9QVZE4Osqr6VCHe8v3HDZ/sq9c/l8/hl2EgH+0/LnFQ/
Is/ws+1Sam876eTn//7Cyc/6ycM91+PDq0Nf6hWKo+cuU+rS+vXwPNbDOonj
fYkfcij4/NHwFG2oXBPTTwWVbK/UXSKKnf2NtnUIn9Z+aEliUKiKc5X/fyOc
ePiqjr0K3SIrVb0iT5ea0BePR/2su0sc61ydub/apfhaDvlZ79Q1CYN2X72W
wz35l3Rf8ag+D/E8h/zoy/+DJQ868/wYea6b3PMc8v8PJPA7Wg==
    "], {
     {Opacity[0.8], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBIQXe+iFib1JiAgAAALABAAADAAAA6AIRKhobFQUGEgIDFgYHGAgJGwsM
FwcIGQkKGgoLEwMEFAQFHAwNHQ0OJBQVIRESIhITJRUWSDg5JhYXKBgZ8+vi
IBARJxcYKRkaIxMUKxscQDAxLBwdMiIjLx8gMyMkNSUmOCgpNCQlNiYnNyco
MCAhMSEiOSkqOiorQTEyPi4vPy8wQjIz4x4tQzM0RTU2Oyss5C08RDQ1RjY3
gnJzRzc4gXFyZFRVTz9ASzs8UEBBUkJDVUVGUUFCU0NEVERFTT0+Tj4/VkZH
V0dIXk5PWkpLXExNX09QSjo7YFBRYlJTWEhJWUlKYVFSY1NUSTk6ZVVWempr
ZlZXbFxdaFhZbV1eb19gcmJjbl5fcGBhcWFiaVlaa1tcc2NkdGRle2tsd2do
eGhpfGxtZ1dYfW1uf29wdWVmdmZnfm5vgHBxXU1Og3N00cHCno6PiXl6hXV2
inp7jHx9j3+Ai3t8jX1+jn5/hnZ3h3d4kICBkYGCmIiJlISFlYWGmYmKn4+Q
moqLnIyNkoKDk4OEm4uMnY2OloaHoJCRs6OkpZWWopKTo5OUrp6fp5eYqZma
qpqbq5ucrJydpJSVrZ2er5+g9PzttKSlsaGisqKjsKChoZGStqanu6ust6eo
uamquqqruKiphHR1vKytvq6v2cnKw7O0wLCxxbW2x7e4yrq7xra3yLi5ybm6
wbGywrKzy7u8zLy90sLDz7/A0MDB5cXUv6+w5sbV18fIzb2+zr6/58fW2MjJ
va2u2srLDBwb28vM4NDR3c3O8e7SAhIRBRUU6egQAxMSBBQT3s7P38/QBhYV
BxcWDR0cChoZCxsa4h0O3MzNECAfEiIhCBgXCRkYESEgEyMiFCQjFSUkFiYl
GysqGCgnGSkoMUFAHCwrHy8uIDAvITEwIjIxGiopIzMyJDQzJTU0Jzc2KDg3
KTk4Kjo54ywdKzs6MEA/JjY1Lj49Lz8+5DssTl5dT19eNERDOEhHNUVENkZF
M0NCOUlIO0tKPU1MPk5NP09ON0dGQFBPQVFQQlJRRFRTRVVURlZVR1dWMkJB
SFhXTV1cQ1NSSlpZTFxbSVlYOkpJUGBfdISDVWVkUmJhU2Nia3t6VmZlWGhn
WWloW2tqXGxrVGRjXW1sXm5tX29uYXFwYnJxY3NyZHRzV2dmZXV0anp5YHBv
Z3d2aHh3ZnZ1iJiXUWFgbn59coKBb39+cIB/bX18c4OCdYWEdoaFd4eGeYmI
cYGAeoqJe4uKfIyLfo6Nf4+OgJCPgZGQbHx7gpKRhpaVfY2MhJSThZWUg5OS
FycmiZmYi5uapLSzj5+ejJybkKCfkqKhlaWkkaGgk6OilKSjjZ2cjp6dl6em
mKinnq6tm6uqnKyrn6+uwtLRoLCvorKxmamomqqpobGwo7Oyna2spra1usrJ
p7e2rLy7qbm4rb28r7++ssLBrr69sMC/scHAqrq5q7u6s8PCtcXEu8vKuMjH
ucnIvMzLqLi3vc3Mv8/OtsbFt8fGvs7NwNDPwdHQ9O3lipqZydnY59XGx9fW
1efWytrZzNzbzd3czt7dz9/eyNjX0ODf7uDR6uIOHuMdLOMtLeQsO+Q8y9va
xeXEx+fGHeIexubF1ObV7OXU5tTF8vDo9vLp5e3E9/Pq4useEOgR+PTs0u7R
+vIB9e/u6PAC+fXx7u/gqJiZ6fLo6vPi7PTl8fXu/fXh8vYB+/MP8/cP8/vr
/PTT9fnh8vrw9PjT9f3vD9Rxog==
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
7mrpmhT8OlEF05P4/P8BB3KreQ==
     "]], 
   {RGBColor[1, 0, 0], PointSize[
    Large], {Point3DBox[{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}], 
     Point3DBox[{{1, 0, 0}, {1, 1, 1}, {1, 2, 1}, {1, 3, 0}}], 
     Point3DBox[{{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 0}}], 
     Point3DBox[{{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}]}, 
    {GrayLevel[0.5], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}], 
     Line3DBox[{{{0, 0, -1}, {1, 0, 0}, {2, 0, 0}, {3, 0, 0}}, {{0, 1, 0}, {1,
       1, 1}, {2, 1, 1}, {3, 1, 0}}, {{0, 2, 0}, {1, 2, 1}, {2, 2, 3}, {3, 2, 
      0}}, {{0, 3, 0}, {1, 3, 0}, {2, 3, 0}, {3, 3, -1}}}]}}},
  AutomaticImageSize->True,
  Boxed->False,
  ImageSize->{388.68723630966815`, 409.1193907080471},
  ViewPoint->{-1.6319653388681679`, -2.5390707774876073`, 1.5296433308589938`},
  ViewVertical->{-0.4692125582635656, -0.1253154977351484, 
   0.9313035357348715}]], "Output",
 CellChangeTimes->{
  3.605485100918141*^9, {3.605485216763944*^9, 3.605485279257654*^9}, {
   3.6054854456163464`*^9, 3.605485457441167*^9}, {3.605485499686041*^9, 
   3.605485551743333*^9}, {3.6054857554640903`*^9, 3.605485841716642*^9}, {
   3.6054859748794756`*^9, 3.6054860242067623`*^9}, 3.60552841211135*^9, 
   3.60552846320144*^9, {3.6055285260695505`*^9, 3.6055285459751854`*^9}, {
   3.6055722340922046`*^9, 3.6055722563222437`*^9}, 3.605572932865232*^9, 
   3.605573149190812*^9, 3.605573185944476*^9, {3.6055734373348107`*^9, 
   3.6055734474878874`*^9}, 3.605573484587082*^9, 3.6055738258768997`*^9, {
   3.6055739238873014`*^9, 3.6055739414754105`*^9}, 3.6055741725779114`*^9, 
   3.605574371540373*^9, 3.6055747360406446`*^9, 3.6056281738433437`*^9, 
   3.605628218147422*^9, 3.6056285589300203`*^9, 3.605628707161481*^9, 
   3.605629613283531*^9, 3.6056299521783867`*^9, 3.605630257951191*^9, 
   3.605630733918354*^9, 3.6056322081920495`*^9, 3.6056328938822374`*^9, 
   3.6056333345204406`*^9, 3.6056333822931733`*^9, 3.6056334242775745`*^9, 
   3.605633478640684*^9, 3.6056335299856205`*^9, {3.605633575898247*^9, 
   3.6056335866978645`*^9}, 3.6058075144672475`*^9, 3.6058077421172686`*^9, 
   3.6058078663243723`*^9, 3.605808472807061*^9, 3.605808521968873*^9, 
   3.6058088992944555`*^9, {3.6058089900996485`*^9, 3.605809008866722*^9}, 
   3.605809690344701*^9, 3.6058097742825017`*^9, 3.605810311488675*^9, 
   3.605810691636491*^9, 3.605811115829558*^9, 3.6058111880492754`*^9, 
   3.6058112456608477`*^9, 3.6058113484131947`*^9, 3.605811381867727*^9, 
   3.606000115192799*^9, 3.606000396701004*^9, 3.606000525843401*^9, 
   3.606001091606803*^9, {3.6060011687201414`*^9, 3.6060012138475547`*^9}, 
   3.60600132382608*^9, {3.6060013842143726`*^9, 3.6060014389117947`*^9}, 
   3.6060016183033137`*^9, 3.6060022328458242`*^9, {3.6060022988973145`*^9, 
   3.606002314619508*^9}, 3.606002376861804*^9, 3.6060026949665484`*^9, 
   3.6060028809128246`*^9, 3.606002938207098*^9, 3.6060031207696795`*^9, 
   3.6060031516088667`*^9, {3.606003216289156*^9, 3.6060032417643595`*^9}, 
   3.606003391311088*^9, 3.6062451206676283`*^9, 3.606246130624491*^9, 
   3.6062461967530074`*^9, 3.606247073181974*^9, 3.6062472550158935`*^9, 
   3.6064405618100395`*^9, 3.60652245510852*^9, 3.606600830585703*^9, 
   3.6066011004371376`*^9, 3.606601174842393*^9, 3.6066013031987348`*^9, 
   3.606601351687508*^9, 3.606601474659542*^9, 3.606601644603262*^9, 
   3.606601752070409*^9, 3.606601921212083*^9, 3.606601962388438*^9, 
   3.60660200490187*^9, 3.6066020560797973`*^9, 3.6066022230033445`*^9, 
   3.606602269888026*^9, 3.606602366319542*^9, 3.6066025301439123`*^9, 
   3.606602611685576*^9, 3.6066026902330685`*^9, 3.6066030169107533`*^9, 
   3.606603060519248*^9, {3.60660309167703*^9, 3.6066031088160105`*^9}, 
   3.6066034512325954`*^9, 3.6066035508912954`*^9, 3.6066036169600744`*^9, 
   3.6066039024944057`*^9, 3.6066040021831083`*^9, 3.6066040980565915`*^9, 
   3.606604139181944*^9, 3.6066042898565617`*^9, {3.6066043953085933`*^9, 
   3.606604437584011*^9}, 3.606604609873866*^9, 3.6223322413222923`*^9, 
   3.6328778635272207`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

de Casteljau algorithm (non-recursive)
Input : Bezier polygon and parameter t
Output : point on curve\
\>", "Subsubtitle",
 CellChangeTimes->{{3.605121399525159*^9, 3.6051214374020257`*^9}, 
   3.6051224606234226`*^9, {3.6052038570655837`*^9, 3.6052038650527973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"non", "-", 
     RowBox[{"recursive", " ", "DCA"}]}], ",", " ", 
    RowBox[{"follows", " ", "similar", " ", "routine", " ", "to", " ", 
     RowBox[{"decas", ".", "nb"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dca2", "[", 
     RowBox[{"b_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", ",", "n", ",", "i", ",", "k"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "b", "]"}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"temp", ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n", ",", "1"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"temp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1.0", "-", "t"}], ")"}], "*", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "+", 
             RowBox[{"t", "*", 
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "k", " ", "+", " ", "1"}], ",", "1"}], "}"}]}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", "n", ",", "1"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"temp", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"construct", " ", "graphic", " ", "objects"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curve", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"dca2", "[", 
        RowBox[{"pts", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", " ", "Blue"}], "}"}]}]}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"point", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black", ",", " ", 
        RowBox[{"Point", "[", 
         RowBox[{"dca2", "[", 
          RowBox[{"pts", ",", " ", "0.5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"begin", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", "Magenta", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}], " ",
    "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polygon", ",", "netplot", ",", "surfplot", ",", "curve", ",", "point", 
       ",", " ", "begin"}], "}"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.605572057733895*^9, 3.6055720587166967`*^9}, {
   3.605572136857234*^9, 3.6055722494114313`*^9}, {3.6055723093155365`*^9, 
   3.6055723453984003`*^9}, {3.605572392635283*^9, 3.6055725563419704`*^9}, {
   3.605572792698986*^9, 3.6055728369562635`*^9}, {3.60557288625235*^9, 
   3.605572980476516*^9}, {3.605573036043813*^9, 3.6055730761202836`*^9}, {
   3.605573478378009*^9, 3.605573479578019*^9}, {3.6059994938859634`*^9, 
   3.605999500796776*^9}, 3.605999533619233*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], 
     Point3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {
      1, 1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 
      3, 0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}]}, 
    {RGBColor[0, 1, 0], Thickness[0.005], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}]}}, 
   {RGBColor[1, 0, 0], PointSize[
    Large], {Point3DBox[{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}], 
     Point3DBox[{{1, 0, 0}, {1, 1, 1}, {1, 2, 1}, {1, 3, 0}}], 
     Point3DBox[{{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 0}}], 
     Point3DBox[{{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}]}, 
    {GrayLevel[0.5], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}], 
     Line3DBox[{{{0, 0, -1}, {1, 0, 0}, {2, 0, 0}, {3, 0, 0}}, {{0, 1, 0}, {1,
       1, 1}, {2, 1, 1}, {3, 1, 0}}, {{0, 2, 0}, {1, 2, 1}, {2, 2, 3}, {3, 2, 
      0}}, {{0, 3, 0}, {1, 3, 0}, {2, 3, 0}, {3, 3, -1}}}]}}, 
   GraphicsComplex3DBox[CompressedData["
1:eJxdmHtUjfkaxytUB8MwGHSZjH0ybo3JGbHI21jHJWaGkyXDMS6lk6GQS4dj
uczBmplTwia5NLl07DJFKOWSXrfcRRehkPZ2aZNpchkj1NmdeT6/lvmj9a73
07Of9/d+9/f3PM9vdwqaFRDiYGdn98b218j296zxt+9dOhE98Llc/7XR2qGu
rkrfNvhWyMHwCxr/77J14rLfEqx6o1unl2aFl2pPhL+evvpSnuddPT5q5D/8
jXe1p8JHjV52sVezMj0z+UjzrPBHiu9vNX3itYBreoV53TijoVrxyLCpHXPs
8vXI6nM9/I3PFH+2uGpdZ/MZvX7Ndna/KR5s3Ffyuk7X17boU5gZ/krxDHO3
5IueGbqbW5gpvLRWcWPG9bDCgCT9atv8AUaDvR/v1W/z13tczXG6y//jHfx4
r7VJM2Ye91yhBxmc3vU3NvYjz/sTakNel4fqyd13LDT4Oyo+68wXdyLKffTH
3r6Wujonlf/WpfTM72909eUeXdGTe64JFxwCC/tbdAfRGb5Ys/qWLinVt4jO
W4U/dc7pWt2vQOm8XbhDVHpurHuu0pk83Vz953SP3afPF53hbTonz3ab8U8N
neHtXy1wzN20R1sjOsMDY56fujn6oOYuOsOdw2/ntXuSrRWLzip/wdZCx5ij
GjrDK+ebm3SOOayhM+/VvNXIjeVfZWjoDD+b5booYpdJqxKdydO7WXXmWJv+
fB/49JX4U+kiHD3t5d5Ornk+i5ZMnHpF3yw6E38lfdJS64Uj+gHRGb5xyp5J
J1tGaw9EZ3hqhWN22YpsbZ7oDD81L9j7WMYZzV50ho+PatNzqFeetlp0hjfy
cp6aZr6idRSd4ZMHJy/pNSxfKxKd4Tlfh1oKA4h3UNzTuMJ9lctFbYrozPtm
759RO905V0sSnYkP+PerY32aZGmVojP8QeKDgF9s/mef4Ef2O98H9eCJ+JPP
oyt6cs91QFZiYpqLScPP5M/5pDDsr6dzNfxMfLcq/3MXQ/KVzvCmv4x9t+/g
YuVneGar4pmei24oP8Nnn3ccNt6+VPxZq/icNT3qYvNLNOoG63lx44cXW+5d
VzoT399tynovn6vaZNEZXrvNGuGx7LLyM/zXwhZrHZ8dUzrDu9iv/8sRW/2h
bqBHutRP/AxvJPsdnTOErxF/sm78i57ck6cs9WBTv0mFys/keZLWt3dk/xKN
ugG3S/QZETyxTOkMX3DS/kXA2HLlZ54T6DX/7zP/ZFZ+hke3/tGj8GC50hke
M9tj/ZWv7miuojP5E9Z+7hR2qFTpDI/2SVm4c1aR8jN8VdKYT6/Pz9V+Fp15
39NR35jet9V//Iy/6Ef4GU79VPtB+G7Z73x/xHcXf/I+cPTknqtvtzuBWw7f
UX6GT9lsneA816LqBs8NKvokbHmve8rPxPs19s5ddfOe0hleMyY4OXnyPaUz
PPr5wMAxJovyM/xZi4Et28bdUTrDp8Wndynoe13pzHrcF/c0Dl96VvmZ+AOu
n1ku2/ovOuMj+js6wz2kH1Gf0YP6ic5w9jvfN3NE3Y7f/cn6iJ8senLPNXR5
O5PPl/eVzvDRRzu/LPao0GJEZ/jdBa3z3pyvUDrDi+9b4k/2qFD1GV7ps+mW
5nlf6Qy3xPd2/k+cWdVneE30tK5zj5coneGlsRGVcd+dUzrDfVI2TD1vm3+o
G+xL5iV0htPf8TOcfqT6oHDqJzrD2e+qDwrHn6oPCg8QPbl/+/pQ6Qw3uFeZ
9+58qHTm+5m7qUPjeKtV+Zl409Ok3LmJD5TOxM/Zc+KHhz9ZlJ/thHvGGUJC
0kpVfSa+xvvN9zVNGvxM/nFBMz+qsemJn9l/zJ/oDB8j8xJ+5v0aS39HZ+ol
/Yi6Aad+sq/gn8l+Z/+QH3+ybuLRk3uulSu3zd7k+0jqba3inQbVWXYFP1R+
hqfdtewqqmjQGb6wzvPj5gkNOrOeomGDjq9MbvAz8amxKampESc15mf4F3ui
W31oqw/ozFzPPI/OrJf5E53hU2Reog/C6e/4GR4l/Qid8R31Ez/D2e/4iTkC
f+ID8nuInnye+N4HVg8KCW3wM/FvTuf+ecjx+2p+hp8fEb/ulG9D3YA/+NjV
sC/gmtKZ5wyvTeubvzxT+Zn49FE7vjxq63fUDeZ3zkfozLqY56kbcOZP/Axn
XsLPcPo7OsPpR+iM76if7E/4Ttnv+IY8+JP3hL8WPbnnujLwdFHKi4Y+CF+c
kP3fgt23lc7woSXN550ana/qBuvZ+6vBO7LTtzrzBvERVd1ji23zG37m++S8
ic7wx3I+Qmc48zw6wwfI/InOcOYl6jOc/o7OcLP0o7f97OBH/URnOPv9bT87
+OFP3h++RPREZ/i4qL+9sy2sYX7m/6aUW179Eo/9wc8OfpfbVDTv8N4J/ZHo
DN/wY1nb+vMI50G+t/ZyfkdnOOdN6gbPPyLno02iM/yNzPPUDfJEyfyJzsQz
L6Ez8fR3dIZ/JP2Iukke6if1gvgK2e/4Dz5E/Iku5EkSPbnn+uHAVT1NPnt1
k+g8SbjVqWWLakORTt0gPtXsurL+fI2f2Qez5fcQdIZzfkdnvk/Om/iZeM5H
6Axnnkdn8jB/ojP8psxL9EH4S+nv6Ex++hF+Jp76iZ+Jz5H9js7EXxF/ohe6
oidxXAu0mtZ5LcuVzuSPnFY6pv73IuozdeW2/L7E7yNwfg+hbpCP8zt9kH7L
eZNzEZzzETqTJ1PmeeYN4vvI/El9hjMv0Qfh9HfqM3y/9CN0hs+R+onOrCdO
9ju/I8FTxJ/oC0dP8nLVYn///XNE2iwvo8HJ70a7pt6Hw49oh4LbnWvW+ztt
uHCrPv6Gv7FImzCnjcfO7O2Kt1jcYZ3RUK61fezyzs2fUrXr8nnyHZQ8FfJ5
PkcePg9v84c8rOeD9QVZE4Osqr6VCHe8v3HDZ/sq9c/l8/hl2EgH+0/LnFQ/
Is/ws+1Sam876eTn//7Cyc/6ycM91+PDq0Nf6hWKo+cuU+rS+vXwPNbDOonj
fYkfcij4/NHwFG2oXBPTTwWVbK/UXSKKnf2NtnUIn9Z+aEliUKiKc5X/fyOc
ePiqjr0K3SIrVb0iT5ea0BePR/2su0sc61ydub/apfhaDvlZ79Q1CYN2X72W
wz35l3Rf8ag+D/E8h/zoy/+DJQ868/wYea6b3PMc8v8PJPA7Wg==
    "], {
     {Opacity[0.8], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBIQXe+iFib1JiAgAAALABAAADAAAA6AIRKhobFQUGEgIDFgYHGAgJGwsM
FwcIGQkKGgoLEwMEFAQFHAwNHQ0OJBQVIRESIhITJRUWSDg5JhYXKBgZ8+vi
IBARJxcYKRkaIxMUKxscQDAxLBwdMiIjLx8gMyMkNSUmOCgpNCQlNiYnNyco
MCAhMSEiOSkqOiorQTEyPi4vPy8wQjIz4x4tQzM0RTU2Oyss5C08RDQ1RjY3
gnJzRzc4gXFyZFRVTz9ASzs8UEBBUkJDVUVGUUFCU0NEVERFTT0+Tj4/VkZH
V0dIXk5PWkpLXExNX09QSjo7YFBRYlJTWEhJWUlKYVFSY1NUSTk6ZVVWempr
ZlZXbFxdaFhZbV1eb19gcmJjbl5fcGBhcWFiaVlaa1tcc2NkdGRle2tsd2do
eGhpfGxtZ1dYfW1uf29wdWVmdmZnfm5vgHBxXU1Og3N00cHCno6PiXl6hXV2
inp7jHx9j3+Ai3t8jX1+jn5/hnZ3h3d4kICBkYGCmIiJlISFlYWGmYmKn4+Q
moqLnIyNkoKDk4OEm4uMnY2OloaHoJCRs6OkpZWWopKTo5OUrp6fp5eYqZma
qpqbq5ucrJydpJSVrZ2er5+g9PzttKSlsaGisqKjsKChoZGStqanu6ust6eo
uamquqqruKiphHR1vKytvq6v2cnKw7O0wLCxxbW2x7e4yrq7xra3yLi5ybm6
wbGywrKzy7u8zLy90sLDz7/A0MDB5cXUv6+w5sbV18fIzb2+zr6/58fW2MjJ
va2u2srLDBwb28vM4NDR3c3O8e7SAhIRBRUU6egQAxMSBBQT3s7P38/QBhYV
BxcWDR0cChoZCxsa4h0O3MzNECAfEiIhCBgXCRkYESEgEyMiFCQjFSUkFiYl
GysqGCgnGSkoMUFAHCwrHy8uIDAvITEwIjIxGiopIzMyJDQzJTU0Jzc2KDg3
KTk4Kjo54ywdKzs6MEA/JjY1Lj49Lz8+5DssTl5dT19eNERDOEhHNUVENkZF
M0NCOUlIO0tKPU1MPk5NP09ON0dGQFBPQVFQQlJRRFRTRVVURlZVR1dWMkJB
SFhXTV1cQ1NSSlpZTFxbSVlYOkpJUGBfdISDVWVkUmJhU2Nia3t6VmZlWGhn
WWloW2tqXGxrVGRjXW1sXm5tX29uYXFwYnJxY3NyZHRzV2dmZXV0anp5YHBv
Z3d2aHh3ZnZ1iJiXUWFgbn59coKBb39+cIB/bX18c4OCdYWEdoaFd4eGeYmI
cYGAeoqJe4uKfIyLfo6Nf4+OgJCPgZGQbHx7gpKRhpaVfY2MhJSThZWUg5OS
FycmiZmYi5uapLSzj5+ejJybkKCfkqKhlaWkkaGgk6OilKSjjZ2cjp6dl6em
mKinnq6tm6uqnKyrn6+uwtLRoLCvorKxmamomqqpobGwo7Oyna2spra1usrJ
p7e2rLy7qbm4rb28r7++ssLBrr69sMC/scHAqrq5q7u6s8PCtcXEu8vKuMjH
ucnIvMzLqLi3vc3Mv8/OtsbFt8fGvs7NwNDPwdHQ9O3lipqZydnY59XGx9fW
1efWytrZzNzbzd3czt7dz9/eyNjX0ODf7uDR6uIOHuMdLOMtLeQsO+Q8y9va
xeXEx+fGHeIexubF1ObV7OXU5tTF8vDo9vLp5e3E9/Pq4useEOgR+PTs0u7R
+vIB9e/u6PAC+fXx7u/gqJiZ6fLo6vPi7PTl8fXu/fXh8vYB+/MP8/cP8/vr
/PTT9fnh8vrw9PjT9f3vD9Rxog==
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
7mrpmhT8OlEF05P4/P8BB3KreQ==
     "]], {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], Line3DBox[CompressedData["
1:eJxN0ns4FHgXB/Bxya1XIklsRIwojUobaq3UuyoruphEuTbjrklpXda6hVeM
FBXjErUqi2xM6bJ+Z1yaoUSi8GpyV+g1iozLyu4f7/5+zvN8//n8cc5zznN0
PE8dYkhSKJQzf0fq74htg3IdTrEsKf+vFled7oUFESScNFjfTD3w/T8ep1zZ
f25aBI1jA35sqit2yUbTVaJxEYxV7E4JoAZhz6clKfT3iiBWbeKb49RfsGem
z2l31orguWD/4GFqKvZXPds+zSeKgJV/rsGemof92rqwBENlEdSkpDyxo97F
Xtj31UbKYAykZIJlh/0AO/0RTcp0x0fYG+URf58uwD6obKa1J24EHoQxhIUt
Tdht6R7htwc/QIezPy34p1bstxo2TruavYflNmxmtVU79mXqYYFJjwZBqY1R
vt2lC7t7cmx5tvEArFsbUBTv2Y2dRZtIKXjSB2bCwOe7LvdiV0htvtsR3As1
s9E/tmX3Y7+6ZV1guXYP+EB9PYodxK6im8adGxQCx+u2xkr399gdlx6nhN3v
gk1OvVNfGcPY3wQ+qpQJ6YR3E/ZNVvtGsXurG9avDW2Hqe7VJmqO/8N+F8m0
mZ56DVeKw72PHhVh37rc0u1PdisYKsnZhWaPY9+oWzRHf98CD1nRxanXP2Hn
DSxLvmb2Etr102UPXv6M/XBoW4lf1AswiGtdfyJrAvveXk7ng7hnsMOh2/R6
9iT5n3wl2rMGAfSw4i3ZKV+wr7RVE/n6PwWu+THFp5emsK/eWSIzL1cL6nRB
5514MXbVfZz2KzM8sO6jXKo5O439YMnbSME2BDlqPorU0BnsRzhVXTfDHkNC
nm/iNr9Z7J1dw2k3bCqhoCmTn8qaw54oKTgTosWF6KD08TXBf2IX9l1YXnvg
Hox7rFc/5jmP/Q/f/tA5YSmkzY9Iv2N+xV5rmFXovKMIeB9tRMucF7AfCmj3
qzleCB36Zn0WehSrf7y4jzXkO1MAAYZetPRC4uskw6dOn8mFp3SXiF1aEth9
Moy13fUywcxppEi1YJHbieS+N0iH4Lgf2r/TlMTedIjd0HI4FVKZcrMS6cT1
OKrdzUWJULfGY2FEVQr7yqiKSvX8GOB9TZAySiU+6f/bhJF0OLyp2D3CVpbG
rp5NK/tGIhia1jL5KZeJlxdddc1/6w3sSseCXoUl2MuMczu4d1yBofvW1YVN
/E2EY6CK50GQrqRpbpCVwR545+7lEGNr+DZn6qmcPHExpYeqOLsLfGOqWEMK
xPVloqRkBLug0daWX7CMeLr8T3oanrsgo4d5Wl2N+Pssxkh1jhXoKeQJlugT
r9cYOBFpYwn/PvGvsz3WxB/a9PMaR80gQWq48covxFuZpXqnjU1Afo/F0pxo
4qpbLskrdtIg6XzyvhuxxG0Oq33KcKJB2pJN/LsJxN1TN7/humwCjuwZEKQu
uoNV6TGJ4I1QunT+3kweccaPdXYmwvXwaoXytRNAvOsV3+hrvi44HvF87VVN
vIhxk7nDRhc6MipW+NUSD2+efMYZ04G3K+lp5wTEp0c1Sh9a6cDQquyki83E
TS1HWeED2jCrqf9zdTfx8/bdQ5nKmrBWz9xDnyKL/aJeZsj2MRXYnxUvlpMk
znXZ+fNvcSoQsuwV+6MU8ZYl3Xt/11AB/rTf4wpZ4sbZx8187JQh4EXOCmsl
4gW7+Zr+F5Tg4TkK31WLeEdND+WAWB4cGgRGmTuJs1m733YIKRBuqVodYUn8
V4bh+TYPCvxa4X7UzYo4K/a+2P/lAhLnzsRR9xDfPL2Frzc9j3KDNwi5tsTP
u1dmqkTNomHNixdbnBf1Md7c4Ok+iWKD6JMKYcQNh2Okh8yHEPXbk/XUCOL3
ysoyj2wdRM/nT+dYRxKXc9+bLDYdQCvZ7D3hMcSP8YJMHB360J3iuozhJOL+
F2en0gVC1PRhy7Z6DvFrdG2zLt4rdOZ3K/mBHOJKfqvqJbNb0KrQA8KFPOIU
l0QLn5iXyEPWL377TeK84qC1df2N6It+wetbxcT9opkSbO5TpOmldC7+D+IR
KcIVI+YPEDJas78AEQ/RL3eeM+Uir89GWlU84k70sWonh3JUEvMDf7KOOGdp
1CaOoBRZ5UeqnXxBfPw+s6GbdwMNeCePRDUTr3vDCAiIyUf/oWWh7BbiXmmh
L57356AWxGW2viae6cE8ls69ghjC0QfW74hn2F/d8tk8ASkUzlxw7SFeNDg2
4OYQi8oCZN3C+4hv5VzIvSWIRNNzurLlQ8TdSsWjH3jBKLfWpOvFB+LdgWkG
Xf0ByDrZsmx4hDjjv77y+VwGStZwPqojWjS3WpElaUFHJn3eG777tGiv1SUR
ILBDbUUhC04TxBNjdTfP8axR2Om41rNfiOsXRPk+4m5DWuaXbqeJiZt6q47q
WlBRLeV6RMkMcXl+9hPtahXkU19iXz9H/FRGdK+XxVSVYtrjdQPzi/7tTlvz
oAW/qvxovXhhgbjNHuaF9Wy9J38Ba2GKew==
      "]], Line3DBox[CompressedData["
1:eJxF1HtM03cQAPBqgSIGukdtHI8JQhHkJQs4YOgVyYaiUrcMKDDJKLRDVOga
RGAbD0khLm2HFLYBgkCmGxGHQxA3ZwuEUiiPBSEWa0tpsfykaMBRCsJox0z2
/X2T++P7yeVyuVzOg5XzCXs7gUAI3wriVqwez244lcM9THj9lkAiGf3hvz+3
KW+I4d0I//vB7w/2fKdqgD6B4P5J71+RV0/99mBUdAuIdjzSfJYU+XS6OH7W
QwJHi9P4XQly5PLa8+9VL8jgbgFbc318DHkhI+6bL5kjMJV8Noh3cQK5MzXi
amDROLwRI+T00pXIPekm0cOcSSBPsjveT3mC3OEFqSPjghI83c+18lla5JJv
I2MColQQpjk/HFWlQ35G7ZOg7FJD33rJicn6WeSUPcy1jRAtZEoHByWXDMgj
1nfRH9+egbr0n513fY4hfzty04fQroNAps5sYc8jv8wszh+8pYfpZcYY/dgC
clOeJneyYhbM2ncOUONfIE9ZJO+4l/oUam4WfpGYuIhcxqBPmFwM4Eu2P5lf
v4Sc3Okq3fm7Ae5xS26Krr1EfppiOxQdNwdKmpj0cdXfyL39g4vaZHOwr2zC
53TtMvInGzSPzGAMPjilDblWb0Je65S1Hs3HYIbLPywUrCCn2U8HP5dicDx+
keZLNiMPjYppeKjEoDM8yVF2Bfc4ZnmBnxEDLKZy+e7OVeQkhVfFMTMGuxPk
j3/h4y6OpaRWbmIQ6JrRFbqJu3rfSpvVisERPeFKX+4avj/mz8zyrXzu1yGM
XDPunS25AW5b9a9SMx29818h7zmiaFt7hkGVKlMR8BL3Dx8VCfq3+i9vPFMR
mrWOfFat+GO4F4PmsR8HRNwN5BaV4uxIKQYl2eIlN94/yHvvzD3wD8BgKc1n
dxJrE3nBXzs0csUcVG4abaY5FuTjU8nUqdg56Hkes+iUbEV+w8uhvVBqgCla
mD7Ci0BHc44tc/T3MsA53/Qg8XXcnas0z7o5T0GWkPJV1LvbkNuJhpsYLbMQ
xjS2Uppxr74oJr/q1gOv7CPlIZftyFmuGS32QzoQcezXt4lxFyy95WccnoF+
tzSrkUJEniu3nSg8qoUeSzlxvwj3A6w6p4U1NTy6E20UvmmDvC62lfPTCRWM
uXMGBFW4U02rh5xLlSDsjm/WOdgiz9/r1yOSTAJ7rzo1RYj7nlLPIGXNONh0
B7n4keyQ+68mWRpXRqCcOD9SU4S7fqjxwqh4ANy9wtNoBBJyisZ/P+uGBC5l
J5gcCnCPvO+n7i++DS7p5Dz+n7irP9X4hrQ3QUfi4KrVirucp319P/8F4nQH
kQ==
      "]], Line3DBox[CompressedData["
1:eJxF031Q03UcB/DBiBHGo4AKbJI8ywWKgiOCz0iNOuBmIAPkLDZukwDZ3CkB
HkrCQGuMsQmpM4hIizwxHmqUXhAFW9BxqMjDIQxQDMbDmBt7QNxa1/n9fe7e
f3xef7z/+dznTQY7mWmNw+GiLMFbok8o+OoImxOL+38ob004Nv+3c74u/Isa
0ACvfFUxHirmNEAvn383KaAVuUtyYMiktBXwtlzCYm43crVisuWzxB54/zyd
9xNNhtzudtDj9jo5/FzMnLpxfwi5MSEqRcIdhvFjeWHcTx8it7ni6hhn/wic
46tZv1PGkJeq+L84Z0+A0wiz/UDmJPLl+y4xHX7T4OuT38JjKJBf+zIymJI3
C+Spk4NxolnkbRE7CeHXn0DvRlniiOQJ8k5um1vSxjzkdMvlv12YR75ffkfV
GrIA17K/83TP+gd5jXsqvj5BCaHpszoTcxG5qDOPvVmzDNMa6hDlgyXk98oL
Yuy/WQWdYscej9QV5FkjgxVtOWtQd6vkRFqaCjn1iyLbSK4agp3skooka1iP
OPWUMOs5dHHKbgka1ciLl3xJP6RpYMxfTPhQ9Bx54mVKIj1cC4HlD4OOX9Ug
V/r9KiO4rEP0EcX+RokW+anSrebuyXWY4fBiq/nryNmttieLLumgMyrDoa9W
h/xQaXlN5z49bKfJJr7n6ZFziWdweT16eHcOV9t72oD86Ir3hC/ZANc9chwC
iozIDSt7YtK+NUBlwydVEbkb2F22BaT3aQxwOdIqkLGCuezuaW+puxGahq70
CzgvkP9I33bTbq8RhKT6TJoa8wEPusM7h41QViBeI3I3kRd2eM11JhuBvHC8
IlqJuXdX1h+OGUZYowdtz2C8RP7xqth8yOI9dy4JJE8xd75YfJ5l6RG+VNpM
s0zITcN9FONBIwSc2VFSOIN5aMHgZlWYpWc5XuV4zIw8/+peuwg3I4z7k+fe
9sNRXnnOiykeccAA+cHZYeIbmO/CPwhfyjBAHy3zbBzJCvkbFTTryAd6IKcr
W9yaMN96lnNA5aUHbvl7YzFe1sgbtZXyEqoOBCy7DSsx5sPKw64y5jr8SaSb
lW545CmeC7f747TQY6rE7xZgHqd1nXu2RQOjHQeV1S42yKM/L320RaSGIR9W
P1+EeRPnqDDlmQqqpalNs/avISflNr+eb/kj5q7HH2VWY54zauUnqVsAG2mY
VwjBFrn7vgFZc9VTqMQv/l13DvN6z93U2qgZ8PGLovvjCMhPsD2IuRmjcKGA
prUvxvyccJA0w5CDV7ZTIe8e5tJaU/z8WBe0p8n1ZjPmmobQacPNi7H/Ahec
xIk=
      "]], Line3DBox[CompressedData["
1:eJxFzXlM03cYBvBCGWVkwtgKcogWgUI5LNlUqGZSIMwDXYFIa0XQUjl0XAPC
OJR1xaLRtpYWESyHRDs5xgwqKxHTl8EQFIcyQHAMSjmGFBkFsTiuzizz+3uS
559PnuRxikkJjzXG4XC+74p/16WQ5PLQlNQ9uP9iRlf84XzRXeTSnHo98xGD
XOFv9L/3dV7ODW+6rWoVCpsPkX/yf7/fXHXTENKkVn1GLlsg+CuRO7tdXN1E
XFPhTdMI06cBOfVccHPQghWQA0Qm1gVtyG0vzfKJu5xg33ccQSOzAzmHl9MZ
nuQNvDPcBm9iF3ILzxsjtJWd8HN27LCipxt5RQTLq1RHh8GjX1PTvu1Ffr+E
mZj+aRh8vFcU9wt9APnZlst2xfZRYNkXe8c3cgj5hG1e9mJDPDiTEmsEMWrk
f5UEK6fGvwG/4aSuAKkG81Eji17HbGhd5h3sk48jD86i/jiZ/j0kQGenij+J
vGnb2QSa+Xm4xr1lb31iCnm1hNrYLxHBtiMa/XrsNHK2VV6GQC+FkdeMbvr+
GeQ4OWhO5l8FvdrOxyZiFnktpbi8YUc5XKnLiWex5pAT+ea/P31WBRRLs0NZ
ch3yH+pnfITbFdCUyqsTV84j9yny3Uhg1cCAq4wQJl1AHn5Mfkp0qx7c8nvd
o0pfI5dEXwsKS2qA3aHq7ZXyReRz+yXdIYH3YDRVsEckfIP9uo9LH1OUcI/G
3tBeqEfOaM8g15bdB1tmx4tqwRJyPzvKiTCSCgLHcIWtGW+Rzz4tj1+dbYEy
m4QN5Kx/kA+6vY0O2dIGBRWnzu84vYz8QsXxJ4bD7VDVXfJQnLqCvO2T+WLZ
dAfwkmU6x7RV5GLYwpu58Rh0HHdbdswa8ttTlfWcqN9AsqY1GYlbR06mXM2b
CHwGLa/2zlkcNSCnPJIcTuvvgUFXv7FdLjj6ew9geFbnZPVCIoVLlSkwr9s9
bMGO7Id2ZmRuwGYj5PXmmQ/saQPgd0RbQ6zC3HjTAV1p1AtIy/9y4AsHY+SK
YzNeoblDII4zWzaSYb4xR+MxXDsMvzpyDFoiHvmBryo+D7QehZb1AryHGHOr
nK6tfIYGnt8N0oqsTJCfWTkoq2scg25S3EOhFPOQFAW92G0CRMqIKo35B8i9
SXnBJwsnIXbrn9GRIszvFvke53pNgYmS6uBJMEV+6bnJ+Eeql1CAn35yJQ/z
IWX6oilbCyQXGscVR0BeplzfV+bxCvjJzEXzbMxtzhV5zM/NggPXMlPwAPOd
L130H775G+6wOpcMBsx7op3UBsMc/AvZJshn
      "]]}}, 
   {GrayLevel[0], PointSize[Large], 
    Point3DBox[{{1.5, 0., -0.125}, {1.5, 1., 0.75}, {1.5, 2., 1.5}, {1.5, 
     3., -0.125}}]}, 
   {RGBColor[1, 0, 1], PointSize[Large], 
    Point3DBox[{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}]}},
  AutomaticImageSize->True,
  Boxed->False,
  ImageSize->{324.8588107883971, 408.945039777216},
  ViewPoint->{-2.724868898298763, -1.4213539247503981`, 1.4159246122872302`},
  ViewVertical->{-0.4064795850487104, -0.14393977492796517`, 
   0.9462591212635295}]], "Output",
 CellChangeTimes->{{3.605572234185805*^9, 3.6055722564314437`*^9}, {
   3.6055723188159533`*^9, 3.6055723269747677`*^9}, {3.6055724384837637`*^9, 
   3.6055724757990294`*^9}, {3.6055725074046845`*^9, 3.605572549727559*^9}, {
   3.605572932974432*^9, 3.605572982395319*^9}, 3.605573078897088*^9, 
   3.605573149300012*^9, 3.6055731860224767`*^9, {3.605573437424816*^9, 
   3.605573447583893*^9}, 3.605573484699086*^9, 3.6055738259719048`*^9, {
   3.6055739239923077`*^9, 3.605573941564416*^9}, 3.6055741726649165`*^9, 
   3.6055743716263776`*^9, 3.60557473613465*^9, 3.605628173936944*^9, 
   3.605628218225422*^9, 3.6056285590080204`*^9, 3.6056287072550807`*^9, 
   3.6056296133795366`*^9, 3.6056299522703915`*^9, 3.6056302580391965`*^9, 
   3.605630734011359*^9, 3.605632208294053*^9, 3.6056328939742427`*^9, 
   3.605633334610446*^9, 3.605633382384178*^9, 3.6056334243675795`*^9, 
   3.605633478732689*^9, 3.6056335300826263`*^9, {3.605633575986252*^9, 
   3.605633586784869*^9}, 3.6058075146762595`*^9, 3.6058077422112737`*^9, 
   3.6058078664103775`*^9, 3.6058084728930664`*^9, 3.60580852208288*^9, 
   3.6058088995844717`*^9, {3.6058089901846533`*^9, 3.6058090089797287`*^9}, 
   3.605809690432706*^9, 3.605809774391508*^9, 3.6058103115896783`*^9, 
   3.6058106917594976`*^9, 3.605811115951563*^9, 3.60581118813428*^9, 
   3.605811245746853*^9, 3.6058113485292015`*^9, 3.605811381987734*^9, 
   3.6060001152788043`*^9, 3.606000396789009*^9, 3.6060005259304056`*^9, 
   3.6060010916938076`*^9, {3.606001168816147*^9, 3.606001213954559*^9}, 
   3.606001323911085*^9, {3.606001384303378*^9, 3.6060014389967995`*^9}, 
   3.606001618395319*^9, 3.606002232930829*^9, {3.6060022989843197`*^9, 
   3.6060023147025127`*^9}, 3.606002376945809*^9, 3.606002695080552*^9, 
   3.60600288099883*^9, 3.606002938295103*^9, 3.6060031208586826`*^9, 
   3.6060031516968718`*^9, {3.606003216372161*^9, 3.606003241847364*^9}, 
   3.6060033913980927`*^9, 3.606245120789633*^9, 3.6062461307024913`*^9, 
   3.6062461968622074`*^9, 3.606247073275574*^9, 3.6062472551094933`*^9, 
   3.60644056193484*^9, 3.6065224552801204`*^9, 3.606600830690709*^9, 
   3.606601100738155*^9, 3.6066011749223976`*^9, 3.60660130328574*^9, 
   3.606601351772513*^9, 3.6066014747485466`*^9, 3.606601644690267*^9, 
   3.606601752199416*^9, 3.606601921307089*^9, 3.606601962478443*^9, 
   3.6066020050008755`*^9, 3.6066020562648077`*^9, 3.6066022230933495`*^9, 
   3.6066022700190334`*^9, 3.606602366417547*^9, 3.6066025302469177`*^9, 
   3.606602611791582*^9, 3.6066026903190737`*^9, 3.606603017002759*^9, 
   3.6066030606202536`*^9, {3.6066030917650347`*^9, 3.6066031089010153`*^9}, 
   3.6066034513196*^9, 3.6066035509803004`*^9, 3.606603617087082*^9, 
   3.606603902582411*^9, 3.606604002277113*^9, 3.6066040981425962`*^9, 
   3.606604139269949*^9, 3.6066042899445667`*^9, {3.606604395399598*^9, 
   3.606604437669016*^9}, 3.6066046099628706`*^9, 3.6223322414222927`*^9, 
   3.632877863698821*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.605196364192657*^9, 3.605196364379857*^9}, {
  3.605572048124278*^9, 3.6055720486858788`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{Cell["\<\
de Casteljau algorithm (non-recursive)
Input: Bezier polygon and parameter t
Output: {point on curve, first derivative, second derivative}\
\>", "Subsubtitle",
    CellChangeTimes->{{3.6051212792957478`*^9, 3.6051213223986235`*^9}}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"--", " ", "You"}], " ", "could", " ", "use", "  ", 
    RowBox[{"Return", "[", 
     RowBox[{"{", 
      RowBox[{"tangent", ",", " ", "normal", ",", " ", "binormal"}], "}"}], 
     "]"}], " ", "as", " ", "the", " ", "last", " ", "line", " ", "in", " ", 
    "this", " ", "routine"}]}]}]], "Subsubtitle",
 CellChangeTimes->{{3.6051250050118923`*^9, 3.605125016041112*^9}, {
   3.605125053247177*^9, 3.605125055758782*^9}, 3.6051935982609987`*^9, {
   3.605203870403607*^9, 3.6052038733364124`*^9}, {3.6052040040022416`*^9, 
   3.6052040592419386`*^9}, 3.6052845691032004`*^9, {3.605573121438363*^9, 
   3.6055731629656363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"curve", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"dca2", "[", 
       RowBox[{"pts", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Blue"}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"point", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black", ",", " ", 
       RowBox[{"Point", "[", 
        RowBox[{"dca2", "[", 
         RowBox[{"pts", ",", " ", "0.5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "I", " ", "originally", " ", "tried", " ", "getting", " ", "the", " ", 
     "derivative", " ", "from", " ", "the", " ", "DCA", " ", "function", " ", 
     "above"}], ",", " ", 
    RowBox[{"but", " ", "I", " ", 
     RowBox[{"couldn", "'"}], "t", " ", "get", " ", "it", " ", "to", " ", 
     "display", " ", "correctly", " ", "so", " ", "I", " ", "used", " ", 
     "the", " ", "BSplineCurve", " ", "function", " ", "in", " ", 
     RowBox[{"Mathematica", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{"BSplineCurve", "[", 
    RowBox[{"pts", ",", " ", 
     RowBox[{"SplineDegree", "\[Rule]", "degu"}], ",", " ", 
     RowBox[{"SplineKnots", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dg", " ", "=", " ", 
   RowBox[{"g", "'"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tangent", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"g", "[", "t", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"g", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"g", "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dg", "[", "t", "]"}], ")"}], "/", "6"}]}]}], "}"}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "1", ",", " ", "0", ",", " ", 
           RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}]}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"tangent", " ", "arrow", " ", "graphic"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"begin", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", "Magenta", ",", 
       RowBox[{"Point", "[", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"begin", " ", "pts", " ", "black"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tangent2", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dca2", "[", 
          RowBox[{"pts", ",", "0.5"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"dca2", "[", 
           RowBox[{"pts", ",", " ", "0.5"}], "]"}], "+", 
          RowBox[{"dca2", "[", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "0.5"}], "]"}]}]}], 
        "}"}], "]"}], "]"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "polygon", ",", "netplot", ",", " ", "surfplot", ",", "curve", ",", 
     "point", ",", "tangent", ",", " ", "begin"}], "}"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6051963754714766`*^9, 3.6051963759550776`*^9}, {
   3.605573174603256*^9, 3.605573178440863*^9}, {3.6055733511914897`*^9, 
   3.6055734438078394`*^9}, {3.605573542772294*^9, 3.605573594926396*^9}, {
   3.6055736346004667`*^9, 3.6055736442124805`*^9}, {3.605573689322613*^9, 
   3.60557370863264*^9}, {3.605573743154703*^9, 3.605573818162846*^9}, {
   3.6055739063372226`*^9, 3.605573936437354*^9}, {3.605574109047738*^9, 
   3.605574168767865*^9}, {3.605574261286111*^9, 3.6055744538906107`*^9}, {
   3.605574651113443*^9, 3.60557472120158*^9}, {3.6055748043578987`*^9, 
   3.605574885842141*^9}, {3.60557491709828*^9, 3.6055749195642867`*^9}, {
   3.60557495259439*^9, 3.6055749862584963`*^9}, {3.6055750373786793`*^9, 
   3.6055750394406834`*^9}, {3.605627958032565*^9, 3.6056280184046707`*^9}, {
   3.605628056281537*^9, 3.6056282143254147`*^9}, {3.6056282579586916`*^9, 
   3.605628334929227*^9}, {3.6056285042363243`*^9, 3.6056286425461674`*^9}, {
   3.6056286969278626`*^9, 3.6056287665975847`*^9}, {3.605628824005686*^9, 
   3.60562882648609*^9}, {3.605629527216308*^9, 3.6056296333015976`*^9}, {
   3.6056296633356566`*^9, 3.605629762965876*^9}, {3.605629799231938*^9, 
   3.6056298867282267`*^9}, {3.6056299215822797`*^9, 
   3.6056299669484425`*^9}, {3.6056302547311473`*^9, 
   3.6056302718912373`*^9}, {3.6056303240233593`*^9, 
   3.6056303263633623`*^9}, {3.605630392587592*^9, 3.605630416157645*^9}, {
   3.6056304869618063`*^9, 3.6056305466039095`*^9}, {3.6056306060000114`*^9, 
   3.605630627698059*^9}, {3.6056306707361326`*^9, 3.605630728862302*^9}, {
   3.6056307655854344`*^9, 3.6056307860194836`*^9}, {3.605632141220228*^9, 
   3.6056321437943754`*^9}, 3.6056321779613295`*^9, {3.6056326713655105`*^9, 
   3.605632686957402*^9}, {3.605999567720893*^9, 3.605999578968513*^9}, {
   3.6060001093447475`*^9, 3.6060001112647505`*^9}, {3.6060003490887985`*^9, 
   3.606000390508954*^9}, {3.6060004590172462`*^9, 3.606000468099267*^9}, {
   3.6060005320915136`*^9, 3.6060005393615427`*^9}, {3.6060005786236053`*^9, 
   3.6060005912356515`*^9}, {3.606000634871738*^9, 3.60600063524374*^9}, {
   3.6060006888199143`*^9, 3.60600072609304*^9}, {3.6060009188894324`*^9, 
   3.6060010862537527`*^9}, {3.606001158832078*^9, 3.606001163958089*^9}, {
   3.6060012050664997`*^9, 3.6060012081165037`*^9}, 3.6060012390727158`*^9, {
   3.606001275398814*^9, 3.6060014355477448`*^9}, {3.606001562904177*^9, 
   3.6060015783302164`*^9}, {3.606001629246435*^9, 3.60600167300253*^9}, {
   3.60600185132691*^9, 3.606001863632945*^9}, {3.6060019086130753`*^9, 
   3.6060019239371257`*^9}, {3.60624520087193*^9, 3.60624520125193*^9}, {
   3.606245868430108*^9, 3.606245871456514*^9}, {3.6062469896513433`*^9, 
   3.6062470646799593`*^9}, {3.606522427309271*^9, 3.6065224313184786`*^9}, {
   3.6066026789884253`*^9, 3.6066027126123486`*^9}, {3.6066027497324715`*^9, 
   3.6066027569148827`*^9}, {3.606603654948247*^9, 3.606603890203703*^9}, {
   3.6066039978038573`*^9, 3.6066039984128923`*^9}, {3.6066040457445993`*^9, 
   3.6066040941393676`*^9}, {3.6066041257461753`*^9, 
   3.6066041359307575`*^9}, {3.606604221091629*^9, 3.6066042548175573`*^9}, {
   3.606604389777277*^9, 3.6066044749281473`*^9}, {3.606604598009187*^9, 
   3.606604599126251*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], 
     Point3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {
      1, 1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 
      3, 0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}]}, 
    {RGBColor[0, 1, 0], Thickness[0.005], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}]}}, 
   {RGBColor[1, 0, 0], PointSize[
    Large], {Point3DBox[{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}], 
     Point3DBox[{{1, 0, 0}, {1, 1, 1}, {1, 2, 1}, {1, 3, 0}}], 
     Point3DBox[{{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 0}}], 
     Point3DBox[{{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}]}, 
    {GrayLevel[0.5], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}], 
     Line3DBox[{{{0, 0, -1}, {1, 0, 0}, {2, 0, 0}, {3, 0, 0}}, {{0, 1, 0}, {1,
       1, 1}, {2, 1, 1}, {3, 1, 0}}, {{0, 2, 0}, {1, 2, 1}, {2, 2, 3}, {3, 2, 
      0}}, {{0, 3, 0}, {1, 3, 0}, {2, 3, 0}, {3, 3, -1}}}]}}, 
   GraphicsComplex3DBox[CompressedData["
1:eJxdmHtUjfkaxytUB8MwGHSZjH0ybo3JGbHI21jHJWaGkyXDMS6lk6GQS4dj
uczBmplTwia5NLl07DJFKOWSXrfcRRehkPZ2aZNpchkj1NmdeT6/lvmj9a73
07Of9/d+9/f3PM9vdwqaFRDiYGdn98b218j296zxt+9dOhE98Llc/7XR2qGu
rkrfNvhWyMHwCxr/77J14rLfEqx6o1unl2aFl2pPhL+evvpSnuddPT5q5D/8
jXe1p8JHjV52sVezMj0z+UjzrPBHiu9vNX3itYBreoV53TijoVrxyLCpHXPs
8vXI6nM9/I3PFH+2uGpdZ/MZvX7Ndna/KR5s3Ffyuk7X17boU5gZ/krxDHO3
5IueGbqbW5gpvLRWcWPG9bDCgCT9atv8AUaDvR/v1W/z13tczXG6y//jHfx4
r7VJM2Ye91yhBxmc3vU3NvYjz/sTakNel4fqyd13LDT4Oyo+68wXdyLKffTH
3r6Wujonlf/WpfTM72909eUeXdGTe64JFxwCC/tbdAfRGb5Ys/qWLinVt4jO
W4U/dc7pWt2vQOm8XbhDVHpurHuu0pk83Vz953SP3afPF53hbTonz3ab8U8N
neHtXy1wzN20R1sjOsMDY56fujn6oOYuOsOdw2/ntXuSrRWLzip/wdZCx5ij
GjrDK+ebm3SOOayhM+/VvNXIjeVfZWjoDD+b5booYpdJqxKdydO7WXXmWJv+
fB/49JX4U+kiHD3t5d5Ornk+i5ZMnHpF3yw6E38lfdJS64Uj+gHRGb5xyp5J
J1tGaw9EZ3hqhWN22YpsbZ7oDD81L9j7WMYZzV50ho+PatNzqFeetlp0hjfy
cp6aZr6idRSd4ZMHJy/pNSxfKxKd4Tlfh1oKA4h3UNzTuMJ9lctFbYrozPtm
759RO905V0sSnYkP+PerY32aZGmVojP8QeKDgF9s/mef4Ef2O98H9eCJ+JPP
oyt6cs91QFZiYpqLScPP5M/5pDDsr6dzNfxMfLcq/3MXQ/KVzvCmv4x9t+/g
YuVneGar4pmei24oP8Nnn3ccNt6+VPxZq/icNT3qYvNLNOoG63lx44cXW+5d
VzoT399tynovn6vaZNEZXrvNGuGx7LLyM/zXwhZrHZ8dUzrDu9iv/8sRW/2h
bqBHutRP/AxvJPsdnTOErxF/sm78i57ck6cs9WBTv0mFys/keZLWt3dk/xKN
ugG3S/QZETyxTOkMX3DS/kXA2HLlZ54T6DX/7zP/ZFZ+hke3/tGj8GC50hke
M9tj/ZWv7miuojP5E9Z+7hR2qFTpDI/2SVm4c1aR8jN8VdKYT6/Pz9V+Fp15
39NR35jet9V//Iy/6Ef4GU79VPtB+G7Z73x/xHcXf/I+cPTknqtvtzuBWw7f
UX6GT9lsneA816LqBs8NKvokbHmve8rPxPs19s5ddfOe0hleMyY4OXnyPaUz
PPr5wMAxJovyM/xZi4Et28bdUTrDp8Wndynoe13pzHrcF/c0Dl96VvmZ+AOu
n1ku2/ovOuMj+js6wz2kH1Gf0YP6ic5w9jvfN3NE3Y7f/cn6iJ8senLPNXR5
O5PPl/eVzvDRRzu/LPao0GJEZ/jdBa3z3pyvUDrDi+9b4k/2qFD1GV7ps+mW
5nlf6Qy3xPd2/k+cWdVneE30tK5zj5coneGlsRGVcd+dUzrDfVI2TD1vm3+o
G+xL5iV0htPf8TOcfqT6oHDqJzrD2e+qDwrHn6oPCg8QPbl/+/pQ6Qw3uFeZ
9+58qHTm+5m7qUPjeKtV+Zl409Ok3LmJD5TOxM/Zc+KHhz9ZlJ/thHvGGUJC
0kpVfSa+xvvN9zVNGvxM/nFBMz+qsemJn9l/zJ/oDB8j8xJ+5v0aS39HZ+ol
/Yi6Aad+sq/gn8l+Z/+QH3+ybuLRk3uulSu3zd7k+0jqba3inQbVWXYFP1R+
hqfdtewqqmjQGb6wzvPj5gkNOrOeomGDjq9MbvAz8amxKampESc15mf4F3ui
W31oqw/ozFzPPI/OrJf5E53hU2Reog/C6e/4GR4l/Qid8R31Ez/D2e/4iTkC
f+ID8nuInnye+N4HVg8KCW3wM/FvTuf+ecjx+2p+hp8fEb/ulG9D3YA/+NjV
sC/gmtKZ5wyvTeubvzxT+Zn49FE7vjxq63fUDeZ3zkfozLqY56kbcOZP/Axn
XsLPcPo7OsPpR+iM76if7E/4Ttnv+IY8+JP3hL8WPbnnujLwdFHKi4Y+CF+c
kP3fgt23lc7woSXN550ana/qBuvZ+6vBO7LTtzrzBvERVd1ji23zG37m++S8
ic7wx3I+Qmc48zw6wwfI/InOcOYl6jOc/o7OcLP0o7f97OBH/URnOPv9bT87
+OFP3h++RPREZ/i4qL+9sy2sYX7m/6aUW179Eo/9wc8OfpfbVDTv8N4J/ZHo
DN/wY1nb+vMI50G+t/ZyfkdnOOdN6gbPPyLno02iM/yNzPPUDfJEyfyJzsQz
L6Ez8fR3dIZ/JP2Iukke6if1gvgK2e/4Dz5E/Iku5EkSPbnn+uHAVT1NPnt1
k+g8SbjVqWWLakORTt0gPtXsurL+fI2f2Qez5fcQdIZzfkdnvk/Om/iZeM5H
6Axnnkdn8jB/ojP8psxL9EH4S+nv6Ex++hF+Jp76iZ+Jz5H9js7EXxF/ohe6
oidxXAu0mtZ5LcuVzuSPnFY6pv73IuozdeW2/L7E7yNwfg+hbpCP8zt9kH7L
eZNzEZzzETqTJ1PmeeYN4vvI/El9hjMv0Qfh9HfqM3y/9CN0hs+R+onOrCdO
9ju/I8FTxJ/oC0dP8nLVYn///XNE2iwvo8HJ70a7pt6Hw49oh4LbnWvW+ztt
uHCrPv6Gv7FImzCnjcfO7O2Kt1jcYZ3RUK61fezyzs2fUrXr8nnyHZQ8FfJ5
PkcePg9v84c8rOeD9QVZE4Osqr6VCHe8v3HDZ/sq9c/l8/hl2EgH+0/LnFQ/
Is/ws+1Sam876eTn//7Cyc/6ycM91+PDq0Nf6hWKo+cuU+rS+vXwPNbDOonj
fYkfcij4/NHwFG2oXBPTTwWVbK/UXSKKnf2NtnUIn9Z+aEliUKiKc5X/fyOc
ePiqjr0K3SIrVb0iT5ea0BePR/2su0sc61ydub/apfhaDvlZ79Q1CYN2X72W
wz35l3Rf8ag+D/E8h/zoy/+DJQ868/wYea6b3PMc8v8PJPA7Wg==
    "], {
     {Opacity[0.8], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBIQXe+iFib1JiAgAAALABAAADAAAA6AIRKhobFQUGEgIDFgYHGAgJGwsM
FwcIGQkKGgoLEwMEFAQFHAwNHQ0OJBQVIRESIhITJRUWSDg5JhYXKBgZ8+vi
IBARJxcYKRkaIxMUKxscQDAxLBwdMiIjLx8gMyMkNSUmOCgpNCQlNiYnNyco
MCAhMSEiOSkqOiorQTEyPi4vPy8wQjIz4x4tQzM0RTU2Oyss5C08RDQ1RjY3
gnJzRzc4gXFyZFRVTz9ASzs8UEBBUkJDVUVGUUFCU0NEVERFTT0+Tj4/VkZH
V0dIXk5PWkpLXExNX09QSjo7YFBRYlJTWEhJWUlKYVFSY1NUSTk6ZVVWempr
ZlZXbFxdaFhZbV1eb19gcmJjbl5fcGBhcWFiaVlaa1tcc2NkdGRle2tsd2do
eGhpfGxtZ1dYfW1uf29wdWVmdmZnfm5vgHBxXU1Og3N00cHCno6PiXl6hXV2
inp7jHx9j3+Ai3t8jX1+jn5/hnZ3h3d4kICBkYGCmIiJlISFlYWGmYmKn4+Q
moqLnIyNkoKDk4OEm4uMnY2OloaHoJCRs6OkpZWWopKTo5OUrp6fp5eYqZma
qpqbq5ucrJydpJSVrZ2er5+g9PzttKSlsaGisqKjsKChoZGStqanu6ust6eo
uamquqqruKiphHR1vKytvq6v2cnKw7O0wLCxxbW2x7e4yrq7xra3yLi5ybm6
wbGywrKzy7u8zLy90sLDz7/A0MDB5cXUv6+w5sbV18fIzb2+zr6/58fW2MjJ
va2u2srLDBwb28vM4NDR3c3O8e7SAhIRBRUU6egQAxMSBBQT3s7P38/QBhYV
BxcWDR0cChoZCxsa4h0O3MzNECAfEiIhCBgXCRkYESEgEyMiFCQjFSUkFiYl
GysqGCgnGSkoMUFAHCwrHy8uIDAvITEwIjIxGiopIzMyJDQzJTU0Jzc2KDg3
KTk4Kjo54ywdKzs6MEA/JjY1Lj49Lz8+5DssTl5dT19eNERDOEhHNUVENkZF
M0NCOUlIO0tKPU1MPk5NP09ON0dGQFBPQVFQQlJRRFRTRVVURlZVR1dWMkJB
SFhXTV1cQ1NSSlpZTFxbSVlYOkpJUGBfdISDVWVkUmJhU2Nia3t6VmZlWGhn
WWloW2tqXGxrVGRjXW1sXm5tX29uYXFwYnJxY3NyZHRzV2dmZXV0anp5YHBv
Z3d2aHh3ZnZ1iJiXUWFgbn59coKBb39+cIB/bX18c4OCdYWEdoaFd4eGeYmI
cYGAeoqJe4uKfIyLfo6Nf4+OgJCPgZGQbHx7gpKRhpaVfY2MhJSThZWUg5OS
FycmiZmYi5uapLSzj5+ejJybkKCfkqKhlaWkkaGgk6OilKSjjZ2cjp6dl6em
mKinnq6tm6uqnKyrn6+uwtLRoLCvorKxmamomqqpobGwo7Oyna2spra1usrJ
p7e2rLy7qbm4rb28r7++ssLBrr69sMC/scHAqrq5q7u6s8PCtcXEu8vKuMjH
ucnIvMzLqLi3vc3Mv8/OtsbFt8fGvs7NwNDPwdHQ9O3lipqZydnY59XGx9fW
1efWytrZzNzbzd3czt7dz9/eyNjX0ODf7uDR6uIOHuMdLOMtLeQsO+Q8y9va
xeXEx+fGHeIexubF1ObV7OXU5tTF8vDo9vLp5e3E9/Pq4useEOgR+PTs0u7R
+vIB9e/u6PAC+fXx7u/gqJiZ6fLo6vPi7PTl8fXu/fXh8vYB+/MP8/cP8/vr
/PTT9fnh8vrw9PjT9f3vD9Rxog==
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
7mrpmhT8OlEF05P4/P8BB3KreQ==
     "]], {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], Line3DBox[CompressedData["
1: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
oAW/qvxovXhhgbjNHuaF9Wy9J38Ba2GKew==
      "]], Line3DBox[CompressedData["
1:eJxF1HtM03cQAPBqgSIGukdtHI8JQhHkJQs4YOgVyYaiUrcMKDDJKLRDVOga
RGAbD0khLm2HFLYBgkCmGxGHQxA3ZwuEUiiPBSEWa0tpsfykaMBRCsJox0z2
/X2T++P7yeVyuVzOg5XzCXs7gUAI3wriVqwez244lcM9THj9lkAiGf3hvz+3
KW+I4d0I//vB7w/2fKdqgD6B4P5J71+RV0/99mBUdAuIdjzSfJYU+XS6OH7W
QwJHi9P4XQly5PLa8+9VL8jgbgFbc318DHkhI+6bL5kjMJV8Noh3cQK5MzXi
amDROLwRI+T00pXIPekm0cOcSSBPsjveT3mC3OEFqSPjghI83c+18lla5JJv
I2MColQQpjk/HFWlQ35G7ZOg7FJD33rJicn6WeSUPcy1jRAtZEoHByWXDMgj
1nfRH9+egbr0n513fY4hfzty04fQroNAps5sYc8jv8wszh+8pYfpZcYY/dgC
clOeJneyYhbM2ncOUONfIE9ZJO+4l/oUam4WfpGYuIhcxqBPmFwM4Eu2P5lf
v4Sc3Okq3fm7Ae5xS26Krr1EfppiOxQdNwdKmpj0cdXfyL39g4vaZHOwr2zC
53TtMvInGzSPzGAMPjilDblWb0Je65S1Hs3HYIbLPywUrCCn2U8HP5dicDx+
keZLNiMPjYppeKjEoDM8yVF2Bfc4ZnmBnxEDLKZy+e7OVeQkhVfFMTMGuxPk
j3/h4y6OpaRWbmIQ6JrRFbqJu3rfSpvVisERPeFKX+4avj/mz8zyrXzu1yGM
XDPunS25AW5b9a9SMx29818h7zmiaFt7hkGVKlMR8BL3Dx8VCfq3+i9vPFMR
mrWOfFat+GO4F4PmsR8HRNwN5BaV4uxIKQYl2eIlN94/yHvvzD3wD8BgKc1n
dxJrE3nBXzs0csUcVG4abaY5FuTjU8nUqdg56Hkes+iUbEV+w8uhvVBqgCla
mD7Ci0BHc44tc/T3MsA53/Qg8XXcnas0z7o5T0GWkPJV1LvbkNuJhpsYLbMQ
xjS2Uppxr74oJr/q1gOv7CPlIZftyFmuGS32QzoQcezXt4lxFyy95WccnoF+
tzSrkUJEniu3nSg8qoUeSzlxvwj3A6w6p4U1NTy6E20UvmmDvC62lfPTCRWM
uXMGBFW4U02rh5xLlSDsjm/WOdgiz9/r1yOSTAJ7rzo1RYj7nlLPIGXNONh0
B7n4keyQ+68mWRpXRqCcOD9SU4S7fqjxwqh4ANy9wtNoBBJyisZ/P+uGBC5l
J5gcCnCPvO+n7i++DS7p5Dz+n7irP9X4hrQ3QUfi4KrVirucp319P/8F4nQH
kQ==
      "]], Line3DBox[CompressedData["
1:eJxF031Q03UcB/DBiBHGo4AKbJI8ywWKgiOCz0iNOuBmIAPkLDZukwDZ3CkB
HkrCQGuMsQmpM4hIizwxHmqUXhAFW9BxqMjDIQxQDMbDmBt7QNxa1/n9fe7e
f3xef7z/+dznTQY7mWmNw+GiLMFbok8o+OoImxOL+38ob004Nv+3c74u/Isa
0ACvfFUxHirmNEAvn383KaAVuUtyYMiktBXwtlzCYm43crVisuWzxB54/zyd
9xNNhtzudtDj9jo5/FzMnLpxfwi5MSEqRcIdhvFjeWHcTx8it7ni6hhn/wic
46tZv1PGkJeq+L84Z0+A0wiz/UDmJPLl+y4xHX7T4OuT38JjKJBf+zIymJI3
C+Spk4NxolnkbRE7CeHXn0DvRlniiOQJ8k5um1vSxjzkdMvlv12YR75ffkfV
GrIA17K/83TP+gd5jXsqvj5BCaHpszoTcxG5qDOPvVmzDNMa6hDlgyXk98oL
Yuy/WQWdYscej9QV5FkjgxVtOWtQd6vkRFqaCjn1iyLbSK4agp3skooka1iP
OPWUMOs5dHHKbgka1ciLl3xJP6RpYMxfTPhQ9Bx54mVKIj1cC4HlD4OOX9Ug
V/r9KiO4rEP0EcX+RokW+anSrebuyXWY4fBiq/nryNmttieLLumgMyrDoa9W
h/xQaXlN5z49bKfJJr7n6ZFziWdweT16eHcOV9t72oD86Ir3hC/ZANc9chwC
iozIDSt7YtK+NUBlwydVEbkb2F22BaT3aQxwOdIqkLGCuezuaW+puxGahq70
CzgvkP9I33bTbq8RhKT6TJoa8wEPusM7h41QViBeI3I3kRd2eM11JhuBvHC8
IlqJuXdX1h+OGUZYowdtz2C8RP7xqth8yOI9dy4JJE8xd75YfJ5l6RG+VNpM
s0zITcN9FONBIwSc2VFSOIN5aMHgZlWYpWc5XuV4zIw8/+peuwg3I4z7k+fe
9sNRXnnOiykeccAA+cHZYeIbmO/CPwhfyjBAHy3zbBzJCvkbFTTryAd6IKcr
W9yaMN96lnNA5aUHbvl7YzFe1sgbtZXyEqoOBCy7DSsx5sPKw64y5jr8SaSb
lW545CmeC7f747TQY6rE7xZgHqd1nXu2RQOjHQeV1S42yKM/L320RaSGIR9W
P1+EeRPnqDDlmQqqpalNs/avISflNr+eb/kj5q7HH2VWY54zauUnqVsAG2mY
VwjBFrn7vgFZc9VTqMQv/l13DvN6z93U2qgZ8PGLovvjCMhPsD2IuRmjcKGA
prUvxvyccJA0w5CDV7ZTIe8e5tJaU/z8WBe0p8n1ZjPmmobQacPNi7H/Ahec
xIk=
      "]], Line3DBox[CompressedData["
1:eJxFzXlM03cYBvBCGWVkwtgKcogWgUI5LNlUqGZSIMwDXYFIa0XQUjl0XAPC
OJR1xaLRtpYWESyHRDs5xgwqKxHTl8EQFIcyQHAMSjmGFBkFsTiuzizz+3uS
559PnuRxikkJjzXG4XC+74p/16WQ5PLQlNQ9uP9iRlf84XzRXeTSnHo98xGD
XOFv9L/3dV7ODW+6rWoVCpsPkX/yf7/fXHXTENKkVn1GLlsg+CuRO7tdXN1E
XFPhTdMI06cBOfVccHPQghWQA0Qm1gVtyG0vzfKJu5xg33ccQSOzAzmHl9MZ
nuQNvDPcBm9iF3ILzxsjtJWd8HN27LCipxt5RQTLq1RHh8GjX1PTvu1Ffr+E
mZj+aRh8vFcU9wt9APnZlst2xfZRYNkXe8c3cgj5hG1e9mJDPDiTEmsEMWrk
f5UEK6fGvwG/4aSuAKkG81Eji17HbGhd5h3sk48jD86i/jiZ/j0kQGenij+J
vGnb2QSa+Xm4xr1lb31iCnm1hNrYLxHBtiMa/XrsNHK2VV6GQC+FkdeMbvr+
GeQ4OWhO5l8FvdrOxyZiFnktpbi8YUc5XKnLiWex5pAT+ea/P31WBRRLs0NZ
ch3yH+pnfITbFdCUyqsTV84j9yny3Uhg1cCAq4wQJl1AHn5Mfkp0qx7c8nvd
o0pfI5dEXwsKS2qA3aHq7ZXyReRz+yXdIYH3YDRVsEckfIP9uo9LH1OUcI/G
3tBeqEfOaM8g15bdB1tmx4tqwRJyPzvKiTCSCgLHcIWtGW+Rzz4tj1+dbYEy
m4QN5Kx/kA+6vY0O2dIGBRWnzu84vYz8QsXxJ4bD7VDVXfJQnLqCvO2T+WLZ
dAfwkmU6x7RV5GLYwpu58Rh0HHdbdswa8ttTlfWcqN9AsqY1GYlbR06mXM2b
CHwGLa/2zlkcNSCnPJIcTuvvgUFXv7FdLjj6ew9geFbnZPVCIoVLlSkwr9s9
bMGO7Id2ZmRuwGYj5PXmmQ/saQPgd0RbQ6zC3HjTAV1p1AtIy/9y4AsHY+SK
YzNeoblDII4zWzaSYb4xR+MxXDsMvzpyDFoiHvmBryo+D7QehZb1AryHGHOr
nK6tfIYGnt8N0oqsTJCfWTkoq2scg25S3EOhFPOQFAW92G0CRMqIKo35B8i9
SXnBJwsnIXbrn9GRIszvFvke53pNgYmS6uBJMEV+6bnJ+Eeql1CAn35yJQ/z
IWX6oilbCyQXGscVR0BeplzfV+bxCvjJzEXzbMxtzhV5zM/NggPXMlPwAPOd
L130H775G+6wOpcMBsx7op3UBsMc/AvZJshn
      "]]}}, 
   {GrayLevel[0], PointSize[Large], 
    Point3DBox[{{1.5, 0., -0.125}, {1.5, 1., 0.75}, {1.5, 2., 1.5}, {1.5, 
     3., -0.125}}]}, {}, 
   {RGBColor[1, 0, 1], PointSize[Large], 
    Point3DBox[{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}]}},
  AutomaticImageSize->True,
  Boxed->False,
  ImageSize->{370.84822696982167`, 464.58685043500634`},
  ViewPoint->{-1.4861291351627488`, -2.404732891471254, 1.8597526486865754`},
  ViewVertical->{0.002690943631898611, -0.06452660695880989, 
   0.9988262387156857}]], "Output",
 CellChangeTimes->{{3.6062470454763255`*^9, 3.606247073384774*^9}, 
   3.6062472552030935`*^9, 3.60644056202844*^9, {3.6065224359828863`*^9, 
   3.6065224554049206`*^9}, 3.6066008308107157`*^9, 3.606601101026171*^9, 
   3.6066011750064025`*^9, 3.6066013033777447`*^9, 3.6066013519585238`*^9, 
   3.6066014748415523`*^9, 3.606601644780272*^9, 3.6066017522944217`*^9, 
   3.6066019213990936`*^9, 3.6066019626694546`*^9, 3.606602005183886*^9, 
   3.6066020563538127`*^9, 3.6066022232863607`*^9, 3.6066022701240396`*^9, 
   3.606602366606558*^9, 3.6066025303599243`*^9, 3.606602611888588*^9, 
   3.6066026904470806`*^9, 3.606602761790161*^9, 3.6066030170937643`*^9, 
   3.6066030607392607`*^9, {3.6066030918620405`*^9, 3.6066031089990206`*^9}, 
   3.6066034514126053`*^9, 3.6066035510683055`*^9, 3.6066036171830873`*^9, 
   3.60660390274442*^9, 3.606604002410121*^9, 3.6066040983176064`*^9, 
   3.6066041394039564`*^9, 3.6066042902175827`*^9, {3.6066043955996103`*^9, 
   3.606604437866028*^9}, 3.6066046100928783`*^9, 3.622332241522293*^9, 
   3.6328778638704214`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Frenet frame
Input: values = {point, first derivative, second derivative}
Output: {tangent, normal, binormal}
\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6051212023252125`*^9, 3.6051212630249195`*^9}, {
   3.6051250493315706`*^9, 3.6051250602047896`*^9}, 3.6051936001642027`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "sets", " ", "up", " ", "u", " ", "and", " ", "v", " ", "directions", " ",
      "for", " ", "the", " ", "Bezier", " ", "Surface"}], ",", " ", 
    RowBox[{"format", " ", "from", " ", 
     RowBox[{"surfderivs", ".", "nb"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"surfu", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", "j"}], "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"2", ",", 
            RowBox[{"i", "-", "1"}], ",", "u"}], "]"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"3", ",", 
            RowBox[{"j", "-", "1"}], ",", "v"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"surfv", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"j", "+", "1"}]}], "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"3", ",", 
            RowBox[{"i", "-", "1"}], ",", "u"}], "]"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"2", ",", 
            RowBox[{"j", "-", "1"}], ",", "v"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"normal", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"surfu", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"surfv", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "get", " ", "the", " ", "partials", " ", "in", " ", "the", " ", "u", " ", 
     "and", " ", "v", " ", "directions"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"partialu", "[", 
      RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", " ", "Green", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", "Large", "]"}], ",", " ", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"surf", "[", 
              RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"surf", "[", 
               RowBox[{"u", ",", " ", "v"}], "]"}], "+", 
              RowBox[{"surfu", "[", 
               RowBox[{"u", ",", "v"}], "]"}]}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"partialv", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Green", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"surf", "[", 
              RowBox[{"u", ",", "v"}], "]"}], ",", 
             RowBox[{
              RowBox[{"surf", "[", 
               RowBox[{"u", ",", "v"}], "]"}], "+", 
              RowBox[{"surfv", "[", 
               RowBox[{"u", ",", "v"}], "]"}]}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"graphic", " ", "of", " ", "the", " ", "normal", " ", "vector"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"normalplot", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"surf", "[", 
              RowBox[{"u", ",", "v"}], "]"}], ",", 
             RowBox[{
              RowBox[{"surf", "[", 
               RowBox[{"u", ",", "v"}], "]"}], "+", 
              RowBox[{"normal", "[", 
               RowBox[{"u", ",", "v"}], "]"}]}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"tangent", " ", "plane", " ", "graphic"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tplane", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Brown", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"surf", "[", 
             RowBox[{"u", ",", "v"}], "]"}], "+", 
            RowBox[{"0.5", 
             RowBox[{"surfu", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}], "+", 
            RowBox[{"0.5", 
             RowBox[{"surfv", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"surf", "[", 
             RowBox[{"u", ",", "v"}], "]"}], "-", 
            RowBox[{"0.5", 
             RowBox[{"surfu", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}], "+", 
            RowBox[{"0.5", 
             RowBox[{"surfv", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"surf", "[", 
             RowBox[{"u", ",", "v"}], "]"}], "-", 
            RowBox[{"0.5", 
             RowBox[{"surfu", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}], "-", 
            RowBox[{"0.5", 
             RowBox[{"surfv", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"surf", "[", 
             RowBox[{"u", ",", "v"}], "]"}], "+", 
            RowBox[{"0.5", 
             RowBox[{"surfu", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}], "-", 
            RowBox[{"0.5", 
             RowBox[{"surfv", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}]}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"surfplot", ",", " ", 
          RowBox[{"partialu", "[", 
           RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
          RowBox[{"partialv", "[", 
           RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
          RowBox[{"tplane", "[", 
           RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
          RowBox[{"normalplot", "[", 
           RowBox[{"u", ",", " ", "v"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "1"}]}], ",", " ", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "4"}], ",", "7"}], "}"}]}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ")"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6051963808378863`*^9, 3.605196381165487*^9}, {
  3.60563295809591*^9, 3.605633526495421*^9}, {3.6056335681598043`*^9, 
  3.6056336237019806`*^9}, {3.605633672606778*^9, 3.6056337198894825`*^9}, {
  3.6056337663351393`*^9, 3.6056338448606305`*^9}, {3.605807840803913*^9, 
  3.605807853834658*^9}, {3.60580805666626*^9, 3.6058080605944843`*^9}, {
  3.6058084369820127`*^9, 3.605808465229628*^9}, {3.6058085053679237`*^9, 
  3.605808550092482*^9}, {3.6058089517444553`*^9, 3.60580895199747*^9}, {
  3.6058103041226144`*^9, 3.605810307862626*^9}, {3.605811332973116*^9, 
  3.605811333513117*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`u$$ = 0, $CellContext`v$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`u$$], 0, 1}, {
      Hold[$CellContext`v$$], 0, 1}}, Typeset`size$$ = {378., {187., 191.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`u$2351$$ = 0, $CellContext`v$2352$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`u$$ = 0, $CellContext`v$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`u$$, $CellContext`u$2351$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$2352$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{$CellContext`surfplot, 
         $CellContext`partialu[$CellContext`u$$, $CellContext`v$$], 
         $CellContext`partialv[$CellContext`u$$, $CellContext`v$$], 
         $CellContext`tplane[$CellContext`u$$, $CellContext`v$$], 
         $CellContext`normalplot[$CellContext`u$$, $CellContext`v$$]}, Boxed -> 
        False, AspectRatio -> 1/1, ViewPoint -> {-6, -4, 7}, PlotRange -> 
        All], "Specifications" :> {{$CellContext`u$$, 0, 
         1}, {$CellContext`v$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{429., {251., 256.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6058090091347375`*^9, 3.6058096905887146`*^9, 3.6058097745485168`*^9, 
   3.6058103117406864`*^9, 3.6058106919035025`*^9, 3.6058111161435714`*^9, 
   3.60581118833629*^9, 3.605811245886861*^9, 3.605811348713208*^9, 
   3.605811382186741*^9, 3.6060001154328127`*^9, 3.6060003969370174`*^9, 
   3.606000526064413*^9, 3.606001092036827*^9, {3.6060011691811657`*^9, 
   3.6060012141275663`*^9}, 3.6060013240790944`*^9, {3.606001384495387*^9, 
   3.6060014391368074`*^9}, 3.606001618554326*^9, 3.606002233097839*^9, {
   3.6060022991523294`*^9, 3.606002314950522*^9}, 3.6060023771158185`*^9, 
   3.6060026952565603`*^9, 3.6060028811658373`*^9, 3.6060029384581127`*^9, 
   3.6060031210286894`*^9, 3.606003151864879*^9, {3.60600321656717*^9, 
   3.606003242047374*^9}, 3.6060033915931025`*^9, 3.606245121081643*^9, 
   3.606246130858492*^9, 3.606246197018208*^9, 3.6062470734159746`*^9, 
   3.606247255249894*^9, 3.60644056204404*^9, 3.606522455467321*^9, 
   3.6066008308347173`*^9, 3.6066011010471725`*^9, 3.606601175027404*^9, 
   3.6066013034017467`*^9, 3.6066013520485287`*^9, 3.606601474865554*^9, 
   3.6066016448052735`*^9, 3.6066017523954277`*^9, 3.606601921424095*^9, 
   3.6066019627544594`*^9, 3.606602005269891*^9, 3.6066020565448236`*^9, 
   3.6066022233163624`*^9, 3.606602270260048*^9, 3.6066023668045692`*^9, 
   3.6066025304929323`*^9, 3.6066026119635916`*^9, 3.606602690467082*^9, 
   3.606603017161768*^9, 3.606603060839266*^9, {3.606603091956046*^9, 
   3.606603109107027*^9}, 3.606603451511611*^9, 3.60660355114331*^9, 
   3.6066036172100887`*^9, 3.606603902765422*^9, 3.606604002432122*^9, 
   3.606604098343608*^9, 3.6066041394349585`*^9, 3.606604290261585*^9, {
   3.6066043956446123`*^9, 3.606604437900029*^9}, 3.6066046101148796`*^9, 
   3.6223322415422926`*^9, 3.632877863886021*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", Cell["\<\
Create an isoparametric curve on the surface
Input: 
uvflag = 0 or 1 to indicate u=constant or v= constant
t to specify the curve to construct
Output: 
control polygon of this isocurve
Note: This is the first part of the 2-stage de Casteljau method for \
evaluating a Bezier surface\
\>", "Subsubtitle",
   CellChangeTimes->{{3.6051214709732847`*^9, 3.6051214942173257`*^9}, {
    3.605121954277734*^9, 3.605122041201086*^9}, {3.605122420234952*^9, 
    3.6051224224813557`*^9}}]}]], "Subtitle",
 CellChangeTimes->{{3.605125077973221*^9, 3.6051250853520336`*^9}, {
  3.6051936060610123`*^9, 3.605193606622614*^9}, {3.6052039584657617`*^9, 
  3.605203987637813*^9}, {3.6052041036864166`*^9, 3.6052042200938215`*^9}, {
  3.605284602471659*^9, 3.6052846055448647`*^9}, {3.6056332332536483`*^9, 
  3.6056332355707808`*^9}, {3.605809031839036*^9, 3.605809033640139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "graphics", " ", "setup", " ", "and", " ", "format", " ", 
     "is", " ", "reflected", " ", "from", " ", "BSurf"}], "-", 
    RowBox[{"curve", ".", "nb"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"create", " ", "bezier", " ", "surface"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bsurface", " ", "=", " ", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"surf", "[", 
        RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"v", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0.4", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "User", " ", "chooses", " ", "uvflag", " ", "value", " ", "for", " ", 
      "the", " ", "isoparametric", " ", 
      RowBox[{"curve", ".", " ", 
       RowBox[{"Here", ":", " ", 
        RowBox[{"values", " ", "0", " ", "indicates", " ", "v"}]}]}]}], " ", 
     "=", " ", 
     RowBox[{
      RowBox[{
      "constant", " ", "and", " ", "values", " ", "1", " ", "is", " ", "u"}], 
      " ", "=", " ", "constant"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uvflag", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"uvflag", " ", "==", " ", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"surfplot2", " ", "=", " ", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", 
          RowBox[{"BSplineCurve", "[", 
           RowBox[{"pts", ",", 
            RowBox[{"SplineDegree", "\[Rule]", "degu"}], ",", 
            RowBox[{"SplineKnots", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}],
         "]"}]}], ";"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"uvflag", " ", "==", " ", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"surfplot2", " ", "=", " ", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Thick", ",", 
          RowBox[{"BSplineCurve", "[", 
           RowBox[{"pts", ",", 
            RowBox[{"SplineDegree", "\[Rule]", "degv"}], ",", 
            RowBox[{"SplineKnots", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}],
         "]"}]}], ";"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"the", " ", "surfplot2", " ", "graphics", " ", 
      RowBox[{"aren", "'"}], "t", " ", "isoparametric"}], ",", " ", 
     RowBox[{
     "although", " ", "I", " ", "intended", " ", "them", " ", "to", " ", 
      "be"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "control", " ", "points", " ", "use", " ", "same", " ", "netplot", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bsurface", ",", "netplot", ",", "surfplot2"}], "}"}], ",", " ", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzV1IU3EABfCbHyAqVrJEBecEV7oms6lLWIgXltCGOT8mrthmA4mmTKUa
XDWKNCgjX1SykeZHDhQ/H24s0gR7iU0kYYpc1Cs9TL14CVwPKqTd8384/Dgv
52Q5m6saoiiKypYCY754XPYtgZbJ54lmbvvo9bZAzzienUD5UmzcG0nlmeYy
bLutTYXF9U0KWGKK5MFs+3carnpeGuF+oKwcOuuCddDylydeC2ps8IU13QEX
Hhpb4N0QQ1xUiQyMPTW9hZR19wNcTln8DIcz5JOw0GSegSviFRZ27rmD8PHx
Nx4O1gSJGe0XRPIT0UWg7NL4P9jgvngG7+VUpHRLMtNVxKToW9f3JP2PvGo4
pWeLYNsNnQ7+WsvXw4qrMaXQlewzwMSpc+Isl2SE1EIr0XNeaYa73WGiS5Fp
gbJ30ffhmOHVUziQd/M5nDh50A/rc0NDZPfHRz+MZ/U8VPh9h7YdgVY5c0TI
vB+ptkt2FYRq4OjOVyuMCpttkAsLB7BM2yiQrrKPJPAC/dN3ZwyyloPeRMkO
9Z8+uKHmBmDgSfsnyPQtjcOe3t+zMM07tw5rla5N+B8JcUUw
  "]],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
5IcCW8dZ62f+/+4DcfWa77iQLZ5tzTeKp+UvXczf8lB4Bv9nU0KJf88jnAf5
3uzl/A7P4Jw3yRu8/1k5H60TnsE/ST1P3mCdJVJ/wjP21EvwjD37OzyD15T9
iLzJOuRP8gX2afK8E3/gHSQ+4YV19gif/M1rldbL6u52OmrZLTwPETw9d6GC
zx0iLeQN7A8ml/vj3/M18cxzMFH6IfAMzvkdnvk+OW8Sz9hzPoJncOp5eGYd
6k94Br8r9RL7IPh72d/hmfXZj4hn7MmfxDP2fvK8wzP2YRKf8AWv8Ikdr+FG
ZtHrhZKUZ9Z3HxPb599+EfmZvBIv/SX6I+D0Q8gbrMf5nX2Q/ZbzJucicM5H
8Mw63lLPU29g31TqT/IzOPUS+yA4+zv5Gfy47EfwDD5J8ic8488aed7pI4Ef
kPiEX3D4ZF1ejdVf+5+dj0yo5+WQ23yn5DeNzrieNU7/XDIkX+O/jE6Cp1sG
3nHxijR+nFS80q5z2xQvOKv0Si+HJKPE47IF7u4/aNyWf896vrJOmvx7/h3r
8O/Bi2dbB38qrgr3GTw8XfNbjOB2qWv/aXPskaWL/HvipWN3W5tvE3LrfsQ6
nYJLHvgcn9vC+vx/F8FZH/9Zh795vdjp+ej3ljTF4XPf7oNz/vWH98Mf/MSO
z4t9h9M/XznvesBwltcdJwKHx2x7ZCnrFpXHxeuLH4KPsXeO2TF8tNqVk///
i+DYgy8r0yCivPsjzVesUyNz9NvHPZ5YKogdfi73Pv68bFS0H+vj74gVm9se
uhXtx9+sP7v2gof/roM978P68Mv//1nWgWfe31Pet7z8zfuwflGnPV42pmBj
M33d4PHt+35IsUy9vuKgyXRb3zdvSoXOWRPuW6YITp6YU3z+zQbF4i1HTQ+c
TaZk47nYh04wBmfVSlKc9Z8GPw/uPe+Wpfr6P5qbTGlqv29n6N3PWTGKYz+p
X+yV+JFXLRsbO9Q2mZ6ovceT6u8+h0Yqjv2bqVObHqlxwbJ41LCCJtML7duv
r1Oj4mfjhmWR4Pg/e/eDV1W27LW0O9Egt8n0Wu0XZdTs+PlykCXrf/+9VR5+
kfNve7FnnTMlXi/41X+JgT14LjkXn+1y411WVqaun/fN9MqfJpyynBOc/e1C
YJ9HNyf5GNPWbX6elfVJ7X8PGXUzM2u/BVzvVebExFjqnTPsXzZ9nTXHpPcO
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
3znewSXRyLFkp/2+Ked1//rr4cee42PjjYGhFRv37Rak+1fre8PSvRzijJo/
rD7YYUyo8rla+leHpc9GfL4S/4u+O5CV7+gdzas9xP8Oi+bY3Ttg3b8Oiv9/
Wk6OaflXlO5fecT/Qj/tPrt8aITyOUL8b/rygumhz3Wtez3Ef/vIky9Xtree
iwtXe9LPxSvDcK7sMvJ0RojyOW5bpR2x3ulGl8P7dlavc0j5DC7f64lrbJqR
NvXxhLaZx7QeqCqvHytvKWlzIUj3KY+Svgu8HB4Yzbym3Cn1NEz3qXivjBsO
LqnGwbFzf2xd9Zby2bxQ+bI+rveNfyb2mXUnM9r4KHwepi8n/TTyZ0Hxf23y
xuPzpycpn2PF/2dejfpPiE1UPi+J/32XjN/aKl+C8llZ/C80pciwf/sn8Dlb
/F9ccV2nLYduKZ8x4v/RMt9tfDbyutZdzcT/bgNePjMi/ZTnEpXrzon1fmZU
Wvn2++AJZ5Tn74cE7XRweWa0HnKwiPPaPVoPJH1nWRXr/dSYdShp7aWPQcpz
a5/nCa6xT4y4ghfbDEgI17hdJ68O5y8P7PLmtsbt2yN93b0cHhvlPT92Cd0f
Z7QVnnvWWXTRweWRYarr0+3q1ESN2xTpUw2WfhpxW1z8fzu7SfSe0feV57bi
/5vyp71uXLynPCeK/6FRnQ9EtEzRPNBS/PcuPmdy7ZhErbv4HM+u/TPhaqtY
5fmV+F/cfvCcNjUi9BzRQ/wP3tNkYkyRAOV5e/2fe3o5vDKmez+cOnLReuU5
zPXjtFjvl0bJ8KL9UgtdUJ4/HVi9ycHlpeEb5bt93r0w5dkxo16Aa+wLo07+
ipnzfG4rzwNrBqd5u74wuoSMPp2nZ4LyzGuf/RVLmzokK8+ndmY2dvF6bswq
sGRnrSr3lGc3+n7ST4Nn/E+u/U+fStPSdP/C/3ENauYeG2U9r+F/j5ApqX2b
pGo8438bc7pr7cUpynN/8b/n3i5uR/clKM9/if91KrXdZHKMUp7xv3irAu8e
tbDmjXqt11Vz8Xpr1NlRZGXwpy0G+9qPvzfq7OXw1qiVdeD7wz0uK8+Lz4RO
jPV+Y6Tavx4751ik8uzzbsQ/Di5vjB/unO188/Zda3+46eezrrGvjaZPurwI
embtW5aYuibJ2/W18XtSwL4/rlj7lrwmnByVd3aStW/J66ds/bT64r99u7Ml
NkzPUJ7xP//qyLz/pFr7D/j/a4Tn9rZO1n6ar/g/sHVm6rBB1n4a/pdLjxpj
OFv7PMXF/6VnXX1W3Lf2LYmXWyfm3J8xysozee6e1DPUY2mLx1Rw8co03sSU
sOwIClWeS4XYtPNyyDQC+zu7pd2P0v5Dh9wbfon1fm8cDUq/tqaxtZ82pX2T
5Q4u7w0Hz5sjC7a19nl2zr920jX2nRH9JO/vBTpZ+zxhF0fFeLu+M5rPXhzk
75X2//TTqmTrp/E6qMqmrEutHmr9kC7+Ly5Z7On+/6ufVlL873TA3XSssLWf
1l78P1D4/q4GpVM1nieJ/yt8+i46FZik9cN28b+sxx9xXXLe1vx8Q/zv2SuP
545C1r6ly6BcV71dPxsLixV8NGeStZ9GnhsldQ4874x2KuXi9eW5/OGmTdd5
1n7a1/7PJ+OAw4dSjr7WfppN77HDY70/Gl363as3c2mKxnMDrxwLHVw+Gqcj
V5w4fMDK8+CwjYdcYz8YuwKbVnte3Nq3tJc+lVu2fhr+D6/87Ydua639NOJ6
55xm+Uz1M4xSwvN28b9c7ryVzy2xxnO4+P/A967be09rPGf1+up/5x8qDoos
a43nuuJ/cI56FVc0sOaNH8V/70sdPO1/Pavx/PDkphvej03muXF39r4oZ+2n
2f6PH5N5uOftb02h1n6aPn9S/xDPX3kzmfd/3/ZibF9rH965YVgZl6Ims9fd
GpcOWax9+HNbmw+K9c4ypq1+O9kj6r7y/DA+3MPBJctolnJgvK2zNZ7Ds+ld
yc8Z4v+LDb8/Sxlgzc/4X2DDuuOPbKz3HbwW3VSl2uzJqcpzffH/TLPiRSss
tObnDuJ/hRW9W//aNF77D2fE/5l38y09VTxc4zld/A/Y3WTdgAE7lOeG55o1
99ppa97+/cNnVbpZ47nD/+LE1nwr7un62NUh1j5P5s3BsU1tzeN/Kvai/esI
jedp4m9hqYuoM5Y1+3WBQ4iN+dbR1ls7hCZqPH99LmzMwxvHJa47lqJ5+ax7
zv2ug2zM+b51fPQ0d2q2/rCteYr004jnRuJ/8KNxlxv1vmdMF55dxP85jZc0
D85lrTfwf0DVrXWLrExWntkP91adtcG0NUF5Xir+Nx+UXCe1SrTGM/43N/81
uoF3kMbzGfHfp/LHWT4Vj+p5eVpAxHbXQTnNZ01VTfsmHTe4j/YcvvVbL4ec
5v2hvYdfKxio8bzLxjXY+3EO8+tr5SOfr7uh++DX+MxhbmN31vPhjlu6D+Lv
I6mL4Plr3OYw3ziaWL6oQ6LGs+3sLcVciuYwNy3xIvV4U2vfkj5V7Wz9tBni
vznu843wY3et9x3i/8gagWkRhe7q+Q7/2249513h1ztab+B/8JLyt3OMiFS/
6ffEdfPOvb6JVV+RIf5fcdk8pFHSeo1nG/F/Vq62EQ9mh2ifx+/K+PwuRe3M
rbYEOHz3ZJfG861fWmxxjc1lXlnj2tyKe301nh/mydPIa2cuc//6Xs1Dygdq
POfYGxno7ZrL3GV1lYCkkVd1HyzjvK1fbNNc5j1Vk+wG9g5XntlPqkldhK7J
5Y/vZjmE5DRvPP9Xj0Uj7mg/jf5e3sb/7afh/5tnp9KiUoOtfXjx37301bid
fS9rPOP/j6MetOy81l95xv/Ak37bql09oTzjv9/M+IOhwzdqn4fXVh4Dyn5a
HqT9tI7i/8ymcy/0+RitPOcIz+vuEJLb/PzYn83c507Rug59X+W/q/74oMIq
jedGhXdscB2U21y7f/kT/nd3Kc/OojPc1WF9wPKpx5Xnod1aXvR+bGdeVeXP
qNj7ZzQ/T3ucp3est505V7fXA58cuqjxvEz8DZa6iHjOkP5VLemnaf9H/P+l
desx6fEXLOSNMuL/090ndywuGKD9tIbif/Oa/v1qtblsId+5iP/j0rt06tvs
uvbThoj/Zw9XW9ZrWKTyPF38r+G7JPri3Vjl2Un6V34Zz39uPHWSxnkD8nRa
XMvkadtU31VA+jPxmw8t27Nzt37+K9KHeTzr96gm+U4Y6L6+k/5DcJ4L7k2X
ndJ8lSV9hg4fStTz3HNO9wXeP6+8L98v/p9ruHZkrhOH9fsdLp93n5dvu/l3
jmu9VO3z18/VYt7EOQsXpFvwk/f/aDla7mJWsvKQS76XXMd/KL+4Vbrq1uhD
/vBoTcGsnzI0DtExTrPMa/Ivjr4NPWYt0WFiB+4u9ui6WM9R9G/ojeDjsui1
0MFgHyf6IvQl4Ohh0EOAdxb9Bvfr4LtFb8D9Ljj349yPgnOfyz0in4v7R+6H
sOe+jPsJPleI3O9wTwDOfQR6UPIoOlX4ZB/7RnSt8Em8oBtEl8Y6DqJzg0/W
CRNdls6HCo6OCD7B0b2QV8FHiE5D50MFbyG6Ar2HFpx7cO4d8Yd7W60/uD+X
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
    "], {{
      {Opacity[0.4], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
98wcn6oFx/8azHOZ4irjX9A5pZgMT5Uvad9njhPdFCexP69nyfWd6Ff57quM
uTtz3jBDfp05J5uufZw5l5qmfZw5x5oDj8lcV8yFx2auNT6Bx2WuQSoF501V
lPPoXMkcw16C78qckz0H35w5/tUMzr/q6jliH505h34N7p85v3kZ7pc5R3xe
51bmWDhV52LmePkifGfmXE3rKa1znzmfDPb9Z+CJwXvi0cTn5jFcH5fk+R7X
peETsG1XvNFzR3Ygv2o/5nFaMVr5w5epn+Py4Gf1k+K7fCRz3qA87Ufs5THv
RP5G1uTz7Ue25PPty2O/zu6qfO/kxPnektR+tS3/vs7eFcH+8jO8MthfVsNl
dX/hw+A9ikHRe2FRcH35o/4/tpHR+2VxcA26TOdYcC27NHF+qziyVud58Dmo
M/AvbPMz19s78rXrniwL9rtVie/lK6nv53Zkr/a6zpPoOKX79mOwb65InKs8
HL0flwb75sr8/uzRupAD+W9fk8+5K/kvhfrPPxemzuflDwtS58Dyh69S1xTy
sfmp82H54dep6w75yaLUtYN88vvU9YX8f0Xq3FK+tzJ1basasKb2SeL8dCfr
bpT6WX+d2Ve0L0op/8j31PLU+ar8dnHqZyrfLqlYmPg5z8jt2l/fpa47DpbP
IIdpHejmykuwF2f8umD//AfbdZlz0J35Pfoj96XdSInEecXa1HW98qvNqXsa
ynlWp67xlfOsSV2nK1ZuS90fUKz8M3XNnvF/Fiq5TR1n/0K3Tpy//Za6x6Lc
75fU/QTF3+2pexSq15SHrNMadB7nvrozX6/8Wb2F35W/JO45bMnPAfUTtqbO
65S3b0h9fqo2/DX1uad7NTRzD6JZ8D07R+eh9hDcPXFtcjBruACuqTiPdOaz
kYzpgn44cT34U+rzSnXNIdF5XQ34eaQln50efA+0znvgVqmfy2l83kznWuJa
clXqc0O5l3oruv/q7exKnQ+rt7MjdY6n/tKB1DlMe51DqdepntW+/LeoT7U7
dc6s/tX+1Dmhelb/pM6RjtU+ylynqV+0E31G4h5RxtraJK7H12M/NXH9FaNz
LdVfheicSvVakeg8VvXUQdF517foGjpb4dOxN43uk6jvdHh0bvyd8mzm/0Hj
lX/Di/O9vw85Pt+/Og82IguVizNmSe6z8t3N+b7X/te5uz9nnQOb8u/ru98E
56M6l3Yz937lNPnZsD0f+6byjtR13N+5z+kc3Zf/rxL5+bQ9P09OVczVvtL+
QlYF12jy/wGZexaqKw+LzttVzx4aXYOoDi0eXReo/3YkfEniPsnR0TWLeiNl
omsZ9UyOia6hVOceG11/nQyfFF1zqY6uEO3Dqt9PiK6/vmIdk/lR38LVVKNE
13Q3BJ9JN8OnYK8WXceph3BidK33RJ7vKT9UTvtzZp9TbaLit3P+3X2Z+2Za
z97M/bQ7gnucd+f3an/mftk1wX0vxdmewX01nW+9gntmveHewb031R03Bvfr
tM5bgvt/qhFuDe7/qXboE9yv6pv727+Z+6raa/9k7j9eH7wvVddcF9yHUz1y
bXB/TjXLncE9V+XqDwfn3WPhscE59QS4rvZIwf242nBacE9tQHAPbSBjRgfn
5uPgBtojBefcD+X5tvps9bVfCs7L7wru+6oX3S+4b6caoW9w71O10gNwL80B
Dw95zw8eFtyPHAmPCO7NjIJvDu7PqUa7KbiHp9ptTHANMR5uzRrKFpw3XwxX
hqfAF8lPCvabTnAleBJ8ofyq4D5RK/lnwf2ClnDpgvPgZvL5gvPgM+ESBdcA
Z+icLLg2aKwztuD64aM8Z1Cef578v+D8vqn2S8F552TG3I5+nDGTgnPqxxLH
u1Bw31P5i+oy5TAPRteJqi/aossVnPd3gI8vOI9vL18uOI/XvtiTubfZEF20
4JqqnfZawbVKG+3BgmuGd1jDeMU35n81r1NUEylXUp2ofKkRuljBddHs4Dxo
LvYLsFcsuCZ5LbjOeAP7jOB6ZSZ8PmPKF1x73B0cf1S/19E5XHD/997gPuug
xH7Ynv89PPfPDtHvFDS+XXTvXff88ui+sZ7FFdH9ZK2zW3RPeApzXsOcT8D1
sL+X2ed0Ty5jzMTEdccE5R+J65Hx0WeL+pk3Rdd98qvbo+s++f9F0X1p+Xyn
6Bgq/7ktulZS/TIO/iZxj7RPdF2pPuf10bWt/KpndA2rOuXz1HmjYtmmzPFb
fZgU6Zq4lxKi32XID6+OrnnlV1dF/8bp/N47+N4rcBPsczL7WQs9w8x92HcZ
cz/6g8Q92Buj61z5/K3RNZFq+c9S96LVj72B6+dzf74len71efam7osuUT0D
L09cZ42Jrk/1fke+K7/VXhscXefKZwZFr6EjPC+z/8m3746uqbVPh0TXodrL
90fXwtrLQ6N7eguC97ee3cDg3vwQ+L7g/v3gxH5+D+PfggcHvze4P49vs1LH
uPnB54Ge16DgdwhDE9eSo5VPJ37nNSq6Rta+uze6xlc/7ZPUvXH1Oj5M3Z9U
3fpB6h6m6tb3U/c5VauOje5Lq0/yaer+vHpEH6Xuc6pfNzd1D199vDmpe/va
4wOi+wlfsM4Jqdemfd0/ut7XXrsvuoegfuDs1P1b5cxfZc6h9Q7uoejaXzXs
EdFxSjnFI9F5hXoOd0XvccWretExS/X9vNQ1vt5bNUGGJe5Z7knd51TeeCBz
jqg8RPdaeYvexTSI3uN6t9IyOh6p51Y0uuepPFnrUG6svphypA2JY1GL6Hik
XpXyK9VfqkeOj+7Xqc+6KV+DelvKx9bnz1o9B61B7yvPio4vev/VMboWVm6s
5rZyYr0PahTtS3pPd0a0z2j+jal7GtpfxQveb8opekXnFTpnCgWfO3pX1RZ5
JHFMGBYdFxQzL46Om3oHcWF0LND7qYbRfqsz+I7oc1h9sy7R9bveITaO9k/l
O5My3wO9t2oVHaP1rqp1dEzUe7E20bFe/bRLkamJe25do3vm6sVdEv2+Ru/a
zo2Oy3ru9fN7rndzF0THKfWU+snv8zVUzH1Dfa2+0XFEZ85RBZ816gMtzX1G
fbzromOEfOmLfA/qffE50bFe/bpro2OH6u4R0b0mnRUVCvZ7+cN5+T3U/eyc
33/54d+pfUm9vt7Im4nfQZ8dnWNoPcvy56i+Vo/o91PqGXaPfj/1fwni3PE=

          "]], Polygon3DBox[CompressedData["
1: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
jHe88BMPyPbXeCfpfz3y16U=
          "]], Polygon3DBox[CompressedData["
1:eJwt13fgVnMXAPDn9zzPr9DQJElKkqhoau/SlhLaaaCk0DaKFqlEU9NokNd8
jTejQkPTq4xoIuO1Ncjmc977++P0Pedzz316xr3fc3/l+w/vMiydSqXeFrli
bjaVOj2TSp0mzpXXcbCTvLa8v3xuTir1oL5l6gv5BaKqvJljneV15APk8/Qt
1DectWIT2QtsDVuirsTPExfKmzi21FpZfb6oIm/KqsuryVvIRzl3nHO7sbps
MFvMlrFX1JeI69mi+H/FZfpqsWvYHPUCfTvVKXFEXUAUFPPUZ+gtJSrG6+hf
aC2vLhfvR96Q3SRvLZ8kf9F5L3upPqw+u4k9ylaxvqwhu4WtYI+zoawFu5P9
m73E5qiL82Kigry2Y03lF8u7yCfru0dfE1addWVT2DS2WX2pmMrWsP+IxeqK
8ZvFbyJv7Ngua1b87Xh5cY5o7XhN1sPxGepZXm8Ya8nuYs/H67HerAG7mS1n
j7H98mf5X+pyoiLbx55hf6rPFueyBc47i5URleT19My2llSXEOfIa7Eb5c3l
E+TPOfdF5y5SV4geUVneyLGB8ibysfIn9D2lrzArz6qzAexa1o81YiPYSraa
vRHfhRjDVsfvEb36mrFb2ZPqZ/R9HO+BZ6wVWWW2V/40+0NdVlRgzzmvhuju
2HR2r/gkfld9Wet56gv0zddzJisd17m8rmNXyuvJh8iX6HtI3yDWlI1j/2JP
s1Xqi0Q7dju7TXwhz8/yW+upG+n7NH4v5+daK7ELWW31u+JSNoQNZ3XU74k2
7AZ2E2urPiR6sQlsEvsz7/9ty4ayG0VjPXvF5Wykemwq2SjiO7g6nby3eI+N
9HwkOrMR6jHaWqkPiqvYrWwCq6/+QHSMe4qNZOW8XhevNzedXMtxTQ/R8724
gz2sXqHvBvUPYjx7hK1k09THxBK2nm1g7dQfi97sTjaZNVR/KC5jt7DRrJ76
fdGBDWcjWAP1HtGJ3cxGsfbqT0QfdhebwlqqD4gr2Tg2njVX7xNXsDHxvbAh
Ptdf7LO8/Sb2nQ8cz/Df4jcTF8X+y3LYsbjOxHmsgPPKsmqO9WMD2B/yEuxs
6+XsCjZdXSzuOXYZ6yR+lxdnZWNfVnfV18Lr7Rfd2Fh2BxuVtycezdsfYp/Y
4vjf+r6Rnxn3tZaf1S/G3iavy56N+8550+M7jHkQ94DYI9L817gPRDXHBqpn
xO8ufyiuWTFL3ZMvl7+v76O4rtjauPdZK9YW9ddzb1y/8qVxj4q/xGmxR1u7
6rvSscF6vhO3s4fYcjZOfUTMiD2KPZ9KZtuGTLLf/phN5lxHcVj0Y5P03a0v
R70u9mbWmrVLJXNiYyaZiUeyycyIObYtk+y3v2TzZprYkUlm2G/ZZEbGbNue
SWbdr9lkzlUVOzPJ7PydVZGnxfrYx9ml/t/2qWROvJlJ9swfssnMuEJ8Ia5l
0/Tdp2+A+lsxij3IlrKv9JeJWZ1Orou4Pmrq2SVasevjPtdXVP1GzIbYp1gP
1lX9uRjE7mEzWRH166IG68a6s1vUP4rJ7DH2JKumfjv2dzaIDWa11LtFazaY
DWM/qZ+K70JeOfY/x3qpvxbDY26w+Y71VH8l4mHlgZjb7Lh6edwj8tLx/zpW
MjeZjVPSyV4fe/6teo6KmTG/1C/o76D+VPRlE9lUVkP9jmjJrmNDWQ/1/8SN
7H42lxXMTWbK6HTyrBHPHDHvNmeSff5YNpl9/eMeEiPZAj1LnNtd/aUYGvcA
m5NK5sSmTPLscTSbzIyzxVuZZHYej/s4k8zFLZnkeeTnbDIjY+ZvzSRz8kQ2
mf8743eI38TrnyROi++KnRrPdta2rCM7IS8azz/W9nFtsCmxp7GFbHtO8lw4
NfZwtojtYP9l42MvZQ+wDewtNoF1ZrPZxthH2KS4VtkCtpXtYBNZVzafbWHb
2eTYl9iDbBvbybZmk7kwj73FNseeFXszu5+9GRZ7GGvHprFX2To2k3Vnj7B3
2Z5UsgddzR5mu3OS/ei2uP/ZLPYG28Ruj5nA7mOvs41sBGvD7mYvs9fYSNaW
3cNeYWvZaNY+9iz2GlvP3pQvi/tVfao4hd2pvlzfHMc2sa2sECvHLmb92SB2
WP4Cz2c9n1Vh78azAjsRv60ow47FZ2cl08n+HPv0e/F8w35Rl4prlO1mT7Cf
1SVif2fvxL3CjquLiDPYLraa/aQuJkqz7Wwl+16djfPZb/E52ZnWxqwF2yFf
xX5Q5xMl2R6f6xRRyLGLWXXxTcx7fQWtF6lr6TuUN8vKsCasqTgS37m+4tY6
6vr6fpSvYcWstVk9djR+B1bCeglrwL6Wv8QKWKvF3hezTF4k9m9ru5iX8Zwo
Xxr7nbqQOJmtZ0tin1Dnj2AHWK5zc6w1WG3WRc9nYiC7m82I+yPv2TuVTj5r
fObP5Sexk6z11Y0d/l5eiBW1tmCt2XfygqyItTlrxb6Un8xOtjZgTdi38gLs
VGsz1pIdlOdjaWtNVifGqvdWKmYTu5r1ime92CtZOWsX1o3NypsVVVgf1lv8
JC8cc9LaRt1BXz6vVzpmGOvB+sQjITuDVWLd49x4rGCnx98l7CrWk+WPa4VV
Zj1Z37iu8p6RDsf3HveHmJJ3vRROJ9dAXAsFY1+MZ1R2jXqgc9fJF/NP1Llx
vbFtbAX7Tp0WxdlrsVezQ+qcnP8/8qQ2s0dj1qhPF4XZJvZIzJq4buNaYBvi
mSL2bXVRUYBtZA/HbIjXj/fGTlGf5YWrOtaX9WcPsN5sFfuQ7WP3sR7sUfYe
+5DNY9ewJ9h+doi9GnOcH1T/nTwepe73Ty99Kx3bw/eyOTHH2ONsLzvAZrM+
7DH2EdvP1soX8Y/VmZy8v/fV/fStdmwfOxi/ZW7y9/R16eTvm/g75x9HWthi

          "]]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
       Line3DBox[{255, 478, 1125, 256, 492, 284, 1232, 506, 299, 1237, 520, 
        314, 1244, 535, 329, 1253, 550, 344, 1264, 565, 1171, 359, 580, 1185, 
        374, 1279, 595, 389, 1283, 610, 404, 1289, 625, 419, 1297, 640, 434, 
        1307, 655, 449, 1319, 690, 670, 464},
        VertexColors->None], 
       Line3DBox[{257, 479, 1126, 258, 493, 1137, 285, 507, 300, 1238, 521, 
        315, 1245, 536, 330, 1254, 551, 345, 1265, 566, 1172, 360, 581, 1186, 
        375, 596, 1197, 390, 1284, 611, 405, 1290, 626, 420, 1298, 641, 435, 
        1308, 656, 450, 1320, 691, 671, 465},
        VertexColors->None], 
       Line3DBox[{259, 480, 1127, 260, 494, 1138, 286, 508, 1147, 301, 522, 
        316, 1246, 537, 331, 1255, 552, 346, 1266, 567, 1173, 361, 582, 1187, 
        376, 597, 1198, 391, 612, 1207, 406, 1291, 627, 421, 1299, 642, 436, 
        1309, 657, 451, 1321, 672, 466},
        VertexColors->None], 
       Line3DBox[{261, 481, 1128, 262, 495, 1139, 287, 509, 1148, 302, 523, 
        1155, 317, 538, 332, 1256, 553, 347, 1267, 568, 1174, 362, 583, 1188, 
        377, 598, 1199, 392, 613, 1208, 407, 628, 1215, 422, 1300, 643, 437, 
        1310, 658, 452, 1322, 673, 467},
        VertexColors->None], 
       Line3DBox[{263, 482, 1129, 264, 496, 1140, 288, 510, 1149, 303, 524, 
        1156, 318, 539, 1162, 333, 554, 348, 1268, 569, 1175, 363, 584, 1189, 
        378, 599, 1200, 393, 614, 1209, 408, 629, 1216, 423, 644, 1221, 438, 
        1311, 659, 453, 1323, 674, 468},
        VertexColors->None], 
       Line3DBox[{265, 483, 1130, 267, 497, 1141, 289, 511, 1150, 304, 525, 
        1157, 319, 540, 1163, 334, 555, 1167, 349, 570, 1176, 364, 585, 1190, 
        379, 600, 1201, 394, 615, 1210, 409, 630, 1217, 424, 645, 1222, 439, 
        660, 1225, 454, 1324, 675, 469},
        VertexColors->None], 
       Line3DBox[{269, 485, 1131, 270, 1230, 499, 291, 1234, 513, 306, 1240, 
        527, 321, 1248, 542, 336, 1258, 557, 351, 1270, 572, 1177, 366, 587, 
        381, 1281, 602, 396, 1286, 617, 411, 1293, 632, 426, 1302, 647, 441, 
        1313, 662, 456, 1326, 677, 471},
        VertexColors->None], 
       Line3DBox[{271, 486, 1132, 272, 500, 1142, 292, 1235, 514, 307, 1241, 
        528, 322, 1249, 543, 337, 1259, 558, 352, 1271, 573, 1178, 367, 588, 
        1191, 382, 603, 397, 1287, 618, 412, 1294, 633, 427, 1303, 648, 442, 
        1314, 663, 457, 1327, 678, 472},
        VertexColors->None], 
       Line3DBox[{273, 487, 1133, 274, 501, 1143, 293, 515, 1151, 308, 1242, 
        529, 323, 1250, 544, 338, 1260, 559, 353, 1272, 574, 1179, 368, 589, 
        1192, 383, 604, 1202, 398, 619, 413, 1295, 634, 428, 1304, 649, 443, 
        1315, 664, 458, 1328, 679, 473},
        VertexColors->None], 
       Line3DBox[{275, 488, 1134, 276, 502, 1144, 294, 516, 1152, 309, 530, 
        1158, 324, 1251, 545, 339, 1261, 560, 354, 1273, 575, 1180, 369, 590, 
        1193, 384, 605, 1203, 399, 620, 1211, 414, 635, 429, 1305, 650, 444, 
        1316, 665, 459, 1329, 680, 474},
        VertexColors->None], 
       Line3DBox[{277, 489, 1135, 278, 503, 1145, 295, 517, 1153, 310, 531, 
        1159, 325, 546, 1164, 340, 1262, 561, 355, 1274, 576, 1181, 370, 591, 
        1194, 385, 606, 1204, 400, 621, 1212, 415, 636, 1218, 430, 651, 445, 
        1317, 666, 460, 1330, 681, 475},
        VertexColors->None], 
       Line3DBox[{279, 490, 1136, 280, 504, 1146, 296, 518, 1154, 311, 532, 
        1160, 326, 547, 1165, 341, 562, 1168, 356, 1275, 577, 1182, 371, 592, 
        1195, 386, 607, 1205, 401, 622, 1213, 416, 637, 1219, 431, 652, 1223, 
        446, 667, 461, 1331, 682, 476},
        VertexColors->None], 
       Line3DBox[{281, 683, 1332, 684, 282, 685, 1333, 686, 297, 687, 1334, 
        688, 312, 533, 1161, 327, 548, 1166, 342, 563, 1169, 357, 578, 1183, 
        1184, 372, 593, 1196, 387, 608, 1206, 402, 623, 1214, 417, 638, 1220, 
        432, 653, 1224, 447, 668, 1226, 462, 693, 694, 695},
        VertexColors->None], 
       Line3DBox[{463, 669, 689, 1318, 448, 654, 1306, 433, 639, 1296, 418, 
        624, 1288, 403, 609, 1282, 388, 594, 1278, 373, 579, 1276, 358, 1170, 
        564, 1263, 343, 549, 1252, 328, 534, 1243, 313, 519, 1236, 298, 505, 
        1231, 283, 491, 1228, 254, 477, 692, 696},
        VertexColors->None], 
       Line3DBox[{470, 676, 1325, 455, 661, 1312, 440, 646, 1301, 425, 631, 
        1292, 410, 616, 1285, 395, 601, 1280, 380, 586, 1277, 365, 571, 1269, 
        350, 556, 1257, 335, 541, 1247, 320, 526, 1239, 305, 512, 1233, 290, 
        498, 1229, 268, 484, 1227, 266},
        VertexColors->None]}, {
       Line3DBox[{698, 1018, 477, 697, 1125, 920, 699, 1126, 921, 700, 1127, 
        922, 701, 1128, 923, 702, 1129, 924, 703, 1130, 1022, 1227, 704, 1131,
         925, 705, 1132, 926, 706, 1133, 927, 707, 1134, 928, 708, 1135, 929, 
        709, 1136, 930, 710, 1332, 1012, 931, 1019},
        VertexColors->None], 
       Line3DBox[{712, 1023, 1228, 711, 492, 713, 1137, 932, 714, 1138, 933, 
        715, 1139, 934, 716, 1140, 935, 717, 1141, 1024, 1229, 718, 1025, 
        1230, 719, 1142, 936, 720, 1143, 937, 721, 1144, 938, 722, 1145, 939, 
        723, 1146, 940, 724, 1333, 1013, 941, 725},
        VertexColors->None], 
       Line3DBox[{727, 1026, 1231, 726, 1027, 1232, 728, 507, 729, 1147, 942, 
        730, 1148, 943, 731, 1149, 944, 732, 1150, 1028, 1233, 733, 1029, 
        1234, 734, 1030, 1235, 735, 1151, 945, 736, 1152, 946, 737, 1153, 947,
         738, 1154, 948, 739, 1334, 1014, 949, 740},
        VertexColors->None], 
       Line3DBox[{742, 1031, 1236, 741, 1032, 1237, 743, 1033, 1238, 744, 522,
         745, 1155, 950, 746, 1156, 951, 747, 1157, 1034, 1239, 748, 1035, 
        1240, 749, 1036, 1241, 750, 1037, 1242, 751, 1158, 952, 752, 1159, 
        953, 753, 1160, 954, 754, 1161, 955, 755},
        VertexColors->None], 
       Line3DBox[{757, 1038, 1243, 756, 1039, 1244, 758, 1040, 1245, 759, 
        1041, 1246, 760, 538, 761, 1162, 956, 762, 1163, 1042, 1247, 763, 
        1043, 1248, 764, 1044, 1249, 765, 1045, 1250, 766, 1046, 1251, 767, 
        1164, 957, 768, 1165, 958, 769, 1166, 959, 770},
        VertexColors->None], 
       Line3DBox[{772, 1047, 1252, 771, 1048, 1253, 773, 1049, 1254, 774, 
        1050, 1255, 775, 1051, 1256, 776, 554, 777, 1167, 1052, 1257, 778, 
        1053, 1258, 779, 1054, 1259, 780, 1055, 1260, 781, 1056, 1261, 782, 
        1057, 1262, 783, 1168, 960, 784, 1169, 961, 785},
        VertexColors->None], 
       Line3DBox[{789, 1170, 962, 787, 1171, 963, 791, 1172, 964, 793, 1173, 
        965, 795, 1174, 966, 797, 1175, 967, 799, 1176, 571, 801, 1177, 968, 
        803, 1178, 969, 805, 1179, 970, 807, 1180, 971, 809, 1181, 972, 811, 
        1182, 973, 813, 1184, 975, 815},
        VertexColors->None], 
       Line3DBox[{814, 974, 1183, 812, 1275, 1069, 810, 1274, 1068, 808, 1273,
         1067, 806, 1272, 1066, 804, 1271, 1065, 802, 1270, 1064, 800, 1269, 
        570, 798, 1268, 1063, 796, 1267, 1062, 794, 1266, 1061, 792, 1265, 
        1060, 790, 1264, 1059, 786, 1263, 1058, 788},
        VertexColors->None], 
       Line3DBox[{817, 1070, 1276, 816, 1185, 976, 818, 1186, 977, 819, 1187, 
        978, 820, 1188, 979, 821, 1189, 980, 822, 1190, 1071, 1277, 823, 587, 
        824, 1191, 981, 825, 1192, 982, 826, 1193, 983, 827, 1194, 984, 828, 
        1195, 985, 829, 1196, 986, 830},
        VertexColors->None], 
       Line3DBox[{832, 1072, 1278, 831, 1073, 1279, 833, 1197, 987, 834, 1198,
         988, 835, 1199, 989, 836, 1200, 990, 837, 1201, 1074, 1280, 838, 
        1075, 1281, 839, 603, 840, 1202, 991, 841, 1203, 992, 842, 1204, 993, 
        843, 1205, 994, 844, 1206, 995, 845},
        VertexColors->None], 
       Line3DBox[{847, 1076, 1282, 846, 1077, 1283, 848, 1078, 1284, 849, 
        1207, 996, 850, 1208, 997, 851, 1209, 998, 852, 1210, 1079, 1285, 853,
         1080, 1286, 854, 1081, 1287, 855, 619, 856, 1211, 999, 857, 1212, 
        1000, 858, 1213, 1001, 859, 1214, 1002, 860},
        VertexColors->None], 
       Line3DBox[{862, 1082, 1288, 861, 1083, 1289, 863, 1084, 1290, 864, 
        1085, 1291, 865, 1215, 1003, 866, 1216, 1004, 867, 1217, 1086, 1292, 
        868, 1087, 1293, 869, 1088, 1294, 870, 1089, 1295, 871, 635, 872, 
        1218, 1005, 873, 1219, 1006, 874, 1220, 1007, 875},
        VertexColors->None], 
       Line3DBox[{877, 1090, 1296, 876, 1091, 1297, 878, 1092, 1298, 879, 
        1093, 1299, 880, 1094, 1300, 881, 1221, 1008, 882, 1222, 1095, 1301, 
        883, 1096, 1302, 884, 1097, 1303, 885, 1098, 1304, 886, 1099, 1305, 
        887, 651, 888, 1223, 1009, 889, 1224, 1010, 890},
        VertexColors->None], 
       Line3DBox[{892, 1100, 1306, 891, 1101, 1307, 893, 1102, 1308, 894, 
        1103, 1309, 895, 1104, 1310, 896, 1105, 1311, 897, 1225, 1106, 1312, 
        898, 1107, 1313, 899, 1108, 1314, 900, 1109, 1315, 901, 1110, 1316, 
        902, 1111, 1317, 903, 667, 904, 1226, 1011, 905},
        VertexColors->None], 
       Line3DBox[{919, 1021, 693, 918, 1331, 1121, 917, 1330, 1120, 916, 1329,
         1119, 915, 1328, 1118, 914, 1327, 1117, 913, 1326, 1116, 912, 1325, 
        1324, 1115, 911, 1323, 1114, 910, 1322, 1113, 909, 1321, 1112, 908, 
        1124, 1320, 1017, 907, 1123, 1319, 1016, 906, 1122, 1318, 1015, 1020},
        VertexColors->None]}}},
    VertexColors->CompressedData["
1:eJytvHk0VeHb/98gpFElGpREJSVJSMO7QWYlNIsSoihFGoQ0kOZJSmhQ0Ugk
SWSe5+GYOc6Ic6RkKKHf9jy757uWte7vsz6/9f3LWnudtc8+977v63pf1/V6
m2NzxMxuxLBhwzRGDRs2kvr7Q//LqhDlBmhEtr6ZWpUA9t/rEab1TOiPWq/G
kS3BdNUrC61Ec8C7aR2rEclH0ucfsacLi+BnUxkTFF+FQxt7LOeJtWLTszWG
5YtL8UIvPvnjXyaSN1lc2JPZjI7g1Z7lxhUITvgycLSKjW2N1+3qlvDQ57iV
VfewCu9HbplQ4MWFhVVLxCEvNhxmCwquvq7Ft3oH3yNneLCeuPl97dIm2NU4
Fh240IDAG+dTGN081Kdc2Zc+0ABvlVrxiRZMSLxt9ys140P1i8+kjKN12OU2
o2mUShPKOyJNn57g42/ch7mO3Bo8M9t8Y1tqE3IvTMzbeY2PG+2PwgdY1Zho
oRNvPJOFDrX8bxeD+BC/8URtrW41Fh+R+utlyALf2uGWwRM+yp1D01O7qnAj
qH7Yhd0srDl88FJWGB+2+z32zKiqQk5+nFXHHhZuJG9/Kf+MD3k92f6Gsiri
et7SvnchfW0xDnDeMMXianB/TNe8R4IWXJGRy4J9GXLuVud1nmfh2bAjE0KL
+JhnIW48k1kJ8QJG96G1XMy7dV5LfBwHdzt+ekq9rkNqx17/neE8pPx1OX7p
ARPh1vrNH+8w0T82UEViHx9/3k1m63TUYuu0EC/pCyzkL3Xy/vSSj+iZ3jkO
t6rguPrumcLvbKSPuxghmcdHjE31CY0dDFw/dG3LDzYHt53ULddl8+Hxtlfu
/JIKTMrOajLby8WEB/eYxZl8BFTejvgcWA5LhacVn124kDCfpvuYuv7M+LNz
7PlylG7xqPg+m4vNuxaG3Mjiw/ikf5ERrxwNc6L9v5zk4M1hzW6vHD4WZ8os
3hZdAb7d8yDuRTbaN7/btymfj+YnZ7lvahjQOOg3cnD97TcU/vf6u1TuGFz/
r/T+vEzvTyd6f5LWU6vvq1vQ7ypcVtw+qSOEi6R3ycmammy4BB1uj9NthNzO
rwknpfkYK32lebp0A3qM/zRYxrMwqbRyy8X3fKxlsHID1aug0/jcosKCi+t2
ooIO6vcu5KetTX5eDsmfCf1/1/HhfHLJ8If3+UjVMNPNu1qKv7bFW26da4ZV
5xJGlREfCQPbNy89XYLj4QINM/UWXM9O5urP4WN82w+rtqZiGBlJmwbsbsGk
n1rLWdTzhPnanjVKLsbeJsu1b/ua8ftoe85DFT5sTDuTAiVLcLk345VwRjN2
bFj50smWD7UiruKs0hI8n2+p9iKRh/V2rlVGn6j94OeZvHCgFFVvy8Z8Sebg
8w2TVy+p9/tn4K3U6V0V+MBuFfem9v/Xvqrbg/t//YIzMYP7n3TeSfuTtJ4L
5ngHulDnXsFS9ZQt9X47jkuezmQzsDpgbMYeFg97r89V8qHOidR9476PDaUI
XzZz/+gDLahtqJRXkOIjrvxprcfHYiSFyJ2Wr2vF+KSQR0fFeLB9d7p/nFUR
xNP1264mCDAx748wS5sLseaZM79NLMQLYeWknF4BVHS1z3m+4EDLOXQt278A
CwJK7cb8FECDwYl89omD46a31h4KKoDcncoB0zABCnulg4NduRj1uHNkpE4h
tNRLjV5eaUVfY/uT1et5iBQxumRaVASl9x+PNqc1w7XXNmjZKj7OfeRHaa0v
Qc90vVPtXC6KzZzHbszgY3p8xK13nWVYevdqwWD8cXBP/zEYf5obDScMxh9S
/CSdd9L+JK2nMnen76i/LZC69MHybwQPnEWrfB4bFuOgjbJOXI0AP/irZkf/
4OC35XuGdWEBWkRX/imMFGJE9soNvf0suM64NMZELB9JTqFZIjVC3AvsiNuy
qQliLlVzAt/nQmWK8fHqOiHcw3ZqdPsxoZFzYfit6bmY7jXB81atEFUKzk8S
mphYcCPLudUqFws13qz6XSHErtgzEumOLHixtKfZ++fh9OutJ0NkhEhr1r7n
v5eDbhnpFUsMCzDz8IQoNdNWzElor4505mGT0uS7ZyWLsfrejL6iUh7k93+8
qx3Dh0ywaeloYSnuMKZGDcZ/Ne36osH47yt+/vBg/CflI1L8JJ130v4krWey
ddgcv0ohVM3PN9b0NSFBs2PuaY08LG2z/3KfJUQZq8vcq7Ue3LDedT/52TBc
8SNLOkgI3aXvx+gZVaNuQM7ZYnoWDEf+8TQ+LsRd/aipK50rMb1BGJljlYlj
ZU15eTeE8PAYM8E7owp9Y2zDqriZKIh7cMKRLYRi8or+FSfrsbe91dD1SzbK
44cFdjOEWPWqZ/4hBRYU/T/4P7DIA2OJ+fJRRwV4Myb/yssgLiSPJpw9d7UQ
M2ZVtyg78tFmaly/4gYfIUZS61cfKkXqKPUJolT+FZYc2T6Yf00n25Y5UPmX
lN9J+YgUP0nnnbQ/1ej1rKLXk0+vZ9QmY8t+S2rdrpnMt1vKwIXSdb+bWBnI
W30m/8CAAMO8Zr00oPL2no55S/K70/BA/PpwbqMAVfbmjyf4FMLW4tC0UaZp
0P7p7KjTJ4DRmW8mzD/FOCX1aPJMQRounP8e6m9HvS+XkdJujxnoqnJ65zo+
E+vOr3o1o1GIwhfME7ZljXhlngzJpzkwWcjocf4ugLVdwtXMJA6mjh5TP+xx
AeYsPhdtEMyHO+vipb5zfBhU/qhyRSky9i1ZPah/xi88/2BQ/yy8lhCQTukf
kl4i5XdSPiLFT9J5J+3Pf+s5il5Pa3o9W0csHX4mQoCkEaszDiRmYZXm30tz
56Ti29HZfzIuU+uf8fQwe2Y6jiTvSU7wSoFF74pK7zcC7Izdpt+knY1jpc61
UpqplG5yjWZPEWJZmNy80DOlyHy/ixl9NB0Tzk2TPUPt88vTJheKHK5H/PGV
njc/ZYP19alf/1QhHt499neHLQfZFi89w00K0GrEDYvdwkdvkohE1V0+7v10
NNzmXYrA2vHGDtR63jM/xhhcT3GfH/lp/xf9SdJLpPxOykek+GlAn/cb9HmX
ps87aX+S1vODRsqzS0cEWOZkcPVhTjJMnHu3MlqSMbt7ZlfwPQEed3Tp8K5n
QNAkcdv1awqsN9exjokLoXJCuUPrcwmWP9+xKHpxOsSmyKToUevc+UMq7N3l
egTOyeCdSsuGzAjXkv1CARIfnYhFNgetu1t2P4koQH7s+IwZTjy0PPK/HpfG
x6zwVNmfpmUoMnPfeY2KD4ZLqkIG48NuXTmrwfhA0vMk/WlC6yXJIXqJlN9J
+YgUP0nnnbQ//63nK3o9hfR6fr6ualSdJkB212i1e1PyMOn5/aC4j6lYfcK7
a5+OEK+kFPWjfpQj/nyGz3G7DHy/9+nAu3ohPmt/CXtjwsQ9/z451W852JEZ
+MhlkQBeEaHjM/K5yHkzTES8rRAL+4LbZ8VwIJc09m8JtQ95E2v7ph6qwKWC
05b1VL4zEedpDua7w31zjAfzHak+Iul5kv4k6SVSfiflI1L8/HfetejznkWf
d9L+JK3n/DV80WHUejJuqZ69FVUH709Z2pZHsiEfbNWy9I4Qyy0fT5uyjo0D
xis1HXTycZVtmzVhbwv022e+L5rKh5+Ti/PxL8VY/pfJnDuPhYT5O/O6H/Jx
dN7f7unLq3GgQr5uUL+dOZCx8hil3+x7KiYP6jdSvUmqj0h6nqQ/SXqJlN/X
0vmojM5Hb+h8RIqfpPNO2p//1lOdXk/7f+s5Wdbr3sNW9E6xehukQeXxpHY1
3qciFB4IYX8r5+JDj/ShE5ROLgi4NP7w6HJM3x3w9X56PSzEZV0eM3iA2/rb
R9mNcJo3wX+wHplwJHt8HFWPfOqPMxusR0j1O6neJNVHJD1P0p8kvUTK7//y
URCdjzLpfESKn6TzTtqfpPV8EP+i0yiOiRuXlTphT+kHw8i8jR9qoW2ktuJR
PgM7t2sKDYo4CBvleWUHl4NShXltg/W13SS+6UOqvn5x5bTFYH1N6oeQ6ndS
vUmqj0h6nqQ/SXqJlN9J+YgUP0nnXYben+b0/lxL70/SeirNYdqGzyqB8ph3
oa57GlGll1/pH9yCPm/hqMF+kf3TP9mD/SLfbxW1g/0iUn+J1A8h1e+kepNU
H5H0PEl/kvQSKb/70/lo05B8RIqf/877+CHn/d/+dBiyP0nr+Qf/3f9Uef/f
/c/PI2/8V/+T5xvdffElC91XC+4toz5nXn6pQtW0Cic2pXtN2sjGXxNrrV5q
fy46JshRXleJ4HjmswwGGy7HzHKsKF09TvFx6J8TjP9n9ykqKo5531AMe2lH
Na3mHBifY52R4PFRP1JvfsywCvxdyLkhU5eIlVWjz6jlceCYphv0jNonSTuM
dKWpfSJ68PgZ+/IqvMno+a/r2Rvs/uv6iOHrPP5v10n3mfp79uzty4vR1jZu
mOvGfFzbqSXTc7IZj7sT+dHU8/wxqQsZfJ6lIzYGDj4P6TlJn4+VMEodzijH
p06DWx7cRIje1sv3qufgaEeM2IALFWe+RtwSvuCjZ0V3S2R0FfH6eomQpdmW
5Vj0yKVAflgSYq3PfXSV5KLKazW79Gw1kqO37M1u+ILSC+d17etZmDm14WUz
9Xs1J/msnkP93inld3jt1Pk6s2DMq8Hr0a/9/uu6jvHG/7p+t0s/dfA+0Q9v
Hhi8j5x9mMXgfUj3J92H9L2k+189teJxUHsRJm7d86xKuhoaI36Ejx/Rimyt
/DIZqg5WfTL3RxqjAnP/OLl94bSge6lsvdz5UryTutr+0bEJp59HSP2l6r1c
pcqqp2NLkHZ/+YvXqo1wrJhSnP6qBS2vDpk0zGdA/U9iv5kdBzs+e97TpnTc
L5GunqZbZejOs25b/JmFlPPanPlv+Xg7JoKvZFiDdPmn3LRxPFTFHdxzR5OF
vY85UtWeDKyKLXj1KJiqa1iKekuUuMhaOGLlJPcGfMV1z8OdPEz16TasndCI
lsVrXc2OVCOwYZbf+Awuzhlp6xRQv7f0oXTIDNkmzJcbr7PgOBWfDRb+bBpR
i84V3d7HJOvQttjL4uo1HhJPSjXKdjFhO6T+baDrXw/NWS17P7EwK93Eee97
Pi47GuZt0iD3vcvPr16/XYOJbL1lLQx9Pq53az8I+1QHiXCOnE4+B+G/X531
o/LCHJ1HYQeoOGXtM6dVdoAJNcdLgaEufEx7ULW4SasWCtyuqAwjLpVfxdLG
UbpulVmosDCqHC2Rd89uv92EvMtGUWa+1O96LvktVKMGvWcmf7vizoXhxYcS
Nyi9Le94RTf4TDmu/S26HNPVBJWnB6c3UvmL8QzBZ/2rUfPz0oMicy5Elzp2
dFGfF9rOeP73RTlOnZX60bOUBd7l78rRIVS+sy8e7S1XDYmiJ245rRxYlh2V
Wkw9/8c5I/sWzK9A/frwh62mLJyTa9bWfsrHm09Lxe+0VqH8zsu10es5MOj4
OH52Lh9BHj1r9Dsr0Lwt69gWSxYur7EM4VJ556BjiUMsowolR86Kr93Pxh3h
3IN21Oe5r/cicGwlikvyAm41laIvmqk+ubEJX3bwHB20mnH1p5902oFKZJ5J
YByR4eLxqD0TjjlwMD9rTumB2jrEBa786x7JQ8jIDy6fzzCRMSsqQlujCcyS
jNaKk3zYmU2tm1lZgx/rdugeTGNDMillzn3qPc4fcyEq6AYDoVUTJE3Z1H2z
PEuMqXjbO3EFp6mnDEGxNvvEjvGhZynxbTqV79SdTwlf7Cf358ca671NU2yB
6MRFyzIU+HjUjxt234phaD6s+LxVC9zcJ/moUPVma3FiSHZiMTbsV58at6QF
Dd+6V+6X5+NF4x6nRm4xfG1n1q0PbsbJtW2N7zfyUXXzjVDFtgSB+OE5NpyP
02qjWxzOUvvNSGPiKo1S1Ng6zX5qwoOI94JKyXQ+bl32vTDXvQxeW4zj75zg
IOSGv905SscmTrHclxxTgU+83qLqPgYmJXUyN32j9Ib/s8aiBA5KasWtdu6o
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

     "],
    VertexNormals->CompressedData["
1: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
dShY1/MuYxN6vkpd6RrWnf7TzACsQ8++1yH054vjxhNYJ706Nj6BdVPPDjqh
lxR2HSTjvE6dFj2E8/yytxc6cH4fud5L5KG+n2f24rzkn7tbBOcjhZTKUzhu
nt3G5nnCjaOLGedYOH56/nXbifc5Gv1I7HsllyRiv/sHZShivxRaekUC+2lz
4t947J+24jevYTsy3Nnj2K5mH+qXYHvy+JhFxYqQ/2/9c4duJihMB/k80Va/
hXRwm35RMXavH2zTTd1XzqfCq8xH3un6QzBweG10Kvf/dfarufizXySwS3v3
criQDcVH//R0eraA1MX8vNTv/bD5zs8zuG4fUdxH1PHj40JE/X7jc7Y9rjPd
iyMzcN2Zta+EqDdbbx1ciuui0yGVTFwnrXh9mKiPjk/rEzqeUvKX0PVxEe6E
nvc4rOSIdWd0HIfQoUwnj1dYf9qNrt+NdZKDebM81k0PSWHRWC9dS9f7JsXN
6w8oz0VxnqcHWjfg/D7d3HVsIzcPVXmWEXkpZutcIh9Rza3447hx0wvGrHAc
1U5sPYDj51+Tsed4n1sGBIrhfd9wrIfY776LdRnYLzftepuP/fTO5glR7J9/
ZI5WYTt2aSQTduVf9fwWtmfTYQeZ5DcUkGG9WYnXCHOLrp9iFDBUVtuSacoA
QUfHo3rUAVh2QKhM7SsJMjNVPT0cWSD//Ke//HQHTLkNlz/bPwiXJv/pg3Tn
jGrjvsjr2X5IGPMhUbdb2hXJ4Tqek3aWqN/NGyWNcJ0pmLOYqDvtDrT34HrT
3f0jUReFXgkn6qQXgmVEfSQ/SX2Idbz2PCYL6/oJup8M1vP2cutzsO58tSTj
ANah177plmL9maYh98WTq5NMwoazsG5aeDFdH+ullOpzb3Fev9tbNYLzPOP9
vYs4v3e0S0fhPOQy4WKP89K5JZ8343x0VueqKo6bObpFRByNKeAh4ueeymUa
eJ+TbvRm4X2/3KjpPd7vp++1hWC/dJZ95IP9dMOOq4R/mmzSNMZ2vFXirY7t
WnC6rRTbM+DwqmNSKlSIbjW2xCv1R4iU1CQJRLQeaKYLMSGrdP2m77z9cGr+
wYulLSR4O9tX4t9ZPoH7TP/2l2bWBBN9EGmf+Be4L/J1z5qnuB+Sjv6p2yU3
IKKOl/j7T/0+/326AK4zWysP2eG687Z/wg1cb/p+yH96jFsXOb4w/ILrJJkd
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
L7Md/khvRJxQNdP69DZQsH+9TNOfAx8LN6vf1fmOYK91zxnBLmB2nrwpksYB
k+9WJ3lu04AhkXoptL0DXEI1/mzQYkCeubH/6hQmnC09cWnWoBVIIi/VVvLT
oE/3gEnuFjYEXM4e1PYhQa2zi3FiJxnctsieky2tQSPtpN5lf8nwUpnPLxbL
a4y8LMtj1iUopYSa8KSYCj/6OXL5T7D7Ao1+ebCaAYnKrUm7md2QNiXUU2FN
BQtb05WRkyy4t/rXuEthG9D/HLbnaSKD0F3RjZ6eqYj8ikKp/4cJuVccnvLz
s8CKvdl2WIQJd/t5Qt5H92C9Rni75hgZvP7Dg/htTLqC5zO5A8p53lheCy8k
teI57eF/cP53tp/6PrIuE407xx0OwM6PqGr21XDs3Fj46ft8Jpbn5JisfgaW
74yOZsvsxnLdu0DDy3Qs35yW/L4DzzupKwN/L8FyjhvBty8m+PbrBN/ulb9m
f8REMqLt9zywGzuHpL2pASrY+dNpeKhqc3MIHJFU3kPGvstBd59ZEex71DeQ
nsHz4uMfazcvxfKjv7k5Lw8/Ewp+i2lZYflJdkmKnimWp2yPfZrQw3LUsLbq
cSUsf/wIey+C55HhkN0mDVgOeTqHA79LcOAydasXUYdjUdWFiYcm2PkXU3Bn
wVHs3JPWlp8UoiUDR11V/c8aCrKuTxb8jZ0DLINzwucPl8IwuyJ+AfY9Rees
66Rh31FrhEEEnl9FQuYfVMPy7Jlm9UMOWI7VtsmpCcDynL1H8iuE5bsetZQ9
Hlium24u883H8lBIVNSUJpaPmmOKNyzFctHT7S+EdbH88XbByK7bWB4Z1tbT
PI/lkBqCrw6aw1cPekVqpppGI4nRHTsrsXNabmbTFy3sfFaiveG5vS0b/grk
CqH8bpRg2+1qjZ1XZ4IT1vfd/Q4B849Zjrh0olN2hyObse9diX1d2YfdBOe/
rVx+vawVuW24Nb4P+76KXOLINVj+Fik+PmCB5fFDqjebBrAcvlSx7FkUlkcb
DJoqgrB8eiuwgroSy6U/+UpEhLA8Z+J5M4sXy3elzh3H8VyXecjQsgzLT3TO
4g5zLE+tqLnv+RTLUUkrDFewsBwTO175dReWa4od0tPwPPMPwTl/msM5x1Xd
8NJoi0BrlJ0nbLH7h7/xz3YD7N7Z+mJccWFJAVxo6Ui80tyGHh5mvliweABS
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
     "]], 
   {RGBColor[1, 0, 0], PointSize[
    Large], {Point3DBox[{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}], 
     Point3DBox[{{1, 0, 0}, {1, 1, 1}, {1, 2, 1}, {1, 3, 0}}], 
     Point3DBox[{{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 0}}], 
     Point3DBox[{{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}]}, 
    {GrayLevel[0.5], 
     Line3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 0}, {1,
       1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {2, 3, 
      0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}}], 
     Line3DBox[{{{0, 0, -1}, {1, 0, 0}, {2, 0, 0}, {3, 0, 0}}, {{0, 1, 0}, {1,
       1, 1}, {2, 1, 1}, {3, 1, 0}}, {{0, 2, 0}, {1, 2, 1}, {2, 2, 3}, {3, 2, 
      0}}, {{0, 3, 0}, {1, 3, 0}, {2, 3, 0}, {3, 3, -1}}}]}}, 
   {RGBColor[1, 0, 1], Thickness[Large], 
    BSplineCurve3DBox[{{{0, 0, -1}, {0, 1, 0}, {0, 2, 0}, {0, 3, 0}}, {{1, 0, 
     0}, {1, 1, 1}, {1, 2, 1}, {1, 3, 0}}, {{2, 0, 0}, {2, 1, 1}, {2, 2, 3}, {
     2, 3, 0}}, {{3, 0, 0}, {3, 1, 0}, {3, 2, 0}, {3, 3, -1}}},
     SplineDegree->3,
     SplineKnots->Automatic]}},
  AutomaticImageSize->True,
  Axes->False,
  Boxed->False,
  ImageSize->{466.4607189320704, 464.1398432859366},
  Lighting->"Neutral",
  Method->{},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-2.2787313506042173`, -2.158917758562129, 1.2635100092751776`},
  ViewVertical->{-0.544840240041024, 0.05146548286097167, 
   0.911883481871222}]], "Output",
 CellChangeTimes->{
  3.606245236195079*^9, 3.606246140514909*^9, 3.6062462066902246`*^9, 
   3.6062470830723915`*^9, 3.6062472648751106`*^9, 3.6064405717628574`*^9, 
   3.606522465544938*^9, 3.6066008412473125`*^9, 3.6066011139559107`*^9, 
   3.60660118475196*^9, 3.60660131343032*^9, 3.606601361893092*^9, 
   3.6066014845321064`*^9, 3.6066016544408245`*^9, 3.60660176205898*^9, 
   3.606601931245657*^9, 3.606601972824035*^9, 3.6066020160525074`*^9, 
   3.60660206643639*^9, 3.6066022330339184`*^9, 3.606602280466631*^9, 
   3.606602376709136*^9, 3.6066025404164996`*^9, 3.6066026216571465`*^9, 
   3.6066027004376526`*^9, 3.606603018718857*^9, 3.6066030623573527`*^9, {
   3.60660309360314*^9, 3.6066031106091127`*^9}, {3.606603453000696*^9, 
   3.606603463257283*^9}, 3.606603552649396*^9, 3.6066036186831727`*^9, 
   3.6066039042745075`*^9, 3.606604003884205*^9, 3.6066040998166924`*^9, 
   3.6066041410160484`*^9, 3.6066042917386694`*^9, {3.6066043971126966`*^9, 
   3.606604439390115*^9}, 3.606604611603965*^9, 3.6223322431042967`*^9, 
   3.632877865508424*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
NdkM1QWQJthWcsCox7uNpbwVn1ZnNLlociiU54NJilloi2SpMOmlEId1Qgmx
21mb10LPOiinjeLOdCG5rpgsNsu07kZ8/ZzBcNHLVNQOHu+J7KXDhN1ksE8Z
dXZfQhq5dJa64y/FNkf6xgOzfM8bw7EsHMtPo4auPxvTJux9Hk2gHtWzd9yh
Lv6AwvFr4uvWeHwFu2yaSWgbsPqYeas2Bi7HEi4PyOUPveTyLxqX/2n2roCM
3GoBMPzm2jjq4QmzILs3XOmbujkMisvVv9sD/vbX3T6hJJMy0OhU7hqVmihS
dncIpiaK25iVq3oobUFyJbe2NpLAuRGRTEnvOrk0q6578gBNFg/VVSseaioe
aismtoQzsKl2p75EOsmmCGV1ALXVR1rVsBBWeSS6zXmzFkpfKxpac7qmKUxF
qYmsjcRn7ZlgkRF63rGLfXle7KDi6iKIoRkW8yYltr56VnB5TdYuWBZMqARO
Ss/nUBRkFgvvpZoPT1bLfgupj91xJ9MYFXmJkgJXPiuwJaugMa44q/gLGtFG
cSXBFI+04w3bfMLqO3uv6/YoDT14dCkeQ77I2KvumMYDY/ce22E4sw6aOza3
7bHc90OA7QXXrTHAD2uOAf6x+KIxBvjHvh3+EuEfDT76yQz34UtZocQYsxIj
kgi/Fe48ItGHDJscE3nD3oinHO9nqN+LJMCU412fExJ84J4o8XaixCReZcYm
mDcD8+EXzcooi8E5v7RSWYMGy2zfenWVl36qq1Zb1FZkW7LlfEL7krFeZ01M
zr+M9xqLZJ2MO+8LgvzAINc2ryx4l0VrLqG9NUvSs7ST8IT4c962cU7GA+i8
ZNOZClpsOpzM+ibDChknSuJ9wqZSrCDGMzNHIZ2tcJOK401SJIwFlQ1Ka1z3
JLKawD3qRKMVr3hYdbirArQquLm3mrwNj2Af8VGhFfHBbIxkt4p8WtBHFLIf
SPiZd6McJsJRH7qj8UOH6QDSc7+WqMd37THSTktYv26mrF+C84s6WR+Nz5x3
sV4ejQ8fR8H6aLz3u0atN3/ZSP/DqcIXM4X0iduxVxtfCfFc5j/AoLJPscyQ
ZRi/2yPnItxDM0cxl22D8W0T9YTu0ku6g5yv+38/vFpeN8Blq2Rb2/E3IuJB
yjdry6SblrNio5BFPN6tL5qa543yxgLp1gpHWNQj5TDW0E0u6h225jKoAXEu
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Display the isoparametric curve on the surface
Allow user to choose the curve with a slider control and the parametric \
direction
(See options for ControlType in Manipulate. Choose your own type for the \
uvflag. PupupMenu is one option.)

\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6051222160773935`*^9, 3.6051222605062714`*^9}, {
  3.605193612129423*^9, 3.6051936122854233`*^9}, {3.6052042317002416`*^9, 
  3.605204246052267*^9}, {3.6052846573057556`*^9, 3.605284686212606*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", 
    RowBox[{"didn", "'"}], "t", " ", "come", " ", "together", " ", "very", 
    " ", "well"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6066009923159533`*^9, 3.6066009969652195`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bsurface", ",", "netplot", ",", "surfplot2"}], "}"}], ",", 
       " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.605197660445734*^9, 3.6051976613661356`*^9}, {
  3.6058112371327896`*^9, 3.605811253342972*^9}, {3.6058112974610558`*^9, 
  3.60581134338514*^9}, {3.6062461878609915`*^9, 3.606246189140194*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`u$$ = 0, $CellContext`v$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`v$$], 0, 1}, {
      Hold[$CellContext`u$$], 0, 1}}, Typeset`size$$ = {359., {225., 229.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`v$2398$$ = 0, $CellContext`u$2399$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`u$$ = 0, $CellContext`v$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`v$$, $CellContext`v$2398$$, 0], 
        Hold[$CellContext`u$$, $CellContext`u$2399$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Show[{$CellContext`bsurface, $CellContext`netplot, \
$CellContext`surfplot2}, Axes -> False, Boxed -> False, PlotRange -> All], 
      "Specifications" :> {{$CellContext`v$$, 0, 1}, {$CellContext`u$$, 0, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{410., {289., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.605811247570953*^9, 3.605811350385301*^9, 3.6058113839138346`*^9, 
   3.6060001171099024`*^9, 3.606000398697109*^9, 3.6060005276155024`*^9, 
   3.606001093598917*^9, {3.6060011707712564`*^9, 3.606001215697656*^9}, 
   3.6060013256531844`*^9, {3.6060013860804777`*^9, 3.606001440731899*^9}, 
   3.6060016201454167`*^9, 3.606002234767931*^9, {3.6060023007674193`*^9, 
   3.606002316540608*^9}, 3.606002377321828*^9, 3.6060026969196496`*^9, 
   3.606002882750926*^9, 3.606002940282208*^9, 3.606003122820775*^9, 
   3.6060031535169697`*^9, {3.6060032181462574`*^9, 3.6060032435844593`*^9}, 
   3.606003393289195*^9, 3.6062451227337346`*^9, 3.6062461406553087`*^9, 
   3.606246206799425*^9, 3.606247083415592*^9, 3.606247264890711*^9, 
   3.6064405718252573`*^9, 3.6065224655917387`*^9, 3.606600841286315*^9, 
   3.606601114047916*^9, 3.6066011847969627`*^9, 3.6066013134763227`*^9, 
   3.6066013619240932`*^9, 3.6066014845701084`*^9, 3.606601654484827*^9, 
   3.6066017621909876`*^9, 3.6066019312776585`*^9, 3.6066019730780497`*^9, 
   3.6066020162445188`*^9, 3.6066020665163937`*^9, 3.606602233170926*^9, 
   3.606602280601639*^9, 3.60660237677314*^9, 3.6066025404495015`*^9, 
   3.606602621689148*^9, 3.606602700474654*^9, 3.6066030187448587`*^9, 
   3.6066030624763594`*^9, {3.6066030937161465`*^9, 3.606603110719119*^9}, 
   3.6066034531227036`*^9, 3.606603552758402*^9, 3.6066036187121744`*^9, 
   3.6066039043005095`*^9, 3.606604003918207*^9, 3.606604099841694*^9, 
   3.6066041410430503`*^9, 3.606604291781672*^9, {3.606604397153699*^9, 
   3.6066044394381175`*^9}, 3.606604611627966*^9, 3.6223322431442966`*^9, 
   3.632877865680024*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Display the Frenet frame for one isoparametric curve.
Allow the user to vary the parameter on the curve in the Manipulate \
environment.
The Frenet frame should be color coded -- a different color for each vector. \
Create a FrameLabel to indicate color and vector correspondence. 

\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6051222811607075`*^9, 3.6051223346844015`*^9}, {
   3.605193614126227*^9, 3.6051936142822275`*^9}, {3.6052042902315445`*^9, 
   3.6052043787929*^9}, 3.605284696711425*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "I", " ", "just", " ", "used", " ", "the", " ", "same", " ", 
     "implementation", " ", "as", " ", "in", " ", "the", " ", "Frenet", " ", 
     "frame", " ", "problem", " ", "for", " ", "a", " ", "non"}], "-", 
    RowBox[{"isoparametric", " ", "curve"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.606600932948558*^9, 3.606600952117654*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"surfplot", ",", " ", 
         RowBox[{"partialu", "[", 
          RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
         RowBox[{"partialv", "[", 
          RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
         RowBox[{"tplane", "[", 
          RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", 
         RowBox[{"normalplot", "[", 
          RowBox[{"u", ",", " ", "v"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "1"}]}], ",", " ", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"-", "4"}], ",", "7"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ")"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"u", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606002808615517*^9, 3.606002809175518*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`u$$ = 0.315, $CellContext`v$$ = 0.53, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`u$$], 0, 1}, {
      Hold[$CellContext`v$$], 0, 1}}, Typeset`size$$ = {378., {187., 191.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`u$2426$$ = 0, $CellContext`v$2427$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`u$$ = 0, $CellContext`v$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`u$$, $CellContext`u$2426$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$2427$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{$CellContext`surfplot, 
         $CellContext`partialu[$CellContext`u$$, $CellContext`v$$], 
         $CellContext`partialv[$CellContext`u$$, $CellContext`v$$], 
         $CellContext`tplane[$CellContext`u$$, $CellContext`v$$], 
         $CellContext`normalplot[$CellContext`u$$, $CellContext`v$$]}, Boxed -> 
        False, AspectRatio -> 1/1, ViewPoint -> {-6, -4, 7}, PlotRange -> 
        All], "Specifications" :> {{$CellContext`u$$, 0, 
         1}, {$CellContext`v$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{429., {251., 256.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6060028105165205`*^9, 3.6060028828429313`*^9, 3.6060029403862143`*^9, 
   3.6060031229327784`*^9, 3.606003153728973*^9, {3.6060032182342625`*^9, 
   3.606003243673464*^9}, 3.606003393344198*^9, 3.6062451228467407`*^9, 
   3.6062461407021093`*^9, 3.6062462069554253`*^9, 3.6062470834935923`*^9, 
   3.6062472649531107`*^9, 3.6064405719188576`*^9, 3.6065224656541386`*^9, 
   3.606600841350319*^9, 3.606601114158922*^9, 3.606601184868967*^9, 
   3.6066013135793285`*^9, 3.606601361985097*^9, 3.606601484730118*^9, 
   3.606601654650837*^9, 3.6066017623459964`*^9, 3.606601931345663*^9, 
   3.606601973160054*^9, 3.6066020204947615`*^9, 3.6066020665973988`*^9, 
   3.6066022333329353`*^9, 3.606602280715646*^9, 3.6066023768581448`*^9, 
   3.6066025411835437`*^9, 3.6066026218811593`*^9, 3.6066027005416584`*^9, 
   3.6066030188038616`*^9, 3.606603062530363*^9, {3.60660309377915*^9, 
   3.6066031107821226`*^9}, 3.6066034531767063`*^9, 3.606603552821406*^9, 
   3.606603618849182*^9, 3.6066039043605127`*^9, 3.60660400397221*^9, 
   3.6066040998956966`*^9, 3.606604141098053*^9, 3.606604291836675*^9, {
   3.606604397208702*^9, 3.606604439498121*^9}, 3.6066046116909695`*^9, 
   3.6223322431942964`*^9, 3.6328778658204246`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.606002804495511*^9}],

Cell[CellGroupData[{

Cell["\<\
Extra Credit 1 ( Creative Bezier Surface )\
\>", "Section",
 CellChangeTimes->{{3.606601216099753*^9, 3.606601232618698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "I", " ", "reused", " ", "the", " ", "same", " ", "code", " ", "layout", 
     " ", "as", " ", "the", " ", "original", " ", "setup"}], ",", " ", 
    RowBox[{
    "but", " ", "I", " ", "had", " ", "to", " ", "use", " ", "new", " ", 
     RowBox[{"variables", ".", " ", "For"}], " ", "the", " ", "set", " ", 
     "of", " ", "points"}], ",", " ", "p", ",", " ", 
    RowBox[{
    "I", " ", "just", " ", "started", " ", "playing", " ", "around", " ", 
     "with", " ", "inputs", " ", "and", " ", "I", " ", "got", " ", "this", 
     " ", "result", " ", "which", " ", "looks", " ", "like", " ", "a", " ", 
     RowBox[{"kite", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Log10", "[", "i", "]"}], "*", 
             RowBox[{"Cos", "[", "j", "]"}]}], "+", 
            RowBox[{"Sin", "[", "i", "]"}], "-", 
            RowBox[{"Exp", "[", "j", "]"}]}], ")"}], "/", 
          RowBox[{"Exp", "[", "j", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pp", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "1"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "0"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"If", " ", 
       RowBox[{"pts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "is", " ", "a", " ", "row", " ", 
       "of", " ", "points", " ", "in", " ", "the", " ", "u"}], "-", 
      "direction"}], ",", " ", 
     RowBox[{
      RowBox[{
      "then", " ", "this", " ", "table", " ", "is", " ", "handy", " ", "for", 
       " ", "grabbing", " ", "the", " ", "contol", " ", "points", " ", "in", 
       " ", "the", " ", "v"}], "-", "direction"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ptrans", " ", "=", " ", 
     RowBox[{"Transpose", "[", "p", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Store", " ", "the", " ", "surface", " ", "degree", " ", "in", " ", "u", 
     " ", "and", " ", "v"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dimsion", " ", "=", " ", 
     RowBox[{"Dimensions", "[", "p", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degreeu", " ", "=", " ", 
     RowBox[{
      RowBox[{"dimsion", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"degreev", " ", "=", " ", 
     RowBox[{
      RowBox[{"dimsion", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "1"}]}], ";"}], 
   "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Patch degree \>\"", ",", "degreeu", ",", "\"\< by \>\"", ",", 
      "degreev"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<control points \>\"", ",", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "p", "]"}], "//", "N"}]}], "]"}], ";"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.6066012344658036`*^9, 3.606601296308341*^9}, {
  3.6066013450441284`*^9, 3.606601385235427*^9}, {3.606601427618851*^9, 
  3.6066014599947033`*^9}, {3.6066014993389535`*^9, 3.6066015182580357`*^9}, {
  3.606601585737895*^9, 3.606601608443194*^9}, {3.6066017298261366`*^9, 
  3.606601742433858*^9}, {3.606601811233793*^9, 3.6066018622247095`*^9}, {
  3.606601949728714*^9, 3.6066019981594844`*^9}, {3.6066020343525543`*^9, 
  3.6066020455851965`*^9}, {3.6066020873115835`*^9, 3.6066021416086893`*^9}, {
  3.606602194494714*^9, 3.606602199069976*^9}, {3.606602261958573*^9, 
  3.606602264110696*^9}, {3.6066022992467055`*^9, 3.606602302069867*^9}, {
  3.606602332847627*^9, 3.6066023620712986`*^9}, {3.606602395914234*^9, 
  3.6066025104617863`*^9}, {3.6066025704712186`*^9, 3.606602599060854*^9}, {
  3.606603605656428*^9, 3.6066036122058024`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Patch degree \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" by \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Patch degree ", 4, " by ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6066013138053417`*^9, 3.606601362104104*^9, 3.606601484821123*^9, 
   3.6066016547288413`*^9, 3.6066017623959994`*^9, 3.606601931454669*^9, 
   3.6066019732340584`*^9, 3.6066020206587715`*^9, 3.6066020666684027`*^9, 
   3.606602233381938*^9, 3.6066022808176517`*^9, 3.6066023769311485`*^9, 
   3.6066025412655478`*^9, 3.6066026219331617`*^9, 3.6066027005976615`*^9, 
   3.606603018856865*^9, 3.606603062582366*^9, {3.606603093835153*^9, 
   3.6066031108361254`*^9}, 3.60660345323271*^9, 3.6066035528744087`*^9, 
   3.6066036189401875`*^9, 3.606603904408516*^9, 3.6066040040332136`*^9, 
   3.6066040999446993`*^9, 3.606604141147056*^9, 3.6066042918866777`*^9, {
   3.6066043972597046`*^9, 3.6066044395481234`*^9}, 3.606604611770974*^9, 
   3.6223322432542963`*^9, 3.632877865882825*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"control points \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"1.`"},
            {
             RowBox[{"-", "0.6904401243468877`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"2.`"},
            {
             RowBox[{"-", "0.8861192859356319`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"3.`"},
            {
             RowBox[{"-", "0.9581056265497956`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"4.`"},
            {
             RowBox[{"-", "0.9845879213069109`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1.`"},
            {"5.`"},
            {
             RowBox[{"-", "0.9943302131030961`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"1.`"},
            {
             RowBox[{"-", "0.6056536094250107`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"2.`"},
            {
             RowBox[{"-", "0.8938937888781519`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"3.`"},
            {
             RowBox[{"-", "0.9695661613526008`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"4.`"},
            {
             RowBox[{"-", "0.9869495378499312`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2.`"},
            {"5.`"},
            {
             RowBox[{"-", "0.9932978432687479`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"1.`"},
            {
             RowBox[{"-", "0.8532493143325991`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"2.`"},
            {
             RowBox[{"-", "1.0077726426721048`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"3.`"},
            {
             RowBox[{"-", "1.016490794114585`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"4.`"},
            {
             RowBox[{"-", "1.0031273450906748`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3.`"},
            {"5.`"},
            {
             RowBox[{"-", "0.9981372186430347`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"4.`"},
            {"1.`"},
            {
             RowBox[{"-", "1.1587429563795797`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"4.`"},
            {"2.`"},
            {
             RowBox[{"-", "1.1363297074245307`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"4.`"},
            {"3.`"},
            {
             RowBox[{"-", "1.067353806592253`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"4.`"},
            {"4.`"},
            {
             RowBox[{"-", "1.0210691235384042`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"4.`"},
            {"5.`"},
            {
             RowBox[{"-", "1.003948577376369`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"5.`"},
            {"1.`"},
            {
             RowBox[{"-", "1.2138369772781203`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"5.`"},
            {"2.`"},
            {
             RowBox[{"-", "1.1691418246221987`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"5.`"},
            {"3.`"},
            {
             RowBox[{"-", "1.0821934380254832`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"5.`"},
            {"4.`"},
            {
             RowBox[{"-", "1.0259313100959082`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"5.`"},
            {"5.`"},
            {
             RowBox[{"-", "1.0051252390304164`"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          Column], "\[NoBreak]", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["control points ", 
   MatrixForm[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwI+2MPo0ADbx6ISz/ajijM4pETqXRWLfoMmzuHQ
trhF8eyKd2jiAg7/pju272t8jyYu4vC5KmxG70WYOIMDTH7Ly6VrmxMfo4kz
OOzuWKV6fNYbNHEOhzwtr7nr2dDNEXA4fKTaSHwquriIw9ebDP0SJ2HiHHB7
P07qabzo+xpNnMEh3+OhyTX5D2jiHA4fm6/d7HZGFxdwsDPxczrPgy4u4pB6
4H7Z3g8wewXg9uq9e8hr1vUJTZzBQfWkLn+GHro4h0O70cmpD4U/ookLOKTc
ODHZJ+wDmriIw2117SQdAZi4CNxeh5jGoAfZn9HEGRy2mF7iO7flE5o4h0OV
HYvgqoCPaOICDivv8Xw2y0I3X8TBIPCB8T+RD/sBwy6MJg==
    "]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6066013138053417`*^9, 3.606601362104104*^9, 3.606601484821123*^9, 
   3.6066016547288413`*^9, 3.6066017623959994`*^9, 3.606601931454669*^9, 
   3.6066019732340584`*^9, 3.6066020206587715`*^9, 3.6066020666684027`*^9, 
   3.606602233381938*^9, 3.6066022808176517`*^9, 3.6066023769311485`*^9, 
   3.6066025412655478`*^9, 3.6066026219331617`*^9, 3.6066027005976615`*^9, 
   3.606603018856865*^9, 3.606603062582366*^9, {3.606603093835153*^9, 
   3.6066031108361254`*^9}, 3.60660345323271*^9, 3.6066035528744087`*^9, 
   3.6066036189401875`*^9, 3.606603904408516*^9, 3.6066040040332136`*^9, 
   3.6066040999446993`*^9, 3.606604141147056*^9, 3.6066042918866777`*^9, {
   3.6066043972597046`*^9, 3.6066044395481234`*^9}, 3.606604611770974*^9, 
   3.6223322432542963`*^9, 3.632877865882825*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"set", " ", "up", " ", "graphics", " ", "variables"}], ",", " ", 
    RowBox[{
    "basically", " ", "same", " ", "code", " ", "as", " ", "the", " ", 
     "original", " ", "setup", " ", "for", " ", "part", " ", "1"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"surf2", "[", 
      RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"degreeu", ",", 
            RowBox[{"i", "-", "1"}], ",", "u"}], "]"}], "*", 
          RowBox[{"BernsteinBasis", "[", 
           RowBox[{"degreev", ",", 
            RowBox[{"j", "-", "1"}], ",", "v"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"polygon2", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Point", "[", "p", "]"}], ",", " ", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", " ", "Green", ",", " ", 
        RowBox[{"Line", "[", "p", "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"surfplotagain", " ", "=", " ", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"surf2", "[", 
        RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.8", "]"}]}], ",", " ", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"Mesh", "\[Rule]", "False"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"netplot2", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Red", ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Point", ",", " ", "p"}], "]"}], ",", " ", "Gray", ",", " ", 
        RowBox[{"Line", "[", "p", "]"}], ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Transpose", "[", "p", "]"}], "]"}]}], "}"}], "]"}]}], ";"}],
    " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"CP", "'"}], "s", " ", "with", " ", "netting"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"show", " ", "the", " ", "graphics"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polygon2", ",", " ", "surfplotagain", ",", " ", "netplot2"}], 
      "}"}], ",", " ", 
     RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.6066012049771166`*^9, {3.6066015446735463`*^9, 3.606601559899417*^9}, {
   3.606601622155978*^9, 3.606601639234955*^9}, 3.6066017263689384`*^9, {
   3.606601793041752*^9, 3.6066018071605597`*^9}, {3.6066018691211033`*^9, 
   3.606601910345462*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], 
     Point3DBox[
      NCache[{{{1, 1, E^(-1) (-E + Sin[1])}, {1, 2, E^(-2) (-E^2 + Sin[1])}, {
         1, 3, E^(-3) (-E^3 + Sin[1])}, {1, 4, E^(-4) (-E^4 + Sin[1])}, {
         1, 5, E^(-5) (-E^5 + Sin[1])}}, {{
         2, 1, E^(-1) (-E + Cos[1] Log[2]/Log[10] + Sin[2])}, {
         2, 2, E^(-2) (-E^2 + Cos[2] Log[2]/Log[10] + Sin[2])}, {
         2, 3, E^(-3) (-E^3 + Cos[3] Log[2]/Log[10] + Sin[2])}, {
         2, 4, E^(-4) (-E^4 + Cos[4] Log[2]/Log[10] + Sin[2])}, {
         2, 5, E^(-5) (-E^5 + Cos[5] Log[2]/Log[10] + Sin[2])}}, {{
         3, 1, E^(-1) (-E + Cos[1] Log[3]/Log[10] + Sin[3])}, {
         3, 2, E^(-2) (-E^2 + Cos[2] Log[3]/Log[10] + Sin[3])}, {
         3, 3, E^(-3) (-E^3 + Cos[3] Log[3]/Log[10] + Sin[3])}, {
         3, 4, E^(-4) (-E^4 + Cos[4] Log[3]/Log[10] + Sin[3])}, {
         3, 5, E^(-5) (-E^5 + Cos[5] Log[3]/Log[10] + Sin[3])}}, {{
         4, 1, E^(-1) (-E + Cos[1] Log[4]/Log[10] + Sin[4])}, {
         4, 2, E^(-2) (-E^2 + Cos[2] Log[4]/Log[10] + Sin[4])}, {
         4, 3, E^(-3) (-E^3 + Cos[3] Log[4]/Log[10] + Sin[4])}, {
         4, 4, E^(-4) (-E^4 + Cos[4] Log[4]/Log[10] + Sin[4])}, {
         4, 5, E^(-5) (-E^5 + Cos[5] Log[4]/Log[10] + Sin[4])}}, {{
         5, 1, E^(-1) (-E + Cos[1] Log[5]/Log[10] + Sin[5])}, {
         5, 2, E^(-2) (-E^2 + Cos[2] Log[5]/Log[10] + Sin[5])}, {
         5, 3, E^(-3) (-E^3 + Cos[3] Log[5]/Log[10] + Sin[5])}, {
         5, 4, E^(-4) (-E^4 + Cos[4] Log[5]/Log[10] + Sin[5])}, {
         5, 5, E^(-5) (-E^5 + Cos[5] Log[5]/Log[10] + Sin[5])}}}, {{{
         1, 1, -0.6904401243468877}, {1, 2, -0.8861192859356319}, {
         1, 3, -0.9581056265497956}, {1, 4, -0.9845879213069109}, {
         1, 5, -0.9943302131030961}}, {{2, 1, -0.6056536094250107}, {
         2, 2, -0.8938937888781519}, {2, 3, -0.9695661613526008}, {
         2, 4, -0.9869495378499312}, {2, 5, -0.9932978432687479}}, {{
         3, 1, -0.8532493143325991}, {3, 2, -1.0077726426721048`}, {
         3, 3, -1.016490794114585}, {3, 4, -1.0031273450906748`}, {
         3, 5, -0.9981372186430347}}, {{4, 1, -1.1587429563795797`}, {
         4, 2, -1.1363297074245307`}, {4, 3, -1.067353806592253}, {
         4, 4, -1.0210691235384042`}, {4, 5, -1.003948577376369}}, {{
         5, 1, -1.2138369772781203`}, {5, 2, -1.1691418246221987`}, {
         5, 3, -1.0821934380254832`}, {5, 4, -1.0259313100959082`}, {
         5, 5, -1.0051252390304164`}}}]]}, 
    {RGBColor[0, 1, 0], Thickness[0.005], 
     Line3DBox[
      NCache[{{{1, 1, E^(-1) (-E + Sin[1])}, {1, 2, E^(-2) (-E^2 + Sin[1])}, {
         1, 3, E^(-3) (-E^3 + Sin[1])}, {1, 4, E^(-4) (-E^4 + Sin[1])}, {
         1, 5, E^(-5) (-E^5 + Sin[1])}}, {{
         2, 1, E^(-1) (-E + Cos[1] Log[2]/Log[10] + Sin[2])}, {
         2, 2, E^(-2) (-E^2 + Cos[2] Log[2]/Log[10] + Sin[2])}, {
         2, 3, E^(-3) (-E^3 + Cos[3] Log[2]/Log[10] + Sin[2])}, {
         2, 4, E^(-4) (-E^4 + Cos[4] Log[2]/Log[10] + Sin[2])}, {
         2, 5, E^(-5) (-E^5 + Cos[5] Log[2]/Log[10] + Sin[2])}}, {{
         3, 1, E^(-1) (-E + Cos[1] Log[3]/Log[10] + Sin[3])}, {
         3, 2, E^(-2) (-E^2 + Cos[2] Log[3]/Log[10] + Sin[3])}, {
         3, 3, E^(-3) (-E^3 + Cos[3] Log[3]/Log[10] + Sin[3])}, {
         3, 4, E^(-4) (-E^4 + Cos[4] Log[3]/Log[10] + Sin[3])}, {
         3, 5, E^(-5) (-E^5 + Cos[5] Log[3]/Log[10] + Sin[3])}}, {{
         4, 1, E^(-1) (-E + Cos[1] Log[4]/Log[10] + Sin[4])}, {
         4, 2, E^(-2) (-E^2 + Cos[2] Log[4]/Log[10] + Sin[4])}, {
         4, 3, E^(-3) (-E^3 + Cos[3] Log[4]/Log[10] + Sin[4])}, {
         4, 4, E^(-4) (-E^4 + Cos[4] Log[4]/Log[10] + Sin[4])}, {
         4, 5, E^(-5) (-E^5 + Cos[5] Log[4]/Log[10] + Sin[4])}}, {{
         5, 1, E^(-1) (-E + Cos[1] Log[5]/Log[10] + Sin[5])}, {
         5, 2, E^(-2) (-E^2 + Cos[2] Log[5]/Log[10] + Sin[5])}, {
         5, 3, E^(-3) (-E^3 + Cos[3] Log[5]/Log[10] + Sin[5])}, {
         5, 4, E^(-4) (-E^4 + Cos[4] Log[5]/Log[10] + Sin[5])}, {
         5, 5, E^(-5) (-E^5 + Cos[5] Log[5]/Log[10] + Sin[5])}}}, {{{
         1, 1, -0.6904401243468877}, {1, 2, -0.8861192859356319}, {
         1, 3, -0.9581056265497956}, {1, 4, -0.9845879213069109}, {
         1, 5, -0.9943302131030961}}, {{2, 1, -0.6056536094250107}, {
         2, 2, -0.8938937888781519}, {2, 3, -0.9695661613526008}, {
         2, 4, -0.9869495378499312}, {2, 5, -0.9932978432687479}}, {{
         3, 1, -0.8532493143325991}, {3, 2, -1.0077726426721048`}, {
         3, 3, -1.016490794114585}, {3, 4, -1.0031273450906748`}, {
         3, 5, -0.9981372186430347}}, {{4, 1, -1.1587429563795797`}, {
         4, 2, -1.1363297074245307`}, {4, 3, -1.067353806592253}, {
         4, 4, -1.0210691235384042`}, {4, 5, -1.003948577376369}}, {{
         5, 1, -1.2138369772781203`}, {5, 2, -1.1691418246221987`}, {
         5, 3, -1.0821934380254832`}, {5, 4, -1.0259313100959082`}, {
         5, 5, -1.0051252390304164`}}}]]}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
11YVDrbOWGigoN8I4i1Xlp5S42GB4VXl2GBJvOJ630HzLjGYqppFh0bzcJLj
vE3+ORLY+/aMsr/zxWAzeOLKH1sevqEjecdQZRgpTnrM+/FCBCqxzompilws
XFw92f9jP7roMTp8J78B5NQNB21DJPE9OU70RH43yti50686ogZMp+018dfv
Rz8D7k59bd6K/r7GIiXNv1AeIqOz0LYZaa6Z9r9Mk2q0/bHAzCW0EHx1m0pi
yxP4Q9tGnk/xiOKfOTJb9UDxHQH1derzWidgb/hMMSQQH3IlvqSeDHfGsjyh
ukl19Ih9rOjKXjHQPqd9/yNpZrPbUzFQXlKe2gjLjH80iYHiSHFVO5AS/lu5
ET7NmRp9+YUUpqvr8/Tvq6Y2gnnxr+Ubcrh4++0npn6TpXDW2hGZxulieLm9
x0NtJQ/P70qxvbqIg+8O/7Pd+pOBjyfLW59J8rCmg/4VqWoJ/NQ3+fNFExFw
Np4KWpsphTdmnygPmzmEfvwaqaj6pR6cQhfydlhI4qr9v2V7lvSi2SKfuwoL
a+BkvcSjond9aN94O2GsoA05Ro+YMubAHygKP3La53sT0vqpYfistgalh37/
Yq5SCDMdklxbvBP4C4wKHwcdeMZ/33vgX6T+HQHNSTQ3GbxTeiTF7pP6ujnx
+bka3Vc/ixigPpRDfMk0Lr32ySS2LlQ3iY6+tM1zi10nhn2kz51I33Om2fU9
8BID5SXlqe1Rn+p/YWKgOFJcnTPkIgIvieG/7UnM5WK6Oi0Id3WRE4NV+fwz
w5FcbLGu5bWajhTuDk2+1zedgaDrWS4Be7l42pli6/7vknh1StDwUnchCLw2
OWdqSuElLL5X8ofRzLp99zuk62HT+pOXb32UwIe+yV2LftCH3mzjaEWdr4bZ
4/bByLZeNPGt+vK5X9pR6qg9b4vNK8Dczv1aaEMjEs3g/ymTr0Phy9odJ7sW
gMu0SKmM3nh+UaCxT2lWNJ//xiQv4ECAgOZOmkMXCC4ErugUwS6Sk2huKn/9
+ZHLSAYY4uvU5/0vvDeLms9APfGhQuJLv6Ty1+3czoAq0c21REdniy9KznNn
cwLpc9r3GQGREx5dYYDykvK0T3Z+ynr2cyiOFNd+FWPf7J8iKGy4r2kSK4Xp
+msbir35Vwi9U7rcuI5S+MG0uRHXVrA+UBMTqW/WAKenv9/y3ZiDhw4MrKxe
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
    "], {
     {Opacity[0.8], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxVmwfYF8W1h2fWjtgLihUEBFRUxIIFC9hALAgCItWCdMSO3ahBvVFU5KZo
7L1h74pijWKJMTEasUSNJRFL7BrveZl37355nu8857fz3505Oztzzu+c3a/d
mCkDJlcppdMWT2mx0H8P4XilkJXFtK+ijtPSquolQlZTLxmyunqpkG9ySu+H
XjrkjMDbhHwQuEN0uEHIPwJ/FLJsSNuQtcStQ9ZWLxeyjnr5kF9GH5+E/jhk
/ZAVtbNdC3t7MEZIx5BxMc7hIZ1sW1V7O6qx97D4/dCQNoEHhf4xxtguZELg
g0P+Fe1jqmJjl5CuLext75jMzcbajb2bqNcN2TRkPe3dTI29m6vpo7t6g5At
1B3Uq2j3Ro7JGAeEPT+HjduHDIjjXUJ6h3ymjduE9Gxh77Zq+thOjb3bq7G3
V0g37d1Rjb07qbF3Z3V3x+yuvb3VzH2vsOnz0FuGdA47c8iO0XZMyE4hX0b7
v7Vx95ADQ/qG9Au5On7fIWShbdtqbz819vYP2UF791Zj7z5q7N1Xjb37qbF3
jxZzs3OM81XoPiHXBd4l5OvAx4XuE/JN4O+08YCQwWL6GKLeM2Souq+6p3Zf
H/LrkN+E3KD+bcgI7cbekWrsHaXG3tFqnu0PId+H7B/yTth1dshuId1iXjcJ
+YlnWBUbDw05rIW9Y9XYe7gae/eI63927lPgg0JNCFks8PDQE0OWyMXWSSFL
5WLr5JCPAx8YsmLIOiFHRtvpIXcH/lXIciH/CDk3ZN+QI8K2SSErBJ5YFRuP
Cjm6hb3HqLH3WDX2LpPLvEwJuSlwzsXOW0Ivnoudt4deMhc754S+LWTpkEdC
Hg5pE/JEyP+ErBnybMjMkLVClgp7ls1lvpmDvVxfv0jlvrDzspDzQ2aGnKnd
2HuWGnv/lzkMWS/kvpB7Q1YOOR67QlYNOSFkcshqISeFTAlZPeTxkMdC1gh5
OuSpkLbMbdi2NhJ43ZDTtOGCVDBzfqEaey9SnxEyS429w72nvW2r53591pJr
tH3gc1yjG/DsXKsdmLfQvwvpyPMNfUlIp8Dnhb405PepYOZoy7C3R1Xm5vIW
9l6hxt4r1dh7lRp7r1ZfHHKNenbIdcyvdp4a4x4csiF+L2SlkHHRfqP2Ymft
p3YKuVl7sfOWFvbequbZ3qbG3jlq7L1djb13qLH3TjX23qXG3ntCrtXee9X4
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
7fX/X/DboY451X7qOFTbdqQ2/B/BiSG+
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
     "]], 
   {RGBColor[1, 0, 0], PointSize[
    Large], {Point3DBox[
      NCache[{{1, 1, E^(-1) (-E + Sin[1])}, {1, 2, E^(-2) (-E^2 + Sin[1])}, {
        1, 3, E^(-3) (-E^3 + Sin[1])}, {1, 4, E^(-4) (-E^4 + Sin[1])}, {
        1, 5, E^(-5) (-E^5 + Sin[1])}}, {{1, 1, -0.6904401243468877}, {
        1, 2, -0.8861192859356319}, {1, 3, -0.9581056265497956}, {
        1, 4, -0.9845879213069109}, {1, 5, -0.9943302131030961}}]], 
     Point3DBox[
      NCache[{{2, 1, E^(-1) (-E + Cos[1] Log[2]/Log[10] + Sin[2])}, {
        2, 2, E^(-2) (-E^2 + Cos[2] Log[2]/Log[10] + Sin[2])}, {
        2, 3, E^(-3) (-E^3 + Cos[3] Log[2]/Log[10] + Sin[2])}, {
        2, 4, E^(-4) (-E^4 + Cos[4] Log[2]/Log[10] + Sin[2])}, {
        2, 5, E^(-5) (-E^5 + Cos[5] Log[2]/Log[10] + Sin[2])}}, {{
        2, 1, -0.6056536094250107}, {2, 2, -0.8938937888781519}, {
        2, 3, -0.9695661613526008}, {2, 4, -0.9869495378499312}, {
        2, 5, -0.9932978432687479}}]], 
     Point3DBox[
      NCache[{{3, 1, E^(-1) (-E + Cos[1] Log[3]/Log[10] + Sin[3])}, {
        3, 2, E^(-2) (-E^2 + Cos[2] Log[3]/Log[10] + Sin[3])}, {
        3, 3, E^(-3) (-E^3 + Cos[3] Log[3]/Log[10] + Sin[3])}, {
        3, 4, E^(-4) (-E^4 + Cos[4] Log[3]/Log[10] + Sin[3])}, {
        3, 5, E^(-5) (-E^5 + Cos[5] Log[3]/Log[10] + Sin[3])}}, {{
        3, 1, -0.8532493143325991}, {3, 2, -1.0077726426721048`}, {
        3, 3, -1.016490794114585}, {3, 4, -1.0031273450906748`}, {
        3, 5, -0.9981372186430347}}]], 
     Point3DBox[
      NCache[{{4, 1, E^(-1) (-E + Cos[1] Log[4]/Log[10] + Sin[4])}, {
        4, 2, E^(-2) (-E^2 + Cos[2] Log[4]/Log[10] + Sin[4])}, {
        4, 3, E^(-3) (-E^3 + Cos[3] Log[4]/Log[10] + Sin[4])}, {
        4, 4, E^(-4) (-E^4 + Cos[4] Log[4]/Log[10] + Sin[4])}, {
        4, 5, E^(-5) (-E^5 + Cos[5] Log[4]/Log[10] + Sin[4])}}, {{
        4, 1, -1.1587429563795797`}, {4, 2, -1.1363297074245307`}, {
        4, 3, -1.067353806592253}, {4, 4, -1.0210691235384042`}, {
        4, 5, -1.003948577376369}}]], 
     Point3DBox[
      NCache[{{5, 1, E^(-1) (-E + Cos[1] Log[5]/Log[10] + Sin[5])}, {
        5, 2, E^(-2) (-E^2 + Cos[2] Log[5]/Log[10] + Sin[5])}, {
        5, 3, E^(-3) (-E^3 + Cos[3] Log[5]/Log[10] + Sin[5])}, {
        5, 4, E^(-4) (-E^4 + Cos[4] Log[5]/Log[10] + Sin[5])}, {
        5, 5, E^(-5) (-E^5 + Cos[5] Log[5]/Log[10] + Sin[5])}}, {{
        5, 1, -1.2138369772781203`}, {5, 2, -1.1691418246221987`}, {
        5, 3, -1.0821934380254832`}, {5, 4, -1.0259313100959082`}, {
        5, 5, -1.0051252390304164`}}]]}, 
    {GrayLevel[0.5], 
     Line3DBox[
      NCache[{{{1, 1, E^(-1) (-E + Sin[1])}, {1, 2, E^(-2) (-E^2 + Sin[1])}, {
         1, 3, E^(-3) (-E^3 + Sin[1])}, {1, 4, E^(-4) (-E^4 + Sin[1])}, {
         1, 5, E^(-5) (-E^5 + Sin[1])}}, {{
         2, 1, E^(-1) (-E + Cos[1] Log[2]/Log[10] + Sin[2])}, {
         2, 2, E^(-2) (-E^2 + Cos[2] Log[2]/Log[10] + Sin[2])}, {
         2, 3, E^(-3) (-E^3 + Cos[3] Log[2]/Log[10] + Sin[2])}, {
         2, 4, E^(-4) (-E^4 + Cos[4] Log[2]/Log[10] + Sin[2])}, {
         2, 5, E^(-5) (-E^5 + Cos[5] Log[2]/Log[10] + Sin[2])}}, {{
         3, 1, E^(-1) (-E + Cos[1] Log[3]/Log[10] + Sin[3])}, {
         3, 2, E^(-2) (-E^2 + Cos[2] Log[3]/Log[10] + Sin[3])}, {
         3, 3, E^(-3) (-E^3 + Cos[3] Log[3]/Log[10] + Sin[3])}, {
         3, 4, E^(-4) (-E^4 + Cos[4] Log[3]/Log[10] + Sin[3])}, {
         3, 5, E^(-5) (-E^5 + Cos[5] Log[3]/Log[10] + Sin[3])}}, {{
         4, 1, E^(-1) (-E + Cos[1] Log[4]/Log[10] + Sin[4])}, {
         4, 2, E^(-2) (-E^2 + Cos[2] Log[4]/Log[10] + Sin[4])}, {
         4, 3, E^(-3) (-E^3 + Cos[3] Log[4]/Log[10] + Sin[4])}, {
         4, 4, E^(-4) (-E^4 + Cos[4] Log[4]/Log[10] + Sin[4])}, {
         4, 5, E^(-5) (-E^5 + Cos[5] Log[4]/Log[10] + Sin[4])}}, {{
         5, 1, E^(-1) (-E + Cos[1] Log[5]/Log[10] + Sin[5])}, {
         5, 2, E^(-2) (-E^2 + Cos[2] Log[5]/Log[10] + Sin[5])}, {
         5, 3, E^(-3) (-E^3 + Cos[3] Log[5]/Log[10] + Sin[5])}, {
         5, 4, E^(-4) (-E^4 + Cos[4] Log[5]/Log[10] + Sin[5])}, {
         5, 5, E^(-5) (-E^5 + Cos[5] Log[5]/Log[10] + Sin[5])}}}, {{{
         1, 1, -0.6904401243468877}, {1, 2, -0.8861192859356319}, {
         1, 3, -0.9581056265497956}, {1, 4, -0.9845879213069109}, {
         1, 5, -0.9943302131030961}}, {{2, 1, -0.6056536094250107}, {
         2, 2, -0.8938937888781519}, {2, 3, -0.9695661613526008}, {
         2, 4, -0.9869495378499312}, {2, 5, -0.9932978432687479}}, {{
         3, 1, -0.8532493143325991}, {3, 2, -1.0077726426721048`}, {
         3, 3, -1.016490794114585}, {3, 4, -1.0031273450906748`}, {
         3, 5, -0.9981372186430347}}, {{4, 1, -1.1587429563795797`}, {
         4, 2, -1.1363297074245307`}, {4, 3, -1.067353806592253}, {
         4, 4, -1.0210691235384042`}, {4, 5, -1.003948577376369}}, {{
         5, 1, -1.2138369772781203`}, {5, 2, -1.1691418246221987`}, {
         5, 3, -1.0821934380254832`}, {5, 4, -1.0259313100959082`}, {
         5, 5, -1.0051252390304164`}}}]], 
     Line3DBox[
      NCache[{{{1, 1, E^(-1) (-E + Sin[1])}, {
         2, 1, E^(-1) (-E + Cos[1] Log[2]/Log[10] + Sin[2])}, {
         3, 1, E^(-1) (-E + Cos[1] Log[3]/Log[10] + Sin[3])}, {
         4, 1, E^(-1) (-E + Cos[1] Log[4]/Log[10] + Sin[4])}, {
         5, 1, E^(-1) (-E + Cos[1] Log[5]/Log[10] + Sin[5])}}, {{
         1, 2, E^(-2) (-E^2 + Sin[1])}, {
         2, 2, E^(-2) (-E^2 + Cos[2] Log[2]/Log[10] + Sin[2])}, {
         3, 2, E^(-2) (-E^2 + Cos[2] Log[3]/Log[10] + Sin[3])}, {
         4, 2, E^(-2) (-E^2 + Cos[2] Log[4]/Log[10] + Sin[4])}, {
         5, 2, E^(-2) (-E^2 + Cos[2] Log[5]/Log[10] + Sin[5])}}, {{
         1, 3, E^(-3) (-E^3 + Sin[1])}, {
         2, 3, E^(-3) (-E^3 + Cos[3] Log[2]/Log[10] + Sin[2])}, {
         3, 3, E^(-3) (-E^3 + Cos[3] Log[3]/Log[10] + Sin[3])}, {
         4, 3, E^(-3) (-E^3 + Cos[3] Log[4]/Log[10] + Sin[4])}, {
         5, 3, E^(-3) (-E^3 + Cos[3] Log[5]/Log[10] + Sin[5])}}, {{
         1, 4, E^(-4) (-E^4 + Sin[1])}, {
         2, 4, E^(-4) (-E^4 + Cos[4] Log[2]/Log[10] + Sin[2])}, {
         3, 4, E^(-4) (-E^4 + Cos[4] Log[3]/Log[10] + Sin[3])}, {
         4, 4, E^(-4) (-E^4 + Cos[4] Log[4]/Log[10] + Sin[4])}, {
         5, 4, E^(-4) (-E^4 + Cos[4] Log[5]/Log[10] + Sin[5])}}, {{
         1, 5, E^(-5) (-E^5 + Sin[1])}, {
         2, 5, E^(-5) (-E^5 + Cos[5] Log[2]/Log[10] + Sin[2])}, {
         3, 5, E^(-5) (-E^5 + Cos[5] Log[3]/Log[10] + Sin[3])}, {
         4, 5, E^(-5) (-E^5 + Cos[5] Log[4]/Log[10] + Sin[4])}, {
         5, 5, E^(-5) (-E^5 + Cos[5] Log[5]/Log[10] + Sin[5])}}}, {{{
         1, 1, -0.6904401243468877}, {2, 1, -0.6056536094250107}, {
         3, 1, -0.8532493143325991}, {4, 1, -1.1587429563795797`}, {
         5, 1, -1.2138369772781203`}}, {{1, 2, -0.8861192859356319}, {
         2, 2, -0.8938937888781519}, {3, 2, -1.0077726426721048`}, {
         4, 2, -1.1363297074245307`}, {5, 2, -1.1691418246221987`}}, {{
         1, 3, -0.9581056265497956}, {2, 3, -0.9695661613526008}, {
         3, 3, -1.016490794114585}, {4, 3, -1.067353806592253}, {
         5, 3, -1.0821934380254832`}}, {{1, 4, -0.9845879213069109}, {
         2, 4, -0.9869495378499312}, {3, 4, -1.0031273450906748`}, {
         4, 4, -1.0210691235384042`}, {5, 4, -1.0259313100959082`}}, {{
         1, 5, -0.9943302131030961}, {2, 5, -0.9932978432687479}, {
         3, 5, -0.9981372186430347}, {4, 5, -1.003948577376369}, {
         5, 5, -1.0051252390304164`}}}]]}}},
  AutomaticImageSize->True,
  Boxed->False,
  ImageSize->{1556.4647331038732`, 672.2826403699914},
  ViewAngle->0.6586859043486377,
  ViewPoint->{3.017585293751388, 0.3252378155105174, 1.496128122286775},
  ViewVertical->{0.5434031851507668, -0.06509964383725508, 
   3.447513420920417}]], "Output",
 CellChangeTimes->{
  3.606601657392994*^9, 3.606601762422001*^9, 3.6066019341118207`*^9, 
   3.606601975315178*^9, 3.606602022931901*^9, {3.606602068635515*^9, 
   3.6066020954580493`*^9}, {3.606602126123803*^9, 3.6066021482420683`*^9}, 
   3.6066022049403114`*^9, 3.606602236269103*^9, {3.606602283192787*^9, 
   3.6066023086632442`*^9}, 3.606602378282226*^9, {3.6066024251229053`*^9, 
   3.6066024505313587`*^9}, 3.606602484041275*^9, {3.606602515125053*^9, 
   3.6066025430436497`*^9}, {3.6066026047671804`*^9, 3.606602623592257*^9}, 
   3.6066027021917524`*^9, 3.606603020555962*^9, 3.6066030641784573`*^9, {
   3.606603095472247*^9, 3.606603112502221*^9}, 3.606603454928807*^9, 
   3.6066035544955015`*^9, 3.6066036209473023`*^9, 3.606603906460633*^9, 
   3.606604006015327*^9, 3.606604101975816*^9, 3.6066041431321697`*^9, 
   3.6066042938847923`*^9, {3.6066043992418184`*^9, 3.6066044416572447`*^9}, 
   3.606604613946099*^9, 3.6223322472243023`*^9, 3.632877867801628*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 945},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.0499999523162842`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 1241, 22, 142, "Title"],
Cell[1823, 46, 612, 13, 192, "Subsubtitle"],
Cell[2438, 61, 3523, 52, 765, "Subsubtitle"],
Cell[5964, 115, 667, 12, 192, "Subsubtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6668, 132, 125, 2, 105, "Title"],
Cell[6796, 136, 827, 14, 114, "Subsubtitle"],
Cell[CellGroupData[{
Cell[7648, 154, 5652, 141, 452, "Input"],
Cell[CellGroupData[{
Cell[13325, 299, 3568, 51, 24, "Print"],
Cell[16896, 352, 15085, 363, 189, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32030, 721, 408, 8, 114, "Subsubtitle"],
Cell[CellGroupData[{
Cell[32463, 733, 4791, 105, 192, "Input"],
Cell[37257, 840, 17023, 277, 445, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54329, 1123, 279, 7, 114, "Subsubtitle"],
Cell[CellGroupData[{
Cell[54633, 1134, 4165, 107, 272, "Input"],
Cell[58801, 1243, 23834, 394, 444, "Output"]
}, Open  ]],
Cell[82650, 1640, 143, 2, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82830, 1647, 981, 20, 167, "Subsubtitle"],
Cell[CellGroupData[{
Cell[83836, 1671, 7253, 155, 192, "Input"],
Cell[91092, 1828, 21951, 368, 503, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113092, 2202, 289, 7, 114, "Subsubtitle"],
Cell[CellGroupData[{
Cell[113406, 2213, 8966, 238, 312, "Input"],
Cell[122375, 2453, 3852, 65, 524, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126276, 2524, 921, 18, 300, "Subtitle"],
Cell[CellGroupData[{
Cell[127222, 2546, 4101, 96, 252, "Input"],
Cell[131326, 2644, 183855, 3025, 502, 104055, 1718, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315218, 5674, 492, 11, 140, "Subsubtitle"],
Cell[315713, 5687, 283, 6, 52, "Input"],
Cell[CellGroupData[{
Cell[316021, 5697, 885, 20, 92, "Input"],
Cell[316909, 5719, 3419, 59, 600, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320377, 5784, 508, 11, 140, "Subsubtitle"],
Cell[320888, 5797, 447, 9, 52, "Input"],
Cell[CellGroupData[{
Cell[321360, 5810, 1258, 30, 72, "Input"],
Cell[322621, 5842, 3279, 57, 524, "Output"]
}, Open  ]],
Cell[325915, 5902, 68, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[326008, 5907, 135, 3, 89, "Section"],
Cell[CellGroupData[{
Cell[326168, 5914, 5786, 143, 312, "Input"],
Cell[CellGroupData[{
Cell[331979, 6061, 1050, 17, 24, "Print"],
Cell[333032, 6080, 20026, 520, 235, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353107, 6606, 3492, 89, 212, "Input"],
Cell[356602, 6697, 56710, 929, 753, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
